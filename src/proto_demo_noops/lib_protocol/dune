; This file was automatically generated, do not edit.
; Edit file manifest/main.ml instead.

(library
 (name tezos_protocol_environment_demo_noops)
 (public_name tezos-protocol-demo-noops.environment)
 (instrumentation (backend bisect_ppx))
 (libraries
  tezos-protocol-environment)
 (library_flags (:standard -linkall))
 (modules Environment))

(rule
 (targets environment.ml)
 (action
  (write-file
   %{targets}
   "module Name = struct let name = \"demo-noops\" end\ninclude Tezos_protocol_environment.MakeV6(Name)()\nmodule CamlinternalFormatBasics = struct include CamlinternalFormatBasics end\n")))

(library
 (name tezos_raw_protocol_demo_noops)
 (public_name tezos-protocol-demo-noops.raw)
 (instrumentation (backend bisect_ppx))
 (libraries
  tezos-protocol-demo-noops.environment)
 (library_flags (:standard -linkall))
 (flags
  (:standard)
  -nostdlib
  -nopervasives
  -open Tezos_protocol_environment_demo_noops.Environment
  -open Tezos_protocol_environment_demo_noops.Environment.Pervasives
  -open Tezos_protocol_environment_demo_noops.Environment.Error_monad)
 (modules Main))

(library
 (name tezos_protocol_demo_noops)
 (public_name tezos-protocol-demo-noops)
 (instrumentation (backend bisect_ppx))
 (libraries
  tezos-protocol-environment
  tezos-protocol-environment.sigs
  tezos-protocol-demo-noops.raw)
 (flags
  (:standard)
  -nopervasives)
 (modules Protocol Tezos_protocol_demo_noops))

(install
 (package tezos-protocol-demo-noops)
 (section lib)
 (files (TEZOS_PROTOCOL as raw/TEZOS_PROTOCOL)))

(rule
 (targets protocol.ml)
 (action
  (write-file
   %{targets}
   "module Environment = Tezos_protocol_environment_demo_noops.Environment\nlet hash = Tezos_crypto.Protocol_hash.of_b58check_exn \"ProtoDemoNoopsDemoNoopsDemoNoopsDemoNoopsDemo6XBoYp\"\nlet name = Environment.Name.name\ninclude Tezos_raw_protocol_demo_noops\ninclude Tezos_raw_protocol_demo_noops.Main\n")))

(rule
 (targets tezos_protocol_demo_noops.ml)
 (action
  (write-file
   %{targets}
   "\nmodule Environment = Tezos_protocol_environment_demo_noops.Environment\nmodule Protocol = Protocol\n")))

(rule
 (alias runtest_compile_protocol)
 (deps main.ml main.mli (:src_dir TEZOS_PROTOCOL))
 (action (run %{bin:tezos-protocol-compiler} -no-hash-check -warn-error +a .)))

(library
 (name tezos_protocol_demo_noops_functor)
 (libraries
  tezos-protocol-environment
  tezos-protocol-environment.sigs)
 (flags
  (:standard)
  -nopervasives)
 (modules Functor))

(rule
 (targets functor.ml)
 (deps main.ml main.mli (:src_dir TEZOS_PROTOCOL))
 (action
  (with-stdout-to
   %{targets}
   (chdir
    %{workspace_root}
    (run %{bin:tezos-protocol-compiler.tezos-protocol-packer} %{src_dir})))))

(library
 (name tezos_embedded_protocol_demo_noops)
 (public_name tezos-embedded-protocol-demo-noops)
 (instrumentation (backend bisect_ppx))
 (libraries
  tezos-protocol-demo-noops
  tezos-protocol-updater
  tezos-protocol-environment)
 (library_flags (:standard -linkall))
 (modules Registerer))

(rule
 (targets registerer.ml)
 (deps main.ml main.mli (:src_dir TEZOS_PROTOCOL))
 (action
  (with-stdout-to
   %{targets}
   (chdir
    %{workspace_root}
    (run %{bin:tezos-embedded-protocol-packer} %{src_dir} demo_noops)))))
