V2 for Tree2
============

Same as :doc:`./v2-tree32`
except `Inode of Tree <#inode-of-tree>`__, `Inode_trees of
Inode_tree <#inode-trees-of-inode-tree>`__, `Inode of
Elt <#inode-of-elt>`__ and `Segment <#segment>`__

Tree Proof
----------

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1bytes                | 0b000000zy where y is |
|                       |                       | tag of kinded_hash    |
|                       |                       | for before (0b0 for   |
|                       |                       | \`Value, 0b1 for      |
|                       |                       | \`Node), z is also    |
|                       |                       | tag of kinded_hash    |
|                       |                       | for after(same)       |
+-----------------------+-----------------------+-----------------------+
| version               | 2 bytes               | int16                 |
+-----------------------+-----------------------+-----------------------+
| before                | 32 bytes              | hash                  |
+-----------------------+-----------------------+-----------------------+
| after                 | 32 bytes              | hash                  |
+-----------------------+-----------------------+-----------------------+
| state                 | variable              | `Tree <#tree>`__      |
+-----------------------+-----------------------+-----------------------+

Tree
~~~~

Value of Tree
^^^^^^^^^^^^^

Let ``p`` be the byte length of ``length``. If length < (1<<8) then p =
1. Else if length < (1<<16) then p = 2. Otherwise p = 4. (Undefined for
p = 3 now)

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1 byte                | 0b110000yy where yy   |
|                       |                       | is length tag (0b00   |
|                       |                       | for p = 1, 0b01 for p |
|                       |                       | = 2, 0b11 for p = 4)  |
+-----------------------+-----------------------+-----------------------+
| length                | p bytes               | byte length of value  |
+-----------------------+-----------------------+-----------------------+
| value                 | (length) bytes        | bytes                 |
+-----------------------+-----------------------+-----------------------+

Blinded_value of Tree
^^^^^^^^^^^^^^^^^^^^^

==== ======== ==========
Name Size     Contents
==== ======== ==========
tag  1 byte   0b11001000
hash 32 bytes hash
==== ======== ==========

Node of Tree
^^^^^^^^^^^^

=================== ======== ==================================================
Name                Size     Contents
=================== ======== ==================================================
tag + length        1 byte   0b100000yy where yy is length of list below (<=2)
(step \* tree) list variable sequence of (`Step <#step>`__ \* `Tree <#tree>`__)
=================== ======== ==================================================

Blinded_node of Tree
^^^^^^^^^^^^^^^^^^^^

==== ======== ==========
Name Size     Contents
==== ======== ==========
tag  1 byte   0b11010000
hash 32 bytes hash
==== ======== ==========

Inode of Tree
^^^^^^^^^^^^^^^

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1 byte                | 0b000000yy where yy   |
|                       |                       | is tag for length     |
|                       |                       | (0b00 for p = 1, 0b01 |
|                       |                       | for p = 2, 0b10 for p |
|                       |                       | = 4, 0b11 for p = 8)  |
+-----------------------+-----------------------+-----------------------+
| length                | p bytes               | int                   |
+-----------------------+-----------------------+-----------------------+
| (optional) inode_tree | variable              | 0th                   |
|                       |                       | `Inode_tree <#inode-t |
|                       |                       | ree>`__               |
+-----------------------+-----------------------+-----------------------+
| (optional) inode_tree | variable              | 1st                   |
|                       |                       | `Inode_tree <#inode-t |
|                       |                       | ree>`__               |
+-----------------------+-----------------------+-----------------------+

Extender of Tree
^^^^^^^^^^^^^^^^

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1 byte                | 0b110110yy where yy   |
|                       |                       | is tag for length     |
|                       |                       | (0b00 for p = 1, 0b01 |
|                       |                       | for p = 2, 0b10 for p |
|                       |                       | = 4, 0b11 for p = 8)  |
+-----------------------+-----------------------+-----------------------+
| length                | p bytes               | int                   |
+-----------------------+-----------------------+-----------------------+
| segment               | variable              | `Segment <#segment>`__|
+-----------------------+-----------------------+-----------------------+
| proof                 | variable              | `Inode_tree <#inode-t |
|                       |                       | ree>`__               |
+-----------------------+-----------------------+-----------------------+

Inode_tree
~~~~~~~~~~

Blinded_inode of Inode_tree
^^^^^^^^^^^^^^^^^^^^^^^^^^^

==== ======== ==========
Name Size     Contents
==== ======== ==========
tag  1 byte   0b11000000
hash 32 bytes hash
==== ======== ==========

Inode_values of Inode_tree
^^^^^^^^^^^^^^^^^^^^^^^^^^

=================== ======== ==================================================
Name                Size     Contents
=================== ======== ==================================================
tag + length        1 byte   0b100000yy where yy is length of list below (<=2)
(step \* tree) list variable sequence of (`Step <#step>`__ \* `Tree <#tree>`__)
=================== ======== ==================================================

Inode_trees of Inode_tree
^^^^^^^^^^^^^^^^^^^^^^^^^^^

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1 byte                | 0b000000yy for yy is  |
|                       |                       | tag for length (0b00  |
|                       |                       | for p = 1, 0b01 for p |
|                       |                       | = 2, 0b10 for p = 4,  |
|                       |                       | 0b11 for p = 8)       |
+-----------------------+-----------------------+-----------------------+
| length                | p bytes               | int                   |
+-----------------------+-----------------------+-----------------------+
| (optional) inode_tree | variable              | 0th                   |
|                       |                       | `Inode_tree <#inode-t |
|                       |                       | ree>`__               |
+-----------------------+-----------------------+-----------------------+
| (optional) inode_tree | variable              | 1st                   |
|                       |                       | `Inode_tree <#inode-t |
|                       |                       | ree>`__               |
+-----------------------+-----------------------+-----------------------+

Inode_extender of Inode_tree
^^^^^^^^^^^^^^^^^^^^^^^^^^^^

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1 byte                | 0b110100yy where yy   |
|                       |                       | is tag for length     |
|                       |                       | (0b00 for p = 1, 0b01 |
|                       |                       | for p = 2, 0b10 for p |
|                       |                       | = 4, 0b11 for p = 8)  |
+-----------------------+-----------------------+-----------------------+
| length                | p bytes               | int                   |
+-----------------------+-----------------------+-----------------------+
| segment               | variable              | `Segment <#segment>`__|
+-----------------------+-----------------------+-----------------------+
| proof                 | variable              | `Inode_tree <#inode-t |
|                       |                       | ree>`__               |
+-----------------------+-----------------------+-----------------------+

None of Inode_tree
^^^^^^^^^^^^^^^^^^

Used in proofs in `Inode of Tree <#inode-of-tree>`__ and `Inode_trees of
Inode_tree <#inode-trees-of-inode-tree>`__

==== ====== ==========
Name Size   Contents
==== ====== ==========
tag  1 byte 0b11100000
==== ====== ==========

Stream Proof
------------

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1bytes                | 0b000000zy where y is |
|                       |                       | tag of kinded_hash    |
|                       |                       | for before(0b0 for    |
|                       |                       | \`Value, 0b1 for      |
|                       |                       | \`Node), z is also    |
|                       |                       | tag of kinded_hash    |
|                       |                       | for after(same as     |
|                       |                       | before)               |
+-----------------------+-----------------------+-----------------------+
| version               | 2 bytes               | int16                 |
+-----------------------+-----------------------+-----------------------+
| before                | 32 bytes              | hash                  |
+-----------------------+-----------------------+-----------------------+
| after                 | 32 bytes              | hash                  |
+-----------------------+-----------------------+-----------------------+
| length                | 4 bytes               | byte length of state  |
+-----------------------+-----------------------+-----------------------+
| state                 | (length) bytes        | sequence of           |
|                       |                       | `Elt <#elt>`__        |
+-----------------------+-----------------------+-----------------------+

Elt
~~~

Value of Elt
^^^^^^^^^^^^

Let ``p`` be the byte length of ``length``. If length < (1<<8) then p =
1. Else if length < (1<<16) then p = 2. Otherwise p = 4. (Undefined for
p = 3 now)

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1 byte                | 0b110000yy where yy   |
|                       |                       | is length tag (0b00   |
|                       |                       | for p = 1, 0b01 for p |
|                       |                       | = 2, 0b11 for p = 4)  |
+-----------------------+-----------------------+-----------------------+
| length                | p bytes               | byte length of value  |
+-----------------------+-----------------------+-----------------------+
| value                 | (length) bytes        | bytes                 |
+-----------------------+-----------------------+-----------------------+

Node of Elt
^^^^^^^^^^^

========================== ======== ================================================================
Name                       Size     Contents
========================== ======== ================================================================
tag + length               1 byte   0b100000yy where yy is length of list below (<=2)
(step \* kinded_hash) list variable sequence of (`Step <#step>`__ \* `Kinded_hash <#kinded-hash>`__)
========================== ======== ================================================================

Inode of Elt
^^^^^^^^^^^^^^

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1 byte                | 0b0000zwyy where yy   |
|                       |                       | is tag for length     |
|                       |                       | (0b00 for p = 1, 0b01 |
|                       |                       | for p = 2, 0b10 for p |
|                       |                       | = 4, 0b11 for p = 8)  |
+-----------------------+-----------------------+-----------------------+
| length                | p bytes               | int                   |
+-----------------------+-----------------------+-----------------------+
| (optional) hash       | 0 or 32 bytes         | if w is 0b1, 0th hash |
|                       |                       | (Otherwise, this      |
|                       |                       | record does not       |
|                       |                       | exist)                |
+-----------------------+-----------------------+-----------------------+
| (optional) hash       | 0 or 32 bytes         | if z is 0b1, 1st hash |
|                       |                       | (same as above)       |
+-----------------------+-----------------------+-----------------------+

Inode_extender of Elt
^^^^^^^^^^^^^^^^^^^^^

+-----------------------+-----------------------+-----------------------+
| Name                  | Size                  | Contents              |
+=======================+=======================+=======================+
| tag                   | 1 byte                | 0b111000yy where yy   |
|                       |                       | is tag for length     |
|                       |                       | (0b00 for p = 1, 0b01 |
|                       |                       | for p = 2, 0b10 for p |
|                       |                       | = 4, 0b11 for p = 8)  |
+-----------------------+-----------------------+-----------------------+
| length                | p bytes               | int                   |
+-----------------------+-----------------------+-----------------------+
| segment               | variable              | `Segment <#segment>`__|
+-----------------------+-----------------------+-----------------------+
| proof                 | 32 bytes              | hash                  |
+-----------------------+-----------------------+-----------------------+

Kinded_hash
~~~~~~~~~~~

==== ======== =============================================
Name Size     Contents
==== ======== =============================================
tag  1 byte   0b00000000 for \`Value, 0b00000001 for \`Node
hash 32 bytes hash
==== ======== =============================================

Other Components
----------------

Step
~~~~

======= ============== ========
Name    Size           Contents
======= ============== ========
length  1 byte         < 256
content (length) bytes bytes
======= ============== ========

Segment
~~~~~~~~~

Same as in :doc:`v1-tree2`

* The segment int is in 1 bits
* 10\* is filled at the end of the bytes
* ``n`` segments need ``(n+8)/8`` bytes

::

   ex: Encoding of [a; b; c; d; e; ..; z]

   |76543210|7654.. ..       |76543210|
   |abcdefgh|ijkl.. ..        vwxyz100|

   |76543210|7654.. ..  43210|76543210|
   |abcdefgh|ijkl.. ..  uvwxy|z1000000|

   |76543210|7654.. .. 543210|76543210|
   |abcdefgh|ijkl.. .. uvwxyz|10000000|

======= ============== ===============================
Name    Size           Contents
======= ============== ===============================
length  1 byte         < 256
content (length) bytes 1 bit integers with termination
======= ============== ===============================
