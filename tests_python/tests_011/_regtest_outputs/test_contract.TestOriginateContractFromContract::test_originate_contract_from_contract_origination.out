tests_011/test_contract.py::TestOriginateContractFromContract::test_originate_contract_from_contract_origination

Node is bootstrapped.
Estimated gas: 1416.787 units (will add 100 for safety)
Estimated storage: 350 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[BLOCK_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [BLOCK_HASH] to be included --confirmations 5 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [CONTRACT_HASH]
    Fee to the baker: ꜩ0.000475
    Expected counter: [EXPECTED_COUNTER]
    Gas limit: 1517
    Storage limit: 370 bytes
    Balance updates:
      [CONTRACT_HASH] ................ -ꜩ0.000475
      fees(the baker who will include this operation,0) ... +ꜩ0.000475
    Origination:
      From: [CONTRACT_HASH]
      Credit: ꜩ200
      Script:
        { parameter unit ;
          storage unit ;
          code { DROP ;
                 UNIT ;
                 AMOUNT ;
                 NONE key_hash ;
                 CREATE_CONTRACT
                   { parameter unit ; storage unit ; code { CDR ; NIL operation ; PAIR } } ;
                 DIP { DROP ; PUSH unit Unit ; NIL operation } ;
                 CONS ;
                 PAIR } }
        Initial storage: Unit
        No delegate for this contract
        This origination was successfully applied
        Originated contracts:
          [CONTRACT_HASH]
        Storage size: 93 bytes
        Paid storage size diff: 93 bytes
        Consumed gas: 1416.787
        Balance updates:
          [CONTRACT_HASH] ... -ꜩ0.02325
          [CONTRACT_HASH] ... -ꜩ0.06425
          [CONTRACT_HASH] ... -ꜩ200
          [CONTRACT_HASH] ... +ꜩ200

New contract [CONTRACT_HASH] originated.
Contract memorized as originate_contract.
Injected block [BLOCK_HASH]
[ [], [], [], [ "[BLOCK_HASH]" ] ]
