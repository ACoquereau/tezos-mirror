<testsuites>
  <testsuite tests="5426">
    <testcase classname="tests_013.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\n]" time="9.205" />
    <testcase classname="tests_013.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\nign]" time="0.907" />
    <testcase classname="tests_013.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\npassword]" time="0.894" />
    <testcase classname="tests_013.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[password\n]" time="0.779" />
    <testcase classname="tests_013.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\npassword\n]" time="0.898" />
    <testcase classname="tests_013.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\n\npassword\n]" time="1.439" />
    <testcase classname="tests_013.test_contract.TestComparables" name="test_comparable_unit" time="7.628" />
    <testcase classname="tests_013.test_contract.TestComparables" name="test_comparable_options" time="2.082" />
    <testcase classname="tests_013.test_contract.TestComparables" name="test_comparable_unions" time="2.621" />
    <testcase classname="tests_013.test_contract.TestComparables" name="test_comparable_pair" time="8.849" />
    <testcase classname="tests_013.test_contract.TestComparables" name="test_order_of_pairs" time="1.040" />
    <testcase classname="tests_013.test_contract.TestComparables" name="test_comparable_chain_id" time="2.089" />
    <testcase classname="tests_013.test_contract.TestComparables" name="test_comparable_signature" time="3.131" />
    <testcase classname="tests_013.test_contract.TestComparables" name="test_comparable_key" time="1.562" />
    <testcase classname="tests_013.test_contract.TestComparables" name="test_comparable_key_different_schemes" time="6.672" />
    <testcase classname="tests_013.test_contract.TestBadIndentation" name="test_bad_indentation_ill_typed" time="7.085" />
    <testcase classname="tests_013.test_contract.TestBadIndentation" name="test_bad_indentation_hash" time="0.522" />
    <testcase classname="tests_013.test_contract.TestBadIndentation" name="test_formatting" time="0.526" />
    <testcase classname="tests_013.test_contract.TestBadIndentation" name="test_formatted_hash" time="0.516" />
    <testcase classname="tests_013.test_contract.TestBadIndentation" name="test_formatted_typechecks" time="0.938" />
    <testcase classname="tests_013.test_contract_macros.TestBigmap" name="test_bigmap" time="18.231" />
    <testcase classname="tests_013.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_init" time="31.971" />
    <testcase classname="tests_013.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_wait_for_two_cycles" time="18.844" />
    <testcase classname="tests_013.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_get_all_blocks" time="37.231" />
    <testcase classname="tests_013.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_cycle_alignment" time="0.001" />
    <testcase classname="tests_013.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_collect_seed_nonce_hashes" time="0.001" />
    <testcase classname="tests_013.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_check_revelations" time="2.388" />
    <testcase classname="tests_013.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_init_nodes" time="30.463" />
    <testcase classname="tests_013.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_some_bakers" time="0.210" />
    <testcase classname="tests_013.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_activate" time="8.595" />
    <testcase classname="tests_013.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_remaining_bakers" time="12.324" />
    <testcase classname="tests_013.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_wait" time="20.009" />
    <testcase classname="tests_013.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_level" time="33.594" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_init" time="6.674" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_choose_players" time="1.067" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_bake" time="0.555" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_deposit" time="1.063" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_level" time="30.018" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_preendorse" time="2.155" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_transfer" time="0.538" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_endorse" time="2.176" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_transfer_is_pending" time="1.921" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_bake_again" time="3.161" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_level_again" time="0.596" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_balance" time="1.046" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBake" name="test_bake_fail" time="0.952" />
    <testcase classname="tests_014.test_bootstrap.TestThresholdZero" name="test_setup_network" time="6.144" />
    <testcase classname="tests_014.test_bootstrap.TestThresholdZero" name="test_bootstrap" time="0.995" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/originator.tz]" time="7.108" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract.tz]" time="0.531" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_rootname.tz]" time="0.536" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_account.tz]" time="0.528" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_flags.tz]" time="0.530" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/steps_to_quota.tz]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/originator.tz]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract.tz]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_rootname.tz]" time="0.528" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_account.tz]" time="0.530" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_flags.tz]" time="0.531" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/steps_to_quota.tz]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unfailwithable.tz-wrong stack type for instruction FAILWITH]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unrightable.tz-wrong stack type for instruction RIGHT]" time="0.524" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unleftable.tz-wrong stack type for instruction LEFT]" time="0.528" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_ungetable.tz-wrong stack type for instruction GET]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpairable.tz-wrong stack type for instruction UNPAIR]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undug2able.tz-wrong stack type for instruction DUG]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undugable.tz-wrong stack type for instruction DUG]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undig2able.tz-wrong stack type for instruction DIG]" time="0.528" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undigable.tz-wrong stack type for instruction DIG]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undip2able.tz-wrong stack type for instruction DUP]" time="0.525" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undipable.tz-wrong stack type for instruction DUP]" time="0.528" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undup2able.tz-wrong stack type for instruction DUP]" time="0.532" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undropable.tz-wrong stack type for instruction DROP]" time="0.525" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable.tz-wrong stack type for instruction DUP]" time="0.530" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable_in_lambda.tz-wrong stack type for instruction DUP]" time="0.525" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[pack_operation.tz-operation type forbidden in parameter, storage and constants]" time="0.531" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[pack_big_map.tz-big_map or sapling_state type not expected here]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[invalid_self_entrypoint.tz-Contract has no entrypoint named D]" time="0.530" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[contract_annotation_default.tz-unexpected_default_entrypoint]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[missing_only_storage_field.tz-Missing contract field: storage]" time="0.528" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[missing_only_code_field.tz-Missing contract field: code]" time="0.524" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[missing_only_parameter_field.tz-Missing contract field: parameter]" time="0.528" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[missing_parameter_and_storage_fields.tz-Missing contract field: parameter]" time="0.524" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[multiple_parameter_field.tz-duplicate contract field: parameter]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[multiple_code_field.tz-duplicate contract field: code]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_field.tz-duplicate contract field: storage]" time="0.542" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_and_code_fields.tz-duplicate contract field: storage]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[set_update_non_comparable.tz-Type nat\\s+is not compatible with type list operation]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[chain_id_arity.tz-primitive chain_id expects 0 arguments but is given 1]" time="0.522" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[big_dip.tz-expected a positive 10-bit integer]" time="0.525" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[big_drop.tz-expected a positive 10-bit integer]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[never_literal.tz-type never has no inhabitant.]" time="0.537" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[comb0.tz-PAIR expects an argument of at least 2]" time="0.525" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[comb1.tz-PAIR expects an argument of at least 2]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[uncomb0.tz-UNPAIR expects an argument of at least 2]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[uncomb1.tz-UNPAIR expects an argument of at least 2]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[dup0.tz-DUP n expects an argument of at least 1]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_with_parens.tz-big_map or sapling_state type not expected here]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_without_parens.tz-primitive PUSH expects 2 arguments but is given 4]" time="0.528" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[pack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.532" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[unpack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[ticket_dup.tz-ticket nat cannot be used here because it is not duplicable]" time="0.530" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[ticket_unpack.tz-Ticket in unauthorized position]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[ticket_apply.tz-Ticket in unauthorized position]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[ticket_in_ticket.tz-comparable type expected.Type ticket unit is not comparable]" time="0.525" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[dip_failwith.tz-The FAIL instruction must appear in a tail position.]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_ill_typecheck[map_failwith.tz-The proper type of the return list cannot be inferred.]" time="0.523" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_zero_transfer_to_implicit_contract" time="0.532" />
    <testcase classname="tests_014.test_contract.TestContracts" name="test_zero_transfer_to_nonexistent_contract" time="0.950" />
    <testcase classname="tests_014.test_contract.TestTZIP4View" name="test_run_view" time="10.236" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{}-10-{ 10 }]" time="7.098" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ 10 }--5-{ -5 ; 10 }]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ -5 ; 10 }-99-{ 99 ; -5 ; 10 }]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[none.tz-Some 10-Unit-None]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ret_int.tz-None-Unit-(Some 300)]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{}-{}]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 1 ; 1 ; 1 }-{ 1 ; 2 ; 3 ; 4 }]" time="0.536" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 2 ; 3 ; 0 }-{ 1 ; 3 ; 5 ; 3 }]" time="0.528" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[emit.tz-Unit-Unit-Unit]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{}-{}]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{}-{}]" time="0.528" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.534" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;Hello&quot;-(Some &quot;Hello&quot;)]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;abcd&quot;-(Some &quot;abcd&quot;)]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-None-Pair 0 0-None]" time="0.530" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 10 5-None]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 0-(Some &quot;&quot;)]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 10-None]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 2-(Some &quot;Fo&quot;)]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 3-None]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 1-(Some &quot;o&quot;)]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some&quot;FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo&quot;-Pair 1 10000-None]" time="0.538" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-None-Pair 0 1-None]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 0-(Some 0x)]" time="0.530" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 1-(Some 0xaa)]" time="0.530" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)0]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 2-(Some 0xbbcc)]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 3-None]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)1]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some  1 10000-None]" time="0.529" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True False)-(Some (Pair True False))]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False True)-(Some (Pair False True))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True True)-(Some (Pair True True))]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False False)-(Some (Pair False False))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[car.tz-0-(Pair 34 17)-34]" time="0.531" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cdr.tz-0-(Pair 34 17)-17]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-True-(Some False)]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-False-(Some True)]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False False)-(Some False)]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False True)-(Some False)]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True False)-(Some False)]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True True)-(Some True)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False False)-(Some False)]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False True)-(Some True)]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True False)-(Some True)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True True)-(Some True)]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False False)-False]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False True)-False]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True False)-False]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True True)-True]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_binary.tz-Unit-Unit-Unit]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 4 8)-(Some 12)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 0 8)-(Some 8)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 8 0)-(Some 8)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 15 4)-(Some 15)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 14 1)-(Some 15)]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 7 7)-(Some 7)]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 0)-(Some -1)]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 8)-(Some -9)]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 7)-(Some -8)]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -9)-(Some 8)]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -8)-(Some 7)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 0)-(Some -1)]" time="0.536" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 8)-(Some -9)]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 7)-(Some -8)]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False False)-(Some (Left False))]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False True)-(Some (Left True))]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True False)-(Some (Left True))]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True True)-(Some (Left False))]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 0)-(Some (Right 0))]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 1)-(Some (Right 1))]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 0)-(Some (Right 1))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 1)-(Some (Right 0))]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 21)-(Some (Right 63))]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 63)-(Some (Right 21))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 8 1))-(Some 16)]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 0))-(Some 0)]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 1))-(Some 0)]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 1 2))-(Some 4)]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 15 2))-(Some 60)]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 8 1))-(Some 4)]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 0))-(Some 0)]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 1))-(Some 0)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 1 2))-(Some 0)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 15 2))-(Some 3)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-&quot;abc&quot;]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{}-&quot;&quot;]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;Hello&quot; ; &quot; &quot; ; &quot;World&quot; ; &quot;!&quot; }-&quot;Hello World!&quot;]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xcd }-{ 0xffcd }]" time="0.547" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{}-{}]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xab ; 0xcd }-{ 0xffab ; 0xffcd }]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.544" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{}-{}]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.529" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{}-{}]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 1 }-{ Elt 0 1 }]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 }-{ Elt 0 0 }]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 ; Elt 3 4 }-{ Elt 0 0 ; Elt 3 4 }]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair { Elt 0 1 } (Some False))]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair {} None)-1-(Pair {} (Some False))]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair { Elt 1 0 } (Some True))]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair { Elt 1 4 ; Elt 2 11 } (Some False))]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair { Elt &quot;foo&quot; 1 } (Some False))]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair {} (Some False))]" time="0.551" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair { Elt &quot;foo&quot; 0 } (Some True))]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some False))]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{}-10-{}]" time="0.528" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;foo&quot; 1 }-10-{ Elt &quot;foo&quot; 11 }]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 }-15-{ Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 }]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))0]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))0]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))0]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))0]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))0]" time="0.539" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))0]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair 4 (Some True))]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair 4 (Some False))]" time="0.529" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))1]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))1]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))1]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))1]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))1]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))1]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{}-{}]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;asdf&quot; ; &quot;bcde&quot; }-{ &quot;asdf&quot; ; &quot;bcde&quot; }]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{ &quot;d&quot; ; &quot;e&quot; ; &quot;f&quot; }-&quot;abcdef&quot;]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{}-&quot;abc&quot;]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x00ab-{ 0xcd ; 0xef ; 0x00 }-0x00abcdef00]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{ 0x00 ; 0x11 ; 0x00 }-0x001100]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0xabcd-{}-0xabcd]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{}-0x]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 10 ; 2 ; 1 }-20]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 3 ; 6 ; 9 }-162]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{}-0]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 }-1]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair {} None)-&quot;Hi&quot;-(Pair {} (Some False))]" time="0.537" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hi&quot; } None)-&quot;Hi&quot;-(Pair { &quot;Hi&quot; } (Some True))]" time="0.528" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hello&quot; ; &quot;World&quot; } None)-&quot;&quot;-(Pair { &quot;Hello&quot; ; &quot;World&quot; } (Some False))]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{}-0]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 }-1]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{}-0]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ 1 }-1]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ -100 ; 1 ; 2 ; 3 }--94]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{}-0]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 }-1]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 }-3]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 ;             Elt &quot;d&quot; 4 ; Elt &quot;e&quot; 5 ; Elt &quot;f&quot; 6 }-6]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair {} {})-(Some True)]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;c&quot; } { &quot;B&quot; })-(Some False)]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;A&quot; } { &quot;B&quot; })-(Some False)]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; } { &quot;B&quot; })-(Some True)]" time="0.530" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; } { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; })-(Some True)]" time="0.531" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; } { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; })-(Some True)]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;World!&quot; }-{ &quot;Hello World!&quot; }]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{}-{}]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;test1&quot; ; &quot;test2&quot; }-{ &quot;Hello test1&quot; ; &quot;Hello test2&quot; }]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[empty_map.tz-{}-Unit-{ Elt &quot;hello&quot; &quot;world&quot; }]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;hello&quot;-(Pair (Some &quot;hi&quot;) { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;&quot;-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;1&quot; &quot;one&quot; ;             Elt &quot;2&quot; &quot;two&quot; })-&quot;1&quot;-(Pair (Some &quot;one&quot;) { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; })]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None {})]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None { Elt &quot;hello&quot; 4 })]" time="0.531" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) {})]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) { Elt &quot;hello&quot; 5 })]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None { Elt &quot;hello&quot; 4 ; Elt &quot;hi&quot; 5 })]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })0]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })1]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 0 100 ; Elt 2 100 }-(Pair 2 200)]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 1 1 ; Elt 2 100 }-(Pair 3 101)]" time="0.528" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-True-(Some True)]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-False-(Some False)]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Left True)-(Right True)]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Right &quot;a&quot;)-(Left &quot;a&quot;)]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{}-{}]" time="0.542" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;&quot;-&quot;_abc&quot;]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;test&quot;-&quot;test_abc&quot;]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[balance.tz-111-Unit-4000000000000]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[level.tz-111-Unit-1]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2000000 1000000)-(Some (Pair 3000000 1000000))]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2310000 1010000)-(Some (Pair 3320000 1300000))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add.tz-Unit-Unit-Unit]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-12039123919239192312931-Unit]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-0-Unit]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-948-Unit]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-0-(Some 0)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-1-(Some 1)]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-9999-(Some 9999)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 15 9)-(Pair 15 24)]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 1 1)-(Pair 1 2)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 1 ; 2 ; 3 ; 4 }-1]" time="0.537" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 4 }-4]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;abcdefg&quot;-0x46fdbcb4ea4eadad5615cdaa17d67f783e01e21149ce2b27de497600b4cd8f4e]" time="0.529" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;12345&quot;-0xb4c26c20de52a4eaf0d8a340db47ad8cb1e74049570859c9a9a3952b204c772f]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-(Some &quot;hello&quot;)-&quot;hello&quot;]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-None-&quot;&quot;]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;world&quot;-(Pair &quot;world&quot; 0)]" time="0.530" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;abc&quot;-(Pair &quot;abc&quot; 0)]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;&quot;-(Pair &quot;&quot; 0)]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 0)-1-(Pair &quot;hello&quot; 1)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 500)-3-(Pair &quot;hello&quot; 3)]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 7)-100-(Pair &quot;hello&quot; 100)]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Some &quot;tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx&quot;)]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuJqtDcA2m2muMxViSM47MPsGQzmyjnNTawUPqR8vZTAMcx61ES&quot;-(Some &quot;tz1XPTDmvT3vVE5Uunngmixm7gj7zmdbPq6k&quot;)]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 -100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.516" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair &quot;1970-01-01T00:00:00Z&quot; 0)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair -100 100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 0 &quot;1970-01-01T00:00:00Z&quot;)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 100)-&quot;1970-01-01T00:00:00Z&quot;]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 -100)-&quot;1970-01-01T00:03:20Z&quot;]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 2000000000000000000)--1999999999999999900]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 0)-0]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 1)--1]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 1 0)-1]" time="0.530" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair &quot;1970-01-01T00:03:20Z&quot; &quot;1970-01-01T00:00:00Z&quot;)-200]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit0]" time="0.532" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit1]" time="0.531" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair (Some &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot;) (Pair { Unit }  (Pair { True }  (Pair (Pair 19 10) (Pair (Left &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;) (Pair { Elt 0 &quot;foo&quot; ; Elt 1 &quot;bar&quot; }  { PACK } )))))))))-Unit]" time="0.550" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair None (Pair {  }  (Pair {  }  (Pair (Pair 40 -10) (Pair (Right &quot;2019-09-09T08:35:33Z&quot;) (Pair {  }  { DUP ; DROP ; PACK } )))))))))-Unit]" time="0.532" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 -3)-(Pair (Some (Pair -3 1)) (Some (Pair 3 1)) (Some (Pair -3 1)) (Some (Pair 3 1)))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 0)-(Pair None None None None)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair -8 2)-(Pair (Some (Pair -4 0)) (Some (Pair -4 0)) (Some (Pair 4 0)) (Some (Pair 4 0)))]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 10))-(Left (Some (Pair 1 0)))]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 3))-(Left (Some (Pair 3 1)))]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 0))-(Left None)]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 10))-(Right (Some (Pair 1 0)))]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 3))-(Right (Some (Pair 3 1)))]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 0))-(Right None)]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 5 (Right 10))-(Right (Some (Pair 0 5)))]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[compare.tz-Unit-Unit-Unit]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comparisons.tz-{}-{ -9999999; -1 ; 0 ; 1 ; 9999999 }-{ { False ; False ; False ; True ; True } ;\n    { False ; False ; True ; True ; True } ;\n    { True ; True ; False ; False ; False } ;\n    { True ; True ; True ; False ; False } ;\n    { True ; True ; False ; True ; True } ;\n    { False ; False ; True ; False ; False } }]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[address.tz-None-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-(Some &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contract.tz-Unit-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-Unit]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[create_contract.tz-None-Unit-(Some &quot;KT1Mjjcb6tmSsLm7Cb3DSQszePjfchPM4Uxm&quot;)]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mul.tz-Unit-Unit-Unit]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 2)--2]" time="0.516" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 2)--2]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 0)-0]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 0)-0]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left -2)-2]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dign.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dugn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-1]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dropn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dipn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-6]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 17 (Pair 16 (Pair 15 (Pair 14 (Pair 13 (Pair 12 (Pair 11 (Pair 10 (Pair 9 (Pair 8 (Pair 7 (Pair 6 (Pair 5 (Pair 4 (Pair 3 (Pair 2 1))))))))))))))))-Unit]" time="0.603" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 2 (Pair 3 (Pair 12 (Pair 16 (Pair 10 (Pair 14 (Pair 19 (Pair 9 (Pair 18 (Pair 6 (Pair 8 (Pair 11 (Pair 4 (Pair 13 (Pair 15 (Pair 5 1))))))))))))))))-Unit]" time="0.613" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec.tz-14-38-52]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec_2.tz-{ 0 ; 1 ; 2 ; 3}-4-{ 0 ; 7 ; 14 ; 21 }]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-None-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some 0x7a06a770)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some &quot;NetXdQprcVkpaWU&quot;)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_entrypoint.tz-Unit-Left (Left 0)-Unit]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_default_entrypoint.tz-Unit-Unit-Unit]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_address.tz-Unit-Unit-Unit]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[unpair.tz-Unit-Unit-Unit]" time="0.528" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[voting_power.tz-(Pair 0 0)-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Pair 4000000000000 20000000000000)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[keccak.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xb6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4)]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sha3.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xf345a219da005ebe9c1a1eaad97bbf38a10c8473e41d0af7fb617caa0c6aa722)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb.tz-(Pair 0 0 0)-Unit-(Pair 1 2 3)]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[uncomb.tz-0-(Pair 1 4 2)-142]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-get.tz-Unit-(Pair 1 4 2 Unit)-Unit]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set.tz-(Pair 1 4 2 Unit)-Unit-(Pair 2 12 8 Unit)]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set-2.tz-None-(Pair 1 4 2 Unit)-(Some (Pair 2 4 &quot;toto&quot; 0x01))]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dup-n.tz-Unit-Unit-Unit]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sapling_empty_state.tz-{}-Unit-0]" time="0.527" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.516" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.531" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.515" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.514" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.515" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.514" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.514" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.516" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x00 0x00-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x01 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.529" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x010000-(Some 0x0200000000000000000000000000000000000000000000000000000000000000)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_bytes_not_padded.tz-None-Unit-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_nat.tz-None-Unit-(Some 0x1000000000000000000000000000000000000000000000000000000000000000)]" time="0.546" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x00-0]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x01-1]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x28db8e57af88d9576acd181b89f24e50a89a6423f939026ed91349fc9af16c27-17832688077013577776524784494464728518213913213412866604053735695200962927400]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0xb9e8abf8dc324a010007addde986fe0f7c81fab16d26819d0534b7691c0b0719-11320265829256585830781521966149529460476767408210445238902869222031333517497]" time="0.514" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x02-16-0x1000000000000000000000000000000000000000000000000000000000000000]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x00-257-0x0101000000000000000000000000000000000000000000000000000000000000]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_mutez.tz-0-0x10-16]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[0]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[1e-06]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[0.5]" time="0.515" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[1]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[5]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[1000]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_balance[8000000000000.0]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_now" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_level" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;hello&quot;-(Pair 4 (Some &quot;hi&quot;))-big_map_diff0]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;&quot;-(Pair 4 None)-big_map_diff1]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } None)-&quot;1&quot;-(Pair 4 (Some &quot;one&quot;))-big_map_diff2]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{}-(Pair 4 Unit)-big_map_diff3]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff4]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; (Some &quot;three&quot;) }-(Pair 4 Unit)-big_map_diff5]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; None }-(Pair 4 Unit)-big_map_diff6]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;2&quot; None }-(Pair 4 Unit)-big_map_diff7]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff8]" time="0.531" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None 4)-big_map_diff9]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None 4)-big_map_diff10]" time="0.520" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff11]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff12]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None 4)-big_map_diff13]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff14]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff15]" time="0.517" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Left Unit)-(Left (Pair 4 5))-big_map_diff0]" time="0.526" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Left (Pair { Elt &quot;3&quot; &quot;three&quot; } { Elt &quot;4&quot; &quot;four&quot; }))))-(Left (Pair 4 5))-big_map_diff1]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Right Unit)))-(Right Unit)-big_map_diff2]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Right Unit)-(Right (Right (Left (Pair { Pair &quot;foo&quot; &quot;bar&quot; } { Pair &quot;gaz&quot; &quot;baz&quot; }) )))-(Left (Pair 4 5))-big_map_diff3]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }) )-(Right (Right (Right (Left { Pair &quot;3&quot; &quot;three&quot; }))))-(Left (Pair 4 5))-big_map_diff4]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Right (Right (Right { &quot;1&quot; }))))-(Left (Pair 4 5))-big_map_diff5]" time="0.523" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_packunpack" time="1.036" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_check_signature" time="1.038" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_hash_consistency_michelson_cli" time="1.550" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 1 257))]" time="0.521" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 123 257))]" time="0.524" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 1 257))]" time="0.525" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 123 257))]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Left Unit]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Right Unit]" time="0.522" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_fails_annotated_set_car_cdr" time="0.000">
      <skipped type="pytest.skip" message="Bug in annotation system">/home/tezos/.venv/lib/python3.9/site-packages/_pytest/skipping.py:245: Bug in annotation system</skipped>
    </testcase>
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair {} 0)-10-(Pair {} 0)]" time="0.518" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;foo&quot; 1 } 1)-10-(Pair { Elt &quot;foo&quot; 11 } 11)]" time="0.519" />
    <testcase classname="tests_014.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 } 6)-15-(Pair { Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 } 36)]" time="0.971" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_init" time="12.473" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_a" time="126.153" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_on_bootstrapped_node" time="2.371" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch1" time="0.465" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_import_and_reconstruct" time="9.318" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_request_all_blocks_with_metadata" time="0.073" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_import_before_reconstruct" time="7.040" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node2" time="0.042" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_after_snapshot_import" time="2.736" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node_2" time="0.073" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_b" time="49.787" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch2" time="0.476" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_sync_node3" time="2.516" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node3" time="0.527" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_command_after_bootstrap" time="2.891" />
    <testcase classname="tests_014.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node3" time="2.988" />
    <testcase classname="tests_014.test_sapling.TestSaplingDifferentMemosize" name="test_shield_with_different_memo_size" time="15.982" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_init" time="6.687" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_gen_operations" time="8.670" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_terminate_sandbox" time="1.002" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_baker" time="1.641" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_wait_until_high_enough_level" time="9.754" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_baked" time="28.613" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_after_baked" time="1.034" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="7.218" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.529" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.531" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.531" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.530" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.564" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_originate_byte_contract" time="2.172" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_small" time="1.123" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_medium" time="1.391" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_oversized" time="0.598" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_originate_munch_contract" time="2.186" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_with_lambda_ok" time="3.052" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_with_lambda_fail" time="3.153" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_with_list_ok" time="2.055" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_with_list_syntax_error" time="0.713" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_with_list_ill_typed" time="0.781" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_with_list_fail" time="0.851" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_with_nat_ok" time="1.761" />
    <testcase classname="tests_013.test_basic.TestRememberContract" name="test_operation_size_with_nat_fail" time="1.356" />
    <testcase classname="tests_013.test_bootstrap.TestThresholdOne" name="test_setup_network" time="6.923" />
    <testcase classname="tests_013.test_bootstrap.TestThresholdOne" name="test_bootstrap" time="0.548" />
    <testcase classname="tests_013.test_bootstrap.TestThresholdOne" name="test_add_node" time="4.450" />
    <testcase classname="tests_013.test_bootstrap.TestSplitView" name="test_setup_network" time="12.809" />
    <testcase classname="tests_013.test_bootstrap.TestSplitView" name="test_all_nodes_boostrap" time="1.650" />
    <testcase classname="tests_013.test_bootstrap.TestSplitView" name="test_pause" time="2.003" />
    <testcase classname="tests_013.test_bootstrap.TestSplitView" name="test_disconnect_node" time="1.092" />
    <testcase classname="tests_013.test_bootstrap.TestSplitView" name="test_sync_status" time="3.030" />
    <testcase classname="tests_013.test_contract.TestView" name="test_deploy_view_lib" time="8.985" />
    <testcase classname="tests_013.test_contract.TestView" name="test_runtime[view_op_id-(Pair 0 0)-Pair 10 3]" time="3.293" />
    <testcase classname="tests_013.test_contract.TestView" name="test_runtime[view_op_add-42-13]" time="3.327" />
    <testcase classname="tests_013.test_contract.TestView" name="test_runtime[view_fib-0-55]" time="3.393" />
    <testcase classname="tests_013.test_contract.TestView" name="test_runtime[view_mutual_recursion-0-20]" time="3.333" />
    <testcase classname="tests_013.test_contract.TestView" name="test_runtime[view_op_nonexistent_func-True-False]" time="3.352" />
    <testcase classname="tests_013.test_contract.TestView" name="test_runtime[view_op_nonexistent_addr-True-False]" time="3.360" />
    <testcase classname="tests_013.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_input_type-5-0]" time="3.380" />
    <testcase classname="tests_013.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_output_type-True-False]" time="3.394" />
    <testcase classname="tests_013.test_contract.TestView" name="test_create_contract" time="6.729" />
    <testcase classname="tests_013.test_contract.TestView" name="test_step_constants" time="3.370" />
    <testcase classname="tests_013.test_contract.TestView" name="test_self[self_after_view]" time="3.943" />
    <testcase classname="tests_013.test_contract.TestView" name="test_self[self_after_fib_view]" time="3.940" />
    <testcase classname="tests_013.test_contract.TestView" name="test_self[self_after_nonexistent_view]" time="3.900" />
    <testcase classname="tests_013.test_contract.TestView" name="test_self_address[self_address_after_view]" time="3.899" />
    <testcase classname="tests_013.test_contract.TestView" name="test_self_address[self_address_after_fib_view]" time="3.900" />
    <testcase classname="tests_013.test_contract.TestView" name="test_self_address[self_address_after_nonexistent_view]" time="3.904" />
    <testcase classname="tests_013.test_contract.TestView" name="test_sender[sender_after_view]" time="3.904" />
    <testcase classname="tests_013.test_contract.TestView" name="test_sender[sender_after_fib_view]" time="3.923" />
    <testcase classname="tests_013.test_contract.TestView" name="test_sender[sender_after_nonexistent_view]" time="3.919" />
    <testcase classname="tests_013.test_contract.TestView" name="test_balance_after_view[balance_after_view]" time="3.880" />
    <testcase classname="tests_013.test_contract.TestView" name="test_balance_after_view[balance_after_fib_view]" time="3.880" />
    <testcase classname="tests_013.test_contract.TestView" name="test_balance_after_view[balance_after_nonexistent_view]" time="3.838" />
    <testcase classname="tests_013.test_contract.TestView" name="test_amount_after_view[amount_after_view]" time="3.881" />
    <testcase classname="tests_013.test_contract.TestView" name="test_amount_after_view[amount_after_fib_view]" time="3.847" />
    <testcase classname="tests_013.test_contract.TestView" name="test_amount_after_view[amount_after_nonexistent_view]" time="3.873" />
    <testcase classname="tests_013.test_contract.TestView" name="test_recursion" time="2.738" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_type-the return of a view block did not match the expected type.]" time="0.541" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_return_type-the return of a view block did not match the expected type.]" time="0.534" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_input_type-operator ADD is undefined between string]" time="0.541" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_invalid_arity-primitive view expects 4 arguments]" time="0.539" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.537" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_type-only a string can be used here]" time="0.534" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.535" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.544" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_duplicated_name-the name of view in toplevel should be unique]" time="0.535" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_output-Ticket in unauthorized position]" time="0.538" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_input-Ticket in unauthorized position]" time="0.542" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_input-big_map or sapling_state type not expected here]" time="0.538" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_output-big_map or sapling_state type not expected here]" time="0.543" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_op_invalid_arity-primitive VIEW expects 2 arguments]" time="0.535" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_type-unexpected int, only a string]" time="0.536" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.538" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.534" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.537" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_op_bad_return_type-two branches don't end with the same stack type]" time="0.537" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_op_dupable_type-Ticket in unauthorized position]" time="0.536" />
    <testcase classname="tests_013.test_contract.TestView" name="test_typechecking_error[view_op_lazy_storage-big_map or sapling_state type not expected here]" time="0.955" />
    <testcase classname="tests_013.test_contract_macros.TestGuestBook" name="test_guestbook" time="11.415" />
    <testcase classname="tests_013.test_many_nodes.TestManyNodesBootstrap" name="test_init" time="19.562" />
    <testcase classname="tests_013.test_many_nodes.TestManyNodesBootstrap" name="test_add_nodes" time="12.482" />
    <testcase classname="tests_013.test_many_nodes.TestManyNodesBootstrap" name="test_sleep_30s" time="30.031" />
    <testcase classname="tests_013.test_many_nodes.TestManyNodesBootstrap" name="test_add_more_nodes" time="18.928" />
    <testcase classname="tests_013.test_many_nodes.TestManyNodesBootstrap" name="test_kill_baker" time="0.347" />
    <testcase classname="tests_013.test_many_nodes.TestManyNodesBootstrap" name="test_synchronize" time="4.397" />
    <testcase classname="tests_013.test_many_nodes.TestManyNodesBootstrap" name="test_progress" time="0.561" />
    <testcase classname="tests_013.test_many_nodes.TestManyNodesBootstrap" name="test_check_logs" time="3.748" />
    <testcase classname="tests_014.test_binaries.TestBinaries" name="test_version" time="3.341" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/cps_fact.tz]" time="7.368" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/spawn_identities.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/dispatch.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/queue.tz]" time="0.559" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/infinite_loop.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/auction.tz]" time="0.556" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/id.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/cadr_annotation.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/empty.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/big_map_union.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/cons_twice.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/scrutable_reservoir.tz]" time="0.572" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/reduce_map.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/concat.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/int_publisher.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/fail_amount.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/reservoir.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/append.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/insertion_sort.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/add1.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/create_add1_lists.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/always.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/list_of_transactions.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/bad_lockup.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/forward.tz]" time="0.668" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/at_least.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/accounts.tz]" time="0.564" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/king_of_tez.tz]" time="0.561" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/conditionals.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/after_strategy.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/faucet.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/data_publisher.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/reentrancy.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[attic/add1_list.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_default_entrypoint.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_overflow.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_nat.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_failwith.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/shifts.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/noop.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/iter_fail.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_string.tz]" time="0.556" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_consistency_checker.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_string.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/voting_power.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add.tz]" time="0.559" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev_cty.tz]" time="0.604" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_nat.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dugn.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dign.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_map_value.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/cdr.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left.tz]" time="0.562" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_fib_view.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sub_timestamp_delta.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_view.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_amount.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sha3.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_tokens.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g2.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat_bytes.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/slices.tz]" time="0.558" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_fib_view.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_delta_timestamp.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sapling_empty_state.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/str_id.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_fib_view.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_fib.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_delegate.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sets.tz]" time="0.563" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_fib_view.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_nonexistent_view.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/not.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_input.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice_bytes.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/address.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/cons.tz]" time="0.541" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g1.tz]" time="0.557" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_output_type.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/pairing_check.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g2.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_car.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_addr.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/or_binary.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_rec.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g1.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_size.tz]" time="0.540" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_nonexistent_view.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left_failwith.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_entrypoint.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type2.tz]" time="0.830" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bytes.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/source.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/munch.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map_sideeffect.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_input_type.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_join.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-literals.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_func.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_fr.tz]" time="0.557" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g1.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id_map.tz]" time="0.539" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g1.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_key.tz]" time="0.540" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_mutual_recursion.tz]" time="0.541" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/update_big_map.tz]" time="0.542" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comparisons.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_constant.tz]" time="0.541" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_timestamp_delta.tz]" time="0.535" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_view.tz]" time="0.542" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_string.tz]" time="0.540" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer-2.tz]" time="0.539" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g2.tz]" time="0.540" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dropn.tz]" time="0.540" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_size.tz]" time="0.536" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_bad.tz]" time="0.536" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map.tz]" time="0.542" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/first.tz]" time="0.537" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair_field_annotation_mismatch.tz]" time="0.542" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_toplevel_lib.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_fib_view.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_int.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_int.tz]" time="0.538" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_view.tz]" time="0.541" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_big_map.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dup-n.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_bytes.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_int.tz]" time="0.541" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_size.tz]" time="0.539" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/merge_comparable_pairs.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/pair_id.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/int.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_test_step_contants.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_nonexistent_view.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_now.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxor.tz]" time="0.556" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/none.tz]" time="0.542" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/abs.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname_alt.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_string.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/emit.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello_bytes.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_view.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/contains_all.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_big_map_value.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dip.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ret_int.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv_mutez.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/xor.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address.tz]" time="0.565" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-get.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mutez_to_bls12_381_fr.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_map_block.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_id.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_nat.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/originate_big_map.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set-2.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec_2.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_nonexistent_view.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse_loop.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_iter.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/tez_add_sub.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/keccak.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_fr.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id_store.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/if.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_member.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/exec_concat.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type.tz]" time="0.799" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g2.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/not_binary.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_add.tz]" time="0.564" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_view.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/check_signature.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_nonexistent_view.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/subset.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store-2.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_fr.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_nat.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/left_right.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_nat.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/diff_timestamps.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_logical_1.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_car.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/and.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_mutez.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxo_read.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_fr.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_id.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_bytes_not_padded.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair.tz]" time="0.563" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/level.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/if_some.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_read.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/contract.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_map.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_to_self.tz]" time="0.556" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/car.tz]" time="0.564" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_iter.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/proxy.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_iter.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/uncomb.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_binary.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/or.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dig_eq.tz]" time="0.584" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/empty_map.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_id.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_with_view.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_split.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_list.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_cdr.tz]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_big_store.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[opcodes/dipn.tz]" time="0.544" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/compare.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpeq.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_gt.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_le.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/unpair_macro.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_ge.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/min.tz]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/take_my_money.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/build_list.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpge.tz]" time="0.565" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_neq.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/pair_macro.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_mem.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/guestbook.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmplt.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpgt.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmple.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/macro_annotations.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/carn_and_cdrn.tz]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_eq.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_get_add.tz]" time="0.556" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/fail.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/set_caddaadr.tz]" time="0.559" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_lt.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/compare_bytes.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/map_caddaadr.tz]" time="0.559" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpneq.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[macros/max_in_list.tz]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/generic_multisig.tz]" time="0.578" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/weather_insurance.tz]" time="0.562" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/originate_contract.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_write.tz]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/fa12_reference.tz]" time="0.829" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_entrypoints.tz]" time="0.563" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_non_fungible.tz]" time="0.566" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_entrypoints_counter.tz]" time="0.562" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/tzip4_view.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract_simple.tz]" time="0.558" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_receiver.tz]" time="0.557" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/vote_for_delegate.tz]" time="0.565" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/reveal_signed_preimage.tz]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_store.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_magic.tz]" time="0.564" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_sender.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_caller.tz]" time="0.557" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_fungible.tz]" time="0.569" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_non_fungible.tz]" time="0.561" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/groth16.tz]" time="0.568" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_en2.tz]" time="0.563" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lqt_fa12.mligo.tz]" time="0.682" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/default_account.tz]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract.tz]" time="0.558" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_read.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_storer.tz]" time="0.558" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/parameterized_multisig.tz]" time="0.568" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/authentication.tz]" time="0.558" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat_dapp.tz]" time="0.582" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_appender.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/replay.tz]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/add_clear_tickets.tz]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lockup.tz]" time="0.564" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_fungible.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/hardlimit.tz]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/legacy_multisig.tz]" time="0.573" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_262.tz]" time="0.554" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_843.tz]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestTypecheck" name="test_typecheck[non_regression/pairk_annot.tz]" time="0.991" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_unparsing_mode[None]" time="7.371" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Readable]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized_legacy]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_legacy_flag" time="1.100" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_script[None]" time="0.552" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_script[Readable]" time="0.562" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_script[Optimized]" time="0.557" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_script[Optimized_legacy]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[nat]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[list nat]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[pair nat int]" time="0.539" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int)]" time="0.551" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool]" time="0.545" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool)]" time="0.543" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool bytes]" time="0.546" />
    <testcase classname="tests_014.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool bytes)]" time="0.964" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainLevel" name="test_level" time="14.482" />
    <testcase classname="tests_014.test_mockup" name="test_list_mockup_protocols" time="0.550" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_dir_exists_nonempty" time="0.545" />
    <testcase classname="tests_014.test_mockup" name="test_retrieve_addresses" time="1.109" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_already_initialized" time="1.103" />
    <testcase classname="tests_014.test_mockup" name="test_transfer" time="3.313" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXcqTGZX74DxG]" time="0.564" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXaFDF7xZQCpR]" time="0.563" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXkKbtqncJcAz]" time="0.568" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXjjE5cZUeWPy]" time="0.568" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXi7C1pyLhQNe]" time="0.576" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXcqTGZX74DxG]" time="0.564" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXaFDF7xZQCpR]" time="0.565" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXkKbtqncJcAz]" time="0.565" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXjjE5cZUeWPy]" time="0.562" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXi7C1pyLhQNe]" time="0.564" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_custom_bootstrap_accounts" time="1.116" />
    <testcase classname="tests_014.test_mockup" name="test_transfer_bad_base_dir" time="1.121" />
    <testcase classname="tests_014.test_mockup" name="test_config_show_mockup" time="1.108" />
    <testcase classname="tests_014.test_mockup" name="test_config_show_mockup_fail" time="1.117" />
    <testcase classname="tests_014.test_mockup" name="test_config_init_mockup" time="1.110" />
    <testcase classname="tests_014.test_mockup" name="test_config_init_mockup_fail" time="1.113" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-None-None]" time="2.242" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.183" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-None]" time="2.214" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.188" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-None-None]" time="2.212" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.205" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-None]" time="2.242" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.195" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-None-None]" time="2.220" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.208" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-None]" time="2.211" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.217" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-None-None]" time="2.204" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.206" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-None]" time="2.253" />
    <testcase classname="tests_014.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.224" />
    <testcase classname="tests_014.test_mockup" name="test_transfer_rpc" time="3.809" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command0-protos0]" time="1.105" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command0-protos1]" time="1.093" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command0-protos2]" time="1.100" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command0-protos3]" time="1.096" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command0-protos4]" time="1.111" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command0-protos5]" time="1.098" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command1-protos0]" time="1.094" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command1-protos1]" time="1.091" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command1-protos2]" time="1.098" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command1-protos3]" time="1.093" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command1-protos4]" time="1.117" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command1-protos5]" time="1.111" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command2-protos0]" time="1.097" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command2-protos1]" time="1.096" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command2-protos2]" time="1.093" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command2-protos3]" time="1.102" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command2-protos4]" time="1.113" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command2-protos5]" time="1.095" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command3-protos0]" time="1.087" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command3-protos1]" time="1.083" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command3-protos2]" time="1.087" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command3-protos3]" time="1.089" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command3-protos4]" time="1.087" />
    <testcase classname="tests_014.test_mockup" name="test_proto_mix[command3-protos5]" time="1.114" />
    <testcase classname="tests_014.test_sapling.TestSaplingStateCorruption" name="test_push_sapling_state_with_id_is_forbidden" time="12.524" />
    <testcase classname="tests_014.test_sapling.TestSaplingStateCorruption" name="test_originate_with_empty" time="1.122" />
    <testcase classname="tests_014.test_sapling.TestSaplingStateCorruption" name="test_originate_with_id_is_forbidden" time="0.998" />
    <testcase classname="tests_013.test_bootstrap.TestThresholdTwo" name="test_setup_network" time="9.707" />
    <testcase classname="tests_013.test_bootstrap.TestThresholdTwo" name="test_add_nodes" time="8.793" />
    <testcase classname="tests_013.test_bootstrap.TestThresholdTwo" name="test_node_3_bootstrapped" time="0.530" />
    <testcase classname="tests_013.test_bootstrap.TestThresholdTwo" name="test_node_1_bootstrapped" time="2.402" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/steps_to_quota.tz]" time="7.212" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_rootname.tz]" time="0.536" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_flags.tz]" time="0.531" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_account.tz]" time="0.530" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract.tz]" time="0.531" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/originator.tz]" time="0.528" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/steps_to_quota.tz]" time="0.534" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_rootname.tz]" time="0.531" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_flags.tz]" time="0.540" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_account.tz]" time="0.538" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract.tz]" time="0.534" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/originator.tz]" time="0.535" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unfailwithable.tz-wrong stack type for instruction FAILWITH]" time="0.533" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unrightable.tz-wrong stack type for instruction RIGHT]" time="0.533" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unleftable.tz-wrong stack type for instruction LEFT]" time="0.539" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_ungetable.tz-wrong stack type for instruction GET]" time="0.544" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpairable.tz-wrong stack type for instruction UNPAIR]" time="0.539" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undug2able.tz-wrong stack type for instruction DUG]" time="0.537" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undugable.tz-wrong stack type for instruction DUG]" time="0.535" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undig2able.tz-wrong stack type for instruction DIG]" time="0.539" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undigable.tz-wrong stack type for instruction DIG]" time="0.546" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undip2able.tz-wrong stack type for instruction DUP]" time="0.540" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undipable.tz-wrong stack type for instruction DUP]" time="0.540" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undup2able.tz-wrong stack type for instruction DUP]" time="0.541" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undropable.tz-wrong stack type for instruction DROP]" time="0.542" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable.tz-wrong stack type for instruction DUP]" time="0.540" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable_in_lambda.tz-wrong stack type for instruction DUP]" time="0.537" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[pack_operation.tz-operation type forbidden in parameter, storage and constants]" time="0.544" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[pack_big_map.tz-big_map or sapling_state type not expected here]" time="0.550" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[invalid_self_entrypoint.tz-Contract has no entrypoint named D]" time="0.543" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[contract_annotation_default.tz-unexpected_default_entrypoint]" time="0.546" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[missing_only_storage_field.tz-Missing contract field: storage]" time="0.551" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[missing_only_code_field.tz-Missing contract field: code]" time="0.550" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[missing_only_parameter_field.tz-Missing contract field: parameter]" time="0.548" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[missing_parameter_and_storage_fields.tz-Missing contract field: parameter]" time="0.550" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[multiple_parameter_field.tz-duplicate contract field: parameter]" time="0.552" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[multiple_code_field.tz-duplicate contract field: code]" time="0.556" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_field.tz-duplicate contract field: storage]" time="0.546" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_and_code_fields.tz-duplicate contract field: storage]" time="0.551" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[set_update_non_comparable.tz-Type nat is not compatible with type list operation0]" time="0.554" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[chain_id_arity.tz-primitive chain_id expects 0 arguments but is given 1]" time="0.549" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[big_dip.tz-expected a positive 10-bit integer]" time="0.549" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[big_drop.tz-expected a positive 10-bit integer]" time="0.544" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[set_update_non_comparable.tz-Type nat is not compatible with type list operation1]" time="0.550" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[never_literal.tz-type never has no inhabitant.]" time="0.549" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[comb0.tz-PAIR expects an argument of at least 2]" time="0.544" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[comb1.tz-PAIR expects an argument of at least 2]" time="0.548" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[uncomb0.tz-UNPAIR expects an argument of at least 2]" time="0.543" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[uncomb1.tz-UNPAIR expects an argument of at least 2]" time="0.554" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[dup0.tz-DUP n expects an argument of at least 1]" time="0.544" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_with_parens.tz-big_map or sapling_state type not expected here]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_without_parens.tz-primitive PUSH expects 2 arguments but is given 4]" time="0.546" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[pack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.544" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[unpack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.551" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[ticket_dup.tz-ticket nat cannot be used here because it is not duplicable]" time="0.548" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[ticket_unpack.tz-Ticket in unauthorized position]" time="0.548" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[ticket_apply.tz-Ticket in unauthorized position]" time="0.551" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[ticket_in_ticket.tz-comparable type expected.Type ticket unit is not comparable]" time="0.549" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[dip_failwith.tz-The FAIL instruction must appear in a tail position.]" time="0.546" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_ill_typecheck[map_failwith.tz-The proper type of the return list cannot be inferred.]" time="0.549" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_zero_transfer_to_implicit_contract" time="0.548" />
    <testcase classname="tests_013.test_contract.TestContracts" name="test_zero_transfer_to_nonexistent_contract" time="0.970" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_literal" time="7.886" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_id" time="0.544" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_diff" time="0.546" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_id" time="0.546" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_diff" time="0.965" />
    <testcase classname="tests_013.test_many_bakers.TestManyBakers" name="test_init" time="62.877" />
    <testcase classname="tests_013.test_many_bakers.TestManyBakers" name="test_wait" time="30.030" />
    <testcase classname="tests_013.test_many_bakers.TestManyBakers" name="test_progress" time="6.217" />
    <testcase classname="tests_013.test_many_bakers.TestManyBakers" name="test_check_logs" time="4.688" />
    <testcase classname="tests_013.test_mockup" name="test_list_mockup_protocols" time="0.556" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_dir_exists_nonempty" time="0.557" />
    <testcase classname="tests_013.test_mockup" name="test_retrieve_addresses" time="1.131" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_already_initialized" time="1.123" />
    <testcase classname="tests_013.test_mockup" name="test_transfer" time="3.345" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXcqTGZX74DxG]" time="0.573" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXaFDF7xZQCpR]" time="0.575" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXkKbtqncJcAz]" time="0.573" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXjjE5cZUeWPy]" time="0.576" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXi7C1pyLhQNe]" time="0.575" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXcqTGZX74DxG]" time="0.573" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXaFDF7xZQCpR]" time="0.567" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXkKbtqncJcAz]" time="0.567" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXjjE5cZUeWPy]" time="0.569" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXi7C1pyLhQNe]" time="0.570" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_custom_bootstrap_accounts" time="1.134" />
    <testcase classname="tests_013.test_mockup" name="test_transfer_bad_base_dir" time="1.130" />
    <testcase classname="tests_013.test_mockup" name="test_config_show_mockup" time="1.114" />
    <testcase classname="tests_013.test_mockup" name="test_config_show_mockup_fail" time="1.127" />
    <testcase classname="tests_013.test_mockup" name="test_config_init_mockup" time="1.125" />
    <testcase classname="tests_013.test_mockup" name="test_config_init_mockup_fail" time="1.129" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-None-None]" time="2.255" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.237" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000}-None]" time="2.250" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.264" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-None-None]" time="2.235" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.226" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000}-None]" time="2.276" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.229" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-None-None]" time="2.241" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.213" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000}-None]" time="2.248" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.212" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-None-None]" time="2.238" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.225" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000}-None]" time="2.214" />
    <testcase classname="tests_013.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_available_messages&quot;: 1000000}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.192" />
    <testcase classname="tests_013.test_mockup" name="test_transfer_rpc" time="3.829" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command0-protos0]" time="1.107" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command0-protos1]" time="1.098" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command0-protos2]" time="1.115" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command0-protos3]" time="1.087" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command0-protos4]" time="1.098" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command0-protos5]" time="1.100" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command1-protos0]" time="1.095" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command1-protos1]" time="1.098" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command1-protos2]" time="1.105" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command1-protos3]" time="1.104" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command1-protos4]" time="1.099" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command1-protos5]" time="1.095" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command2-protos0]" time="1.088" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command2-protos1]" time="1.085" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command2-protos2]" time="1.092" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command2-protos3]" time="1.087" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command2-protos4]" time="1.084" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command2-protos5]" time="1.089" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command3-protos0]" time="1.095" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command3-protos1]" time="1.090" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command3-protos2]" time="1.086" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command3-protos3]" time="1.087" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command3-protos4]" time="1.084" />
    <testcase classname="tests_013.test_mockup" name="test_proto_mix[command3-protos5]" time="1.085" />
    <testcase classname="tests_013.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_proto_known" time="6.781" />
    <testcase classname="tests_013.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_first_protocol" time="0.534" />
    <testcase classname="tests_013.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_activate_proto" time="0.534" />
    <testcase classname="tests_013.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level1" time="0.529" />
    <testcase classname="tests_013.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_protocol_genesis" time="0.532" />
    <testcase classname="tests_013.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_manual_bake" time="2.606" />
    <testcase classname="tests_013.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level2" time="0.951" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_file" time="104.034" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_http" time="2.307" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_file" time="2.287" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_http" time="2.296" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file_pre" time="2.738" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file" time="33.127" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_http" time="140.079" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show[None]" time="0.536" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show[config_dict1]" time="0.540" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-None]" time="1.074" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-config_dict1]" time="1.081" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-None]" time="1.075" />
    <testcase classname="tests_014.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-config_dict1]" time="1.073" />
    <testcase classname="tests_014.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_sender" time="8.313" />
    <testcase classname="tests_014.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_receiver" time="1.640" />
    <testcase classname="tests_014.test_contract.TestSelfAddressTransfer" name="test_send_self_address" time="1.519" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare.tz]" time="7.200" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_neq.tz]" time="0.531" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/macro_annotations.tz]" time="0.536" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare_bytes.tz]" time="0.528" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/max_in_list.tz]" time="0.527" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/unpair_macro.tz]" time="0.534" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_lt.tz]" time="0.526" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert.tz]" time="0.523" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/min.tz]" time="0.528" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpneq.tz]" time="0.530" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/map_caddaadr.tz]" time="0.533" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/set_caddaadr.tz]" time="0.530" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmplt.tz]" time="0.525" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_ge.tz]" time="0.524" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/fail.tz]" time="0.528" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/carn_and_cdrn.tz]" time="0.527" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_gt.tz]" time="0.526" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/build_list.tz]" time="0.537" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpgt.tz]" time="0.524" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_le.tz]" time="0.524" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_mem.tz]" time="0.527" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/guestbook.tz]" time="0.529" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/pair_macro.tz]" time="0.529" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_get_add.tz]" time="0.526" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/take_my_money.tz]" time="0.526" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmple.tz]" time="0.530" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpeq.tz]" time="0.528" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpge.tz]" time="0.529" />
    <testcase classname="tests_014.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_eq.tz]" time="0.947" />
    <testcase classname="tests_014.test_many_bakers.TestManyBakers" name="test_init" time="62.224" />
    <testcase classname="tests_014.test_many_bakers.TestManyBakers" name="test_wait" time="30.030" />
    <testcase classname="tests_014.test_many_bakers.TestManyBakers" name="test_progress" time="6.439" />
    <testcase classname="tests_014.test_many_bakers.TestManyBakers" name="test_check_logs" time="5.191" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletImportKey" name="test_import_key_no_force" time="13.432" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_non_previously_saved" time="6.370" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_previously_saved" time="7.334" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_add_initial_nodes" time="30.369" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_activate_proto_a" time="0.565" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_client_knows_proto_b" time="0.527" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_proposal_period" time="2.637" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_submit_proto_b_proposal" time="1.638" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_check_proto_b_proposed" time="5.791" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_wait_for_exploration_period" time="16.942" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_delegates_vote_proto_b" time="3.190" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_wait_for_cooldown" time="15.385" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_wait_for_promotion_period" time="15.391" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_vote_in_promotion_phase" time="1.065" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_wait_for_adoption" time="13.165" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_all_nodes_run_proto_b" time="131.023" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_new_chain_progress" time="1.707" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_submit_again" time="1.736" />
    <testcase classname="tests_014.test_voting_full.TestVotingFull" name="test_check_logs" time="2.369" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_file" time="38.941" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_http" time="2.320" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_file" time="2.370" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_http" time="2.331" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file_pre" time="2.796" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file" time="4.159" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_http" time="37.760" />
    <testcase classname="tests_013.test_contract.TestNonRegression" name="test_issue_242_originate" time="8.436" />
    <testcase classname="tests_013.test_contract.TestNonRegression" name="test_issue_242_assert_balance" time="0.545" />
    <testcase classname="tests_013.test_contract.TestNonRegression" name="test_issue_843" time="4.843" />
    <testcase classname="tests_013.test_contract.TestOrderInTopLevelDoesNotMatter" name="test_shuffle" time="10.472" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_forge" time="10.235" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_big_forge" time="5.060" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_read" time="6.206" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_bad_ticket" time="4.531" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_utxo" time="8.470" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_split" time="5.083" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_join" time="7.876" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_originations" time="5.720" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_transfers" time="13.073" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_originations" time="5.763" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_transfers" time="15.731" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_proto_known" time="6.899" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_proto_client_known" time="0.545" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_first_protocol" time="0.546" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_activate_proto" time="0.546" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_level1" time="0.550" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_protocol_genesis" time="0.546" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_bake_command" time="1.543" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_level2" time="0.546" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_inject_operations" time="1.624" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_mempool" time="0.546" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_bake_command_2" time="1.541" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_level3" time="0.545" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_a" time="0.542" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_b" time="0.539" />
    <testcase classname="tests_013.test_proto_demo_counter.TestProtoDemo" name="test_get_counter_commands" time="1.489" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_current_period" time="7.847" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_succ_period" time="0.546" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_level_info_offset" time="1.633" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_bake_two_blocks" time="2.243" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_last_block_of_proposal_period" time="1.118" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_listing_is_not_empty" time="0.547" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_inject_proto1" time="3.449" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_known_protocol" time="0.560" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_proposals_is_empty" time="0.552" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_show_voting_period2" time="0.546" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_bake_first_block_of_proposal_period" time="1.122" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_submit_proposals" time="2.219" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_bake_one_block" time="1.123" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_proposals_is_not_empty" time="0.550" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period" time="1.152" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_break_proposal_tie" time="0.561" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_bake_last_block_of_proposal_period" time="2.293" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_listing_is_not_empty2" time="0.552" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_current_proposal" time="0.542" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_bake_first_block_of_cooldown_vote_period" time="1.119" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_submit_ballot" time="1.664" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period2" time="2.261" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_submit_failing_ballot" time="0.554" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_level_info_offset2" time="1.646" />
    <testcase classname="tests_013.test_voting.TestManualBaking" name="test_bake_first_block_of_new_proposal_period" time="5.996" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_ignore" time="9.631" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_no_ignore" time="2.642" />
    <testcase classname="tests_014.test_client_without_node.TestConfigInit" name="test_config_init[None]" time="0.550" />
    <testcase classname="tests_014.test_client_without_node.TestConfigInit" name="test_config_init[config_dict1]" time="0.551" />
    <testcase classname="tests_014.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[None]" time="1.647" />
    <testcase classname="tests_014.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[config_dict1]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestOrderInTopLevelDoesNotMatter" name="test_shuffle" time="10.536" />
    <testcase classname="tests_014.test_contract_macros.TestBigmapGetAdd" name="test_bigmap" time="16.480" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_setup" time="7.998" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_call_mint_or_burn" time="1.149" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_call_approve1" time="1.145" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_call_approve2" time="1.147" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_call_approve3" time="1.144" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_add_liquidity" time="1.148" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_buy_tok" time="1.152" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_transfer" time="1.150" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_sell_tok" time="1.153" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_dex_storage" time="0.561" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_lqt_storage" time="0.548" />
    <testcase classname="tests_014.test_liquidity_baking.TestTrades" name="test_tok_storage" time="0.969" />
    <testcase classname="tests_014.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_delegatable[None]" time="13.850" />
    <testcase classname="tests_014.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_spendable[None]" time="3.264" />
    <testcase classname="tests_014.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_delegatable[proxy]" time="14.286" />
    <testcase classname="tests_014.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_spendable[proxy]" time="3.746" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_current_period" time="7.910" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_succ_period" time="0.556" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_level_info_offset" time="1.632" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_two_blocks" time="2.244" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_last_block_of_proposal_period" time="1.121" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_listing_is_not_empty" time="0.541" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_inject_proto1" time="3.370" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_known_protocol" time="0.537" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_proposals_is_empty" time="0.555" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_show_voting_period2" time="0.544" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_first_block_of_proposal_period" time="1.116" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_submit_proposals" time="2.196" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_one_block" time="1.118" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_proposals_is_not_empty" time="0.545" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period" time="1.121" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_break_proposal_tie" time="0.557" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_last_block_of_proposal_period" time="2.290" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_listing_is_not_empty2" time="0.554" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_current_proposal" time="0.543" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_first_block_of_cooldown_vote_period" time="1.112" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_submit_ballot" time="1.649" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period2" time="2.243" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_submit_failing_ballot" time="0.551" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_level_info_offset2" time="1.639" />
    <testcase classname="tests_014.test_voting.TestManualBaking" name="test_bake_first_block_of_new_proposal_period" time="5.952" />
    <testcase classname="tests_013.test_bootstrap.TestStuck" name="test_setup_network" time="6.736" />
    <testcase classname="tests_013.test_bootstrap.TestStuck" name="test_kill_baker" time="19.134" />
    <testcase classname="tests_013.test_bootstrap.TestStuck" name="test_progress" time="0.544" />
    <testcase classname="tests_013.test_bootstrap.TestStuck" name="test_add_node" time="5.800" />
    <testcase classname="tests_013.test_bootstrap.TestStuck" name="test_all_nodes_boostrap" time="92.005" />
    <testcase classname="tests_013.test_client_without_node.TestConfigShow" name="test_config_show[None]" time="0.525" />
    <testcase classname="tests_013.test_client_without_node.TestConfigShow" name="test_config_show[config_dict1]" time="0.529" />
    <testcase classname="tests_013.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-None]" time="1.047" />
    <testcase classname="tests_013.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-config_dict1]" time="1.060" />
    <testcase classname="tests_013.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-None]" time="1.048" />
    <testcase classname="tests_013.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-config_dict1]" time="1.051" />
    <testcase classname="tests_013.test_client_without_node.TestConfigValid" name="test_config_node_port" time="2.090" />
    <testcase classname="tests_013.test_client_without_node.TestConfigValid" name="test_config_web_port" time="2.085" />
    <testcase classname="tests_013.test_contract.TestGasBound" name="test_write_contract" time="0.003" />
    <testcase classname="tests_013.test_contract.TestGasBound" name="test_originate_first_explosion" time="7.629" />
    <testcase classname="tests_013.test_contract.TestGasBound" name="test_originate_big_type" time="0.541" />
    <testcase classname="tests_013.test_contract.TestGasBound" name="test_originate_second_explosion" time="0.656" />
    <testcase classname="tests_013.test_contract.TestGasBound" name="test_originate_second_explosion_fail" time="0.571" />
    <testcase classname="tests_013.test_contract.TestGasBound" name="test_typecheck_map_dup_key" time="0.524" />
    <testcase classname="tests_013.test_contract.TestGasBound" name="test_typecheck_map_bad_ordering" time="0.523" />
    <testcase classname="tests_013.test_contract.TestGasBound" name="test_typecheck_set_bad_ordering" time="0.523" />
    <testcase classname="tests_013.test_contract.TestGasBound" name="test_typecheck_set_no_duplicates" time="0.947" />
    <testcase classname="tests_013.test_contract.TestContractTypeChecking" name="test_implicit" time="19.166" />
    <testcase classname="tests_013.test_contract.TestContractTypeChecking" name="test_originated_inexistent" time="12.613" />
    <testcase classname="tests_013.test_contract.TestContractTypeChecking" name="test_originated_no_default" time="14.245" />
    <testcase classname="tests_013.test_contract.TestContractTypeChecking" name="test_originated_with_default" time="14.585" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-0-{ 0 }]" time="7.089" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-3-{ 0 ; 1 ; 2 ; 3 }]" time="0.523" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-10-{ 0 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 }]" time="0.520" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{}-None]" time="0.521" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 1 }-(Some 1)]" time="0.524" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -1 }-(Some -1)]" time="0.523" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)0]" time="0.522" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)1]" time="0.530" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -10 ; -1 ; -20 ; -100 }-(Some -1)]" time="0.522" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 1000000 2000000)-{ False ; False ; True ; False ; True }]" time="0.524" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2000000 1000000)-{ False ; True ; False ; True ; False }]" time="0.529" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2370000 2370000)-{ True ; False ; False ; True ; True }]" time="0.524" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert.tz-Unit-True-Unit]" time="0.524" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit0]" time="0.521" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit1]" time="0.527" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_neq.tz-Unit-(Pair 0 -1)-Unit]" time="0.522" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_lt.tz-Unit-(Pair -1 0)-Unit]" time="0.524" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair 0 0)-Unit]" time="0.526" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair -1 0)-Unit]" time="0.521" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_gt.tz-Unit-(Pair 0 -1)-Unit]" time="0.521" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 0)-Unit]" time="0.522" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 -1)-Unit]" time="0.522" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpeq.tz-Unit-(Pair -1 -1)-Unit]" time="0.525" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpneq.tz-Unit-(Pair 0 -1)-Unit]" time="0.525" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmplt.tz-Unit-(Pair -1 0)-Unit]" time="0.529" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair -1 0)-Unit]" time="0.521" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair 0 0)-Unit]" time="0.523" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpgt.tz-Unit-(Pair 0 -1)-Unit]" time="0.525" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 -1)-Unit]" time="0.523" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 0)-Unit]" time="0.523" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[set_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-3000000-(Pair (Pair 1 2 (Pair (Pair 3 3000000) 4) 5) 6)]" time="0.522" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[map_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-Unit-(Pair (Pair 1 2 (Pair (Pair 3 1000000) 4) 5) 6)]" time="0.524" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x34)-{ False ; False ; True ; False ; True }]" time="0.530" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33aa)-{ False ; False ; True ; False ; True }]" time="0.528" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33)-{ True ; False ; False ; True ; True }]" time="0.527" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x34 0x33)-{ False ; True ; False ; True ; False }]" time="0.545" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert.tz-Unit-False]" time="0.536" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)0]" time="0.536" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)1]" time="0.537" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_neq.tz-Unit-(Pair -1 -1)]" time="0.530" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 -1)]" time="0.532" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 0)]" time="0.539" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_le.tz-Unit-(Pair 0 -1)]" time="0.540" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair -1 0)]" time="0.534" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair 0 0)]" time="0.536" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_ge.tz-Unit-(Pair -1 0)]" time="0.538" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpeq.tz-Unit-(Pair 0 -1)]" time="0.542" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpneq.tz-Unit-(Pair -1 -1)]" time="0.537" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 0)]" time="0.537" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 -1)]" time="0.540" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmple.tz-Unit-(Pair 0 -1)]" time="0.535" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair 0 0)]" time="0.540" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair -1 0)]" time="0.534" />
    <testcase classname="tests_013.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpge.tz-Unit-(Pair -1 0)]" time="0.956" />
    <testcase classname="tests_013.test_contract_macros.TestBigmapGetAdd" name="test_bigmap" time="15.938" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_originate_sapling_contract" time="13.586" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_generate_bob" time="1.071" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_list_keys_bob" time="0.537" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_list_keys_with_alice_and_bob" time="1.607" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_0" time="0.554" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_1" time="0.535" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_bob_balance" time="0.541" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_shield_bob_address_0" time="3.800" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_contract_balance_after_shielding" time="0.535" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_regenerate_bob_from_mnemonic" time="0.538" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_derive_alice" time="0.533" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_derive_yves" time="0.539" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_generate_alice_address_0" time="0.527" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money_insufficient_funds" time="1.693" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money" time="3.332" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.bin-False]" time="0.554" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.json-True]" time="0.532" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_0" time="4.484" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_binary_format" time="4.457" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[alice-100.0]" time="0.532" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[bob-100.0]" time="0.539" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_binary_format" time="1.149" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[alice-50.0]" time="0.540" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[bob-150.0]" time="0.532" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_json_format" time="4.462" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[alice-50.0]" time="0.531" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[bob-150.0]" time="0.532" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_json_format" time="1.158" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[alice-0.0]" time="0.536" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[bob-200.0]" time="0.529" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob0[sapling_transaction0.bin-False]" time="0.529" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-200-bob]" time="0.532" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[300-200-bob]" time="0.535" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-0-alice]" time="0.539" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[100-0-alice]" time="0.535" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_bob_unshields_money" time="9.133" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_state_with_another_client" time="7.282" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_shielded_transfer_using_non_sapling_transfer_method[bootstrap4-bootstrap2]" time="5.607" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[alice-0.0]" time="0.537" />
    <testcase classname="tests_013.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[bob-110.0]" time="0.959" />
    <testcase classname="tests_014.test_bootstrap.TestThresholdOne" name="test_setup_network" time="6.659" />
    <testcase classname="tests_014.test_bootstrap.TestThresholdOne" name="test_bootstrap" time="0.528" />
    <testcase classname="tests_014.test_bootstrap.TestThresholdOne" name="test_add_node" time="4.375" />
    <testcase classname="tests_014.test_contract.TestView" name="test_deploy_view_lib" time="8.747" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_id-(Pair 0 0)-Pair 10 3]" time="3.201" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_add-42-13]" time="3.199" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_fib-0-55]" time="3.287" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_mutual_recursion-0-20]" time="3.227" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_nonexistent_func-True-False]" time="3.208" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_nonexistent_addr-True-False]" time="3.197" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_input_type-5-0]" time="3.201" />
    <testcase classname="tests_014.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_output_type-True-False]" time="3.215" />
    <testcase classname="tests_014.test_contract.TestView" name="test_create_contract" time="6.438" />
    <testcase classname="tests_014.test_contract.TestView" name="test_step_constants" time="3.216" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self[self_after_view]" time="3.761" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self[self_after_fib_view]" time="3.784" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self[self_after_nonexistent_view]" time="3.766" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self_address[self_address_after_view]" time="3.767" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self_address[self_address_after_fib_view]" time="3.763" />
    <testcase classname="tests_014.test_contract.TestView" name="test_self_address[self_address_after_nonexistent_view]" time="3.785" />
    <testcase classname="tests_014.test_contract.TestView" name="test_sender[sender_after_view]" time="3.762" />
    <testcase classname="tests_014.test_contract.TestView" name="test_sender[sender_after_fib_view]" time="3.755" />
    <testcase classname="tests_014.test_contract.TestView" name="test_sender[sender_after_nonexistent_view]" time="3.769" />
    <testcase classname="tests_014.test_contract.TestView" name="test_balance_after_view[balance_after_view]" time="3.782" />
    <testcase classname="tests_014.test_contract.TestView" name="test_balance_after_view[balance_after_fib_view]" time="3.787" />
    <testcase classname="tests_014.test_contract.TestView" name="test_balance_after_view[balance_after_nonexistent_view]" time="3.766" />
    <testcase classname="tests_014.test_contract.TestView" name="test_amount_after_view[amount_after_view]" time="3.774" />
    <testcase classname="tests_014.test_contract.TestView" name="test_amount_after_view[amount_after_fib_view]" time="3.781" />
    <testcase classname="tests_014.test_contract.TestView" name="test_amount_after_view[amount_after_nonexistent_view]" time="3.760" />
    <testcase classname="tests_014.test_contract.TestView" name="test_recursion" time="2.692" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_type-the return of a view block did not match the expected type.]" time="0.524" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_return_type-the return of a view block did not match the expected type.]" time="0.525" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_input_type-operator ADD is undefined between string]" time="0.531" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_invalid_arity-primitive view expects 4 arguments]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_type-only a string can be used here]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.529" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_duplicated_name-the name of view in toplevel should be unique]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_output-Ticket in unauthorized position]" time="0.530" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_input-Ticket in unauthorized position]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_input-big_map or sapling_state type not expected here]" time="0.531" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_output-big_map or sapling_state type not expected here]" time="0.539" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_invalid_arity-primitive VIEW expects 2 arguments]" time="0.532" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_type-unexpected int, only a string]" time="0.534" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.539" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.526" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_bad_return_type-two branches don't end with the same stack type]" time="0.535" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_dupable_type-Ticket in unauthorized position]" time="0.527" />
    <testcase classname="tests_014.test_contract.TestView" name="test_typechecking_error[view_op_lazy_storage-big_map or sapling_state type not expected here]" time="0.949" />
    <testcase classname="tests_014.test_contract.TestBadIndentation" name="test_bad_indentation_ill_typed" time="7.090" />
    <testcase classname="tests_014.test_contract.TestBadIndentation" name="test_bad_indentation_hash" time="0.517" />
    <testcase classname="tests_014.test_contract.TestBadIndentation" name="test_formatting" time="0.520" />
    <testcase classname="tests_014.test_contract.TestBadIndentation" name="test_formatted_hash" time="0.544" />
    <testcase classname="tests_014.test_contract.TestBadIndentation" name="test_formatted_typechecks" time="0.940" />
    <testcase classname="tests_014.test_cors.TestCors" name="test_preflight" time="6.039" />
    <testcase classname="tests_014.test_cors.TestCors" name="test_request" time="0.423" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_empty" time="7.065" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap2-manager]" time="5.358" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap4-bootstrap4]" time="3.173" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap2-manager]" time="4.222" />
    <testcase classname="tests_014.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap4-bootstrap4]" time="4.659" />
    <testcase classname="tests_014.test_sapling.TestSaplingRightMemosize" name="test_shield_with_same_memo_size" time="24.999" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_ignore" time="9.186" />
    <testcase classname="tests_013.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_no_ignore" time="2.512" />
    <testcase classname="tests_013.test_contract.TestExecutionOrdering" name="test_ordering[tree0-ABCDEFG]" time="31.580" />
    <testcase classname="tests_013.test_contract.TestExecutionOrdering" name="test_ordering[tree1-ABC]" time="16.538" />
    <testcase classname="tests_013.test_contract.TestExecutionOrdering" name="test_ordering[tree2-ABCD]" time="20.858" />
    <testcase classname="tests_013.test_contract.TestExecutionOrdering" name="test_ordering[tree3-]" time="6.286" />
    <testcase classname="tests_013.test_contract.TestScriptHashRegression" name="test_contract_hash[client_regtest_custom_scrubber0]" time="7.506" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_transfer[fa12_reference]" time="11.374" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[fa12_reference]" time="0.526" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_approve[fa12_reference]" time="1.590" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[fa12_reference]" time="0.524" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_transfer_as[fa12_reference]" time="2.660" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[fa12_reference]" time="0.527" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_multiple_transfers[fa12_reference]" time="3.164" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[fa12_reference]" time="4.194" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[fa12_reference]" time="5.843" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_transfer[lqt_fa12]" time="4.869" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[lqt_fa12]" time="0.528" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_approve[lqt_fa12]" time="1.586" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[lqt_fa12]" time="0.522" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_transfer_as[lqt_fa12]" time="2.633" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[lqt_fa12]" time="0.526" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_multiple_transfers[lqt_fa12]" time="3.174" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[lqt_fa12]" time="4.205" />
    <testcase classname="tests_013.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[lqt_fa12]" time="6.289" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletImportKey" name="test_import_key_no_force" time="12.656" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_non_previously_saved" time="6.151" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_previously_saved" time="7.120" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_add_initial_nodes" time="29.874" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_activate_proto_a" time="0.550" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_client_knows_proto_b" time="0.515" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_proposal_period" time="2.588" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_submit_proto_b_proposal" time="1.612" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_check_proto_b_proposed" time="5.693" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_wait_for_exploration_period" time="12.241" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_delegates_vote_proto_b" time="3.148" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_wait_for_cooldown" time="10.637" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_wait_for_promotion_period" time="10.904" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_vote_in_promotion_phase" time="3.288" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_wait_for_adoption" time="8.907" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_all_nodes_run_proto_b" time="59.613" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_new_chain_progress" time="1.605" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_submit_again" time="1.612" />
    <testcase classname="tests_013.test_voting_full.TestVotingFull" name="test_check_logs" time="2.343" />
    <testcase classname="tests_014.test_bootstrap.TestStuck" name="test_setup_network" time="6.614" />
    <testcase classname="tests_014.test_bootstrap.TestStuck" name="test_kill_baker" time="19.132" />
    <testcase classname="tests_014.test_bootstrap.TestStuck" name="test_progress" time="0.518" />
    <testcase classname="tests_014.test_bootstrap.TestStuck" name="test_add_node" time="5.750" />
    <testcase classname="tests_014.test_bootstrap.TestStuck" name="test_all_nodes_boostrap" time="91.926" />
    <testcase classname="tests_014.test_contract.TestChainId" name="test_chain_id_opcode" time="9.181" />
    <testcase classname="tests_014.test_contract.TestChainId" name="test_chain_id_authentication_origination" time="2.120" />
    <testcase classname="tests_014.test_contract.TestChainId" name="test_chain_id_authentication_first_run" time="3.045" />
    <testcase classname="tests_014.test_contract.TestOriginateContractFromContract" name="test_originate_contract_from_contract_origination" time="8.096" />
    <testcase classname="tests_014.test_contract.TestOriginateContractFromContract" name="test_originate_contract_from_contract_transfer" time="1.489" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_check_contract[fa12_reference]" time="9.789" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_balance_offchain[fa12_reference]" time="0.528" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[fa12_reference]" time="0.523" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[fa12_reference]" time="0.525" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_balance_callback[fa12_reference]" time="3.737" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_allowance_callback[fa12_reference]" time="2.660" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[fa12_reference]" time="2.667" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_check_contract[lqt_fa12]" time="3.232" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_balance_offchain[lqt_fa12]" time="0.519" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[lqt_fa12]" time="0.521" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[lqt_fa12]" time="0.518" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_balance_callback[lqt_fa12]" time="2.668" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_allowance_callback[lqt_fa12]" time="2.672" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[lqt_fa12]" time="2.686" />
    <testcase classname="tests_014.test_fa12.TestFA12Basic" name="test_check_contract_fail" time="2.525" />
    <testcase classname="tests_014.test_multisig.TestUnsupportedMultisig" name="test_deploy_nonmultisig" time="8.488" />
    <testcase classname="tests_014.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_init" time="30.956" />
    <testcase classname="tests_014.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_restart" time="28.361" />
    <testcase classname="tests_014.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_level" time="4.814" />
    <testcase classname="tests_013.test_bootstrap.TestManyNodesBootstrap" name="test_init" time="13.095" />
    <testcase classname="tests_013.test_bootstrap.TestManyNodesBootstrap" name="test_bootstrap" time="1.129" />
    <testcase classname="tests_013.test_bootstrap.TestManyNodesBootstrap" name="test_add_nodes" time="18.570" />
    <testcase classname="tests_013.test_bootstrap.TestManyNodesBootstrap" name="test_let_baking" time="10.011" />
    <testcase classname="tests_013.test_bootstrap.TestManyNodesBootstrap" name="test_progress" time="0.591" />
    <testcase classname="tests_013.test_bootstrap.TestManyNodesBootstrap" name="test_add_one_more_node" time="10.374" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/accounts.tz]" time="7.592" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/int_publisher.tz]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/concat.tz]" time="0.572" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/id.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/add1_list.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/add1.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/infinite_loop.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/always.tz]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/conditionals.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/queue.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/reduce_map.tz]" time="0.585" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/insertion_sort.tz]" time="0.573" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/dispatch.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/reservoir.tz]" time="0.577" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/after_strategy.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/list_of_transactions.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/cps_fact.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/cadr_annotation.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/bad_lockup.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/spawn_identities.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/fail_amount.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/scrutable_reservoir.tz]" time="0.600" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/big_map_union.tz]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/create_add1_lists.tz]" time="0.585" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/reentrancy.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/king_of_tez.tz]" time="0.575" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/at_least.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/forward.tz]" time="0.703" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/cons_twice.tz]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/data_publisher.tz]" time="0.575" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/append.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/empty.tz]" time="0.572" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/faucet.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[attic/auction.tz]" time="0.573" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair_field_annotation_mismatch.tz]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/int.tz]" time="0.577" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_output_type.tz]" time="0.590" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set-2.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/empty_map.tz]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_logical_1.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair.tz]" time="0.581" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/or.tz]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_constant.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/dip.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_id.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/uncomb.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_nonexistent_view.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_iter.tz]" time="0.577" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_int.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/munch.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/iter_fail.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/not_binary.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_default_entrypoint.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_fib.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/contract.tz]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv.tz]" time="0.573" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_timestamp_delta.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_now.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_nonexistent_view.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_big_map_value.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/sapling_empty_state.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_car.tz]" time="0.583" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_key.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_fr.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/pair_id.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_with_view.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/if_some.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_input.tz]" time="0.575" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/pairing_check.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_string.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-literals.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ret_int.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/or_binary.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_size.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_nat.tz]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/dropn.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_func.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/cons.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g2.tz]" time="0.572" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_tokens.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/dig_eq.tz]" time="0.600" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_fib_view.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_read.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat_bytes.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_rec.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/exec_concat.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_failwith.tz]" time="0.572" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/and.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_nonexistent_view.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id_map.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/xor.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_view.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g1.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_bad.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_input_type.tz]" time="0.558" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/car.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/shifts.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb.tz]" time="0.591" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_delta_timestamp.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_nat.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g1.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/update_big_map.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_test_step_contants.tz]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_member.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/sub_timestamp_delta.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/if.tz]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_view.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/merge_comparable_pairs.tz]" time="0.559" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/str_id.tz]" time="0.559" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_fib_view.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_string.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_overflow.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_fr.tz]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store-2.tz]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_string.tz]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_toplevel_lib.tz]" time="0.572" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_fib_view.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_nonexistent_view.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g2.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_size.tz]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice_bytes.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/cdr.tz]" time="0.557" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-get.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g1.tz]" time="0.557" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self.tz]" time="0.556" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_amount.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/noop.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_fib_view.tz]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_map.tz]" time="0.558" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_big_map.tz]" time="0.559" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_view.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_binary.tz]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/left_right.tz]" time="0.558" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_bytes_not_padded.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/dup-n.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_delegate.tz]" time="0.559" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_entrypoint.tz]" time="0.557" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_id.tz]" time="0.554" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/dipn.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg.tz]" time="0.559" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv_mutez.tz]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_to_self.tz]" time="0.557" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_fr.tz]" time="0.556" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec_2.tz]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/slices.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxo_read.tz]" time="0.555" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxor.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_int.tz]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/source.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname_alt.tz]" time="0.556" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/originate_big_map.tz]" time="0.558" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_big_store.tz]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_fr.tz]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/comparisons.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_id.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/none.tz]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_add.tz]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse_loop.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello.tz]" time="0.585" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_list.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map_sideeffect.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_iter.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g2.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_mutez.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_nat.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/mutez_to_bls12_381_fr.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/first.tz]" time="0.575" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_nat.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/check_signature.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_map_block.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_view.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/sets.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_addr.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type.tz]" time="0.835" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/sha3.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_int.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_join.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_cdr.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev.tz]" time="0.577" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_car.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g1.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/keccak.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/bytes.tz]" time="0.588" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_map_value.tz]" time="0.573" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_split.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left_failwith.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev_cty.tz]" time="0.602" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g2.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_nonexistent_view.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/voting_power.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/not.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/contains_all.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/level.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/subset.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/dign.tz]" time="0.566" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_fib_view.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_mutual_recursion.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/address.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id_store.tz]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_size.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_iter.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/add.tz]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/tez_add_sub.tz]" time="0.573" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_view.tz]" time="0.590" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/diff_timestamps.tz]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello_bytes.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/abs.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname.tz]" time="0.572" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul.tz]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_nat.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/dugn.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/proxy.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type2.tz]" time="0.864" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_bytes.tz]" time="0.594" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_string.tz]" time="0.575" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer-2.tz]" time="0.572" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_consistency_checker.tz]" time="0.575" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/max_in_list.tz]" time="0.577" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_eq.tz]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert.tz]" time="0.573" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmple.tz]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/fail.tz]" time="0.572" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/macro_annotations.tz]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/pair_macro.tz]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/carn_and_cdrn.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/map_caddaadr.tz]" time="0.580" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/set_caddaadr.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpgt.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_gt.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_ge.tz]" time="0.592" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_neq.tz]" time="0.573" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_lt.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/compare_bytes.tz]" time="0.585" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/take_my_money.tz]" time="0.577" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_le.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpneq.tz]" time="0.579" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_mem.tz]" time="0.582" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/compare.tz]" time="0.587" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmplt.tz]" time="0.575" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/min.tz]" time="0.580" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_get_add.tz]" time="0.584" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/build_list.tz]" time="0.577" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpeq.tz]" time="0.580" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpge.tz]" time="0.583" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/unpair_macro.tz]" time="0.583" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[macros/guestbook.tz]" time="0.581" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/authentication.tz]" time="0.601" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_entrypoints.tz]" time="0.587" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_magic.tz]" time="0.592" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_entrypoints_counter.tz]" time="0.581" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat_dapp.tz]" time="0.604" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_read.tz]" time="0.579" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lqt_fa12.mligo.tz]" time="0.716" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/weather_insurance.tz]" time="0.587" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/fa12_reference.tz]" time="0.880" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lockup.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_storer.tz]" time="0.573" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_write.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract.tz]" time="0.577" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/reveal_signed_preimage.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_store.tz]" time="0.571" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/replay.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/generic_multisig.tz]" time="0.590" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/default_account.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_non_fungible.tz]" time="0.585" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/tzip4_view.tz]" time="0.579" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_sender.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_caller.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_fungible.tz]" time="0.595" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_en2.tz]" time="0.588" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_appender.tz]" time="0.572" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/hardlimit.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/legacy_multisig.tz]" time="0.608" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_non_fungible.tz]" time="0.605" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/parameterized_multisig.tz]" time="0.591" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/originate_contract.tz]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_fungible.tz]" time="0.585" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/groth16.tz]" time="0.595" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_receiver.tz]" time="0.592" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract_simple.tz]" time="0.579" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/vote_for_delegate.tz]" time="0.588" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[non_regression/pairk_annot.tz]" time="0.576" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_262.tz]" time="0.570" />
    <testcase classname="tests_013.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_843.tz]" time="1.066" />
    <testcase classname="tests_013.test_contract.TestTypecheckingErrors" name="test_big_map_arity_error" time="8.137" />
    <testcase classname="tests_013.test_contract_baker.TestOriginationCall" name="test_originate" time="8.929" />
    <testcase classname="tests_013.test_contract_baker.TestOriginationCall" name="test_call" time="1.769" />
    <testcase classname="tests_013.test_contract_baker.TestOriginationCall" name="test_balance" time="1.146" />
    <testcase classname="tests_013.test_contract_baker.TestOriginationCall" name="test_query_storage" time="1.048" />
    <testcase classname="tests_013.test_multiple_transfers.TestMultipleTransfers" name="test_empty" time="7.691" />
    <testcase classname="tests_013.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap2-manager]" time="5.896" />
    <testcase classname="tests_013.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap4-bootstrap4]" time="3.470" />
    <testcase classname="tests_013.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap2-manager]" time="4.612" />
    <testcase classname="tests_013.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap4-bootstrap4]" time="5.108" />
    <testcase classname="tests_013.test_tenderbake.TestProtoTenderbake" name="test_init" time="34.227" />
    <testcase classname="tests_013.test_tenderbake.TestProtoTenderbake" name="test_wait" time="20.003" />
    <testcase classname="tests_013.test_tenderbake.TestProtoTenderbake" name="test_level" time="25.474" />
    <testcase classname="tests_014.test_bootstrap.TestThresholdTwo" name="test_setup_network" time="10.090" />
    <testcase classname="tests_014.test_bootstrap.TestThresholdTwo" name="test_add_nodes" time="9.203" />
    <testcase classname="tests_014.test_bootstrap.TestThresholdTwo" name="test_node_3_bootstrapped" time="0.573" />
    <testcase classname="tests_014.test_bootstrap.TestThresholdTwo" name="test_node_1_bootstrapped" time="2.442" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_write_contract" time="0.004" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_originate_first_explosion" time="8.195" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_originate_big_type" time="0.578" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_originate_second_explosion" time="0.716" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_originate_second_explosion_fail" time="0.601" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_typecheck_map_dup_key" time="0.578" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_typecheck_map_bad_ordering" time="0.573" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_typecheck_set_bad_ordering" time="0.591" />
    <testcase classname="tests_014.test_contract.TestGasBound" name="test_typecheck_set_no_duplicates" time="1.041" />
    <testcase classname="tests_014.test_contract.TestContractTypeChecking" name="test_implicit" time="20.780" />
    <testcase classname="tests_014.test_contract.TestContractTypeChecking" name="test_originated_inexistent" time="13.713" />
    <testcase classname="tests_014.test_contract.TestContractTypeChecking" name="test_originated_no_default" time="15.482" />
    <testcase classname="tests_014.test_contract.TestContractTypeChecking" name="test_originated_with_default" time="15.949" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-]" time="7.613" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-a]" time="0.583" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x9dy\xb1\xa3\x7f1\x80\x1c\xd1\x1ag\x06\xfb@\xd6\xbdWRhF\x90;\xb1&gt;\xdeV$9\xe9\xc1\xb8#]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xa9`\x89\xbc\xa7\x1f=\x1am-&lt;\xad\xb3f\x9c\xbdP\xe1e\xe44$\x9d\x8b\x82\x9fA\x16i\x84*\x97]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x99\x11\x03l\xf3\xe8&quot;\x08n\xca\xa0\x07Zi\xfc\x17\x8b\xa8\xf87\x18\xaa\x8f;\xd1\xf6^\x81D\xe6\x1d\x9a]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xb3\x0f\xcb\x06\xa6\xc1\xad\x8f)\x06\xe72\xb1\x0fM\xb7\x89\xd3^\xa6\x8c\x08\x8a\xb3\xf6H\x81\x8b\xa4\xa6ek]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xe0\xcbn8*]\xffr\xac\x1d\xda\x96\x90\x817G\x8b\xd56\xcfKw\x8a\xde\x1f\xe7\xa9\x01\x0b3A\xc2]" time="0.567" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xbd+J\xce\xc4n\xdf(zC\xb9\xb2\x11u0lv\xa8\x1aW\x89\x93&quot;G0\x81\xcd'{\xcd\x1e7]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-c\xea\x0b\xf5\xeeYt\xc3y\x0f+V\xeds*\x1a\x111\xbe\x17}\xeaBa\x97g\xc2\x18\x8e\x12\xe6[]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x13d\xf5\xd8q{\rX\x03\xca\x8d\x9a\xa6\xa3\xb7C\x7f\xf5\x9f\xcec\x91\x1f\x0b\xd0\xb3\xcf\xbaf\xde\x9cu]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x85&gt;F\x89x\x9b\xf4\x1fL\x1d\x1e\xf9\xa1\x8c\x1b\xec\x13\xa1\xe7`\xe8?,\x14\xf1\x88R\x8dA\xbb\rK]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-2\xddS\xd4\xae\x89\xee\xa0zOW\x9e/\xf7\xac\xe2\xc1\xd2\x98\xdc\xf0\x1c\x94\\xbfY\xcd\x93,\xd391]" time="0.568" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xf0\xd1^\xb4\xd2]\xce\x11\x99%\xbb\x0b\x99\x8dH\xa9\x8e\x8aW:\x8a\xce\xe7\xc5MT\x15JLz7\xfc]" time="0.565" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-1?m\x14&amp;\x1a\xf6\xda\xf8.\x98;\xb2\xdf\xd1\xdd\xd0:\xdb\x19\xd7\xf3Oa9G)G\x93\xb2\x12t]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-/7\xbc\xa2\xdeB\x88\xd5A\xa4e]\xe9\xb2\xa3)\x08.\xc4^S\x05\xf3Z\xae@\xa25\xa4\x99\x90\xab]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x85\xa8XD\xfe~\xaa\xb3I\x98\xc8\xef\xd8\xfa\xfc\xae\xab\xa5\xe5\xa5WoG\x12s\x02\xf0\x9b\xe3\xef\x8d\xa2]" time="0.568" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x01\xbe\xcf+\x07d\xbd\x88\xd4\r\xa8\xba\xcb\xed\xab&gt;\xef\xbe\xd4)r\xafVv\xf7\xfd#a\xf3L\x1bE]" time="0.574" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xe6fQ\xfd\xa2o\xe6\xec(\x06\xd7\xa3\xc4a+\xb09B\x94\x8e&amp;\xb388/\xe1B\xaf\x7f1\x04S]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xa5$\xc5\xd7\xcc2\xb0\xc49\xee\xa7\xc6\r\xf3Q\x0e\xf9\xe4\xa2:\xab\xa7a\xd2\xa3\xb87\x08N{\x17\xce]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xfc\x87\xc1P[\xbc\xb2f\x9e\xaa\x8aD\x81\xbc\xf1\x10\xac\xf8\x026\xe0I\xc3\xe9\xe4\x87b\xf1&gt;\xb62\x91]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xee\xa0Y\xe0\xcf:\xc9\xb7\xd7\xba\x8ePo\xb1n6\x15\xd4\xca\xa7\xb1\x9e\xcd\x7f\xd0!HeM\x98z\xe2]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-e\xca\x1f\xea\xb2\xf0\x91\xa4\xa9Pwu\x83;\x93$\xde/\xcfC\x1d\xd0\xbe#\xf8\xfa&quot;?\x19\x99\xb7\xbe]" time="0.572" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-{\xd2\xb5\x8fhj\xfa\x89\xbc\x08CC\x06L&lt;\xbfym\xa7\x95\xc7\xd6\xadmu\xb8\xd7\xe5\xf0ib\x95]" time="0.567" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x97\x1c?f\x97\xcc\xab\\xb8g%8\xe4\xbdP\xff\xf0\x9f^\xff\x84\xb5i#\xa8Pp\x82\xdf\rW~]" time="0.572" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xd8\xd6E\x17\x8a\xf0z\xc1\x95\xd1\x0f\x0c\x96=q\xdc5\xf7\x11\x1c\xdf\x9b '\xc4M\xa0\xa0\x81\x94\xf4(]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x8c\xb6\xc5\xcaT\x044\xae\xe8\xac\x12l4C\xae\x98\x10ZC\x10E\x1c\x80b&quot;\xcd\xb1a\xc9$\x8c\x98]" time="0.565" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x99\xcf\x01\xff\x02\x1e\xd2w\xa9\tt\x87\xec\xac\@\xb9\x97\x98\xf8[6\xa0\x8d\xed\x0e\\xdc/&amp;C\xf1]" time="0.574" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x90k\xf0\x02\xa7\r'\xae\xb99\x81\xb8KCS\x1d\x17\x92\x84\xae\xfd~\x81\xe24\xe3v\x89\x10\x879\xc0]" time="0.583" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xc8\xa7ND\xe3\xe2\xc2\xc4\x93\x12\x16\xa4o\xbd\x15W\xe9\xae\x8e\x1c\x08\xd3&quot;K\x9a\xc6Lo\xca\x06}(]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xa3&lt;'tY\xaf\xd4\x00\xccG-\xf4r\x06\xdb\xb8\xed\xe57\xe0\x0b\xfe&lt;\xb8\xe2vmC\x8b\xa8\xcd\xf8]" time="0.571" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-_i&amp;\x80n\xf4\x0f\xc34!\xbc-\x1cm\xf7\x81o\xfa\xa1\xe9\\xbd=\x1b\x16N\xda\xden\xac\x13\xa0]" time="0.572" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xa8\xe0fLw\xa4w\xd7\xa71\x92\xa3\xd41\xf6\x81\xc7x\xe5\x9b\x89\xd6\xeb2}y 'l\xd1\xb8_]" time="0.571" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-a\xe83\xc3\x15G[)b\xbe\x14\x8a?\x8f\x18\xf4\x8f\x10T\xc7\xc5\xa3$\xec\x1eB\xc5\x87\xddc&quot;\xeb]" time="0.577" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xd1z%\x00\xb4nT\x99;\xe4\xfbR\x85C\x15}\x82m\xfc\x04\xfb\\xa3\x1c1h\xd9\xed\xb5N\xec\]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xb0\xea\xf3\xe0\x8b\x05&gt;\xfc9\x08\xe8\xd4-\xcb\x88\xce\xff&gt;\xb9N7\xbfL=\x1a/\xd4\x0e\xa9\xc2\xa9=]" time="0.577" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xb8&lt;\xc5\xe0\xe2M&gt;\x91vGk\xf2\x07l)\x14ib\xed\x15\xcfK^\xbb\xe1\xdei|`\xe6\xe6\xd0]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-H\xe9\xb7\x11\x001]\xfa\xc5\xd2\xb6\xc2fn_\x88\xb4\xb9\r\xc4P\xd71 ]C\xde \x0cn\xe5\xa8]" time="0.577" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x1e\x1b\xacy\xcc\xacd\xf2\xb0\xed\xbf\x8c\xab\xc2E*C\xc0\xdaC\x03\xa1\x15\x87\x9a\xc5W\xdf&amp;\xbdI\x9b]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x9f\xc4Rl\xc0|\xe0\xf6!h86^F\xcd\xed\xfbN\x0f\x8aS\x0fY\xc1*\xc3\xdc\xba\*\x9b\xb0]" time="0.577" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xdf\xa2~3\xe6\xd2\x83\xb6\x9a\xa3\xccO\xfa[$f\xbe\x1b\xc2\xfe9\xad\xf3\xab\x8eh^\xa6q|\x98_]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xa1S'p\xcb\x1bM\xe6\xb4\xd9\x7f\x84\x8f\x98\x94s\x97!\xfa\x1e\x1d\xbev?\xcf\xc3\x859\\x00d\x10]" time="0.578" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x9b\xc6\x8cVY\x80b\x05bf\x9b\x96\x03\xcd\xcd\x8d\x93\xcc\xe8:\xf2\x02\xa4\x96\xb6*`8VB\xd7\x01]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-V\x9a,\x12n\x105\xb5\xb6\xf6\x8f\xa1\xe0Y\x12\x0f\xd4\xed\x9b:\xc6%A\x11&amp;\x9b\xc9\xe7\xfb\xad\n\x08]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xc1\x10\x11\xdc&lt;\xf6\x96T\x13\xb5#\x12P\xbc\x9f\x83-\xdf\xed&lt;;IJG\xa7 B\xab\xe7\x1fD|]" time="0.572" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-:9\xd863&lt;\x0b\x8ao0\xdf!+\xa2-\xb9v\xdc}\xefc\xdb\xe3\xe1Z\xe1/\x92C\x9b\x82\x93]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xf9\xf7\x00y(\x115&gt;\x9f\xd1\xdc\xc8 \xc1\x14y\x9d\x1f\xb8\xce\xf2\x145h_\xb4\xbe0T\xbc%\x18]" time="0.572" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-+u\xd0\x18\xfa\x17\xb3\xa8\xd3^Yn\xdf&gt;\xb3Z\x11\xa6ol\xbc\xff=i\xb3\xed\x8ew\xacg$\xdd]" time="0.576" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\x1a\xb7\xa4\xba\xa6)\xde\rc\x9ea\xac\xcf\xdbH\xa7P@\xf2\xfbA\tl\xa5\xee\xe91\x19\xefO\x84\x0f]" time="0.578" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-:0\x12g\xab4l\xba\x07\x89\xdcVq\xa1\xf3\xcc^\x92\x96\xdc'\x0e\xf9\x1b\x04\xf1\xa7?\x00\x0c\x0c1]" time="0.572" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xef\x87\xb10\xe4\x05J\x89}V\xd8r\xb4\xfc\xe2#ao\x00lv\x12\xf9.\x19\xbcNG\x15\xcbnv]" time="0.577" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xbfP\xf3?\xbfO\xde\xdf|&quot;[\xec\x92lL\x134\x04qq\xbb\x8b\xda\xce\xe7_\x81\xdcn\xa5 \xdb]" time="0.574" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[keccak-\xa3\x1e\xe2\x8c\xe5\x8b\x10\x19X[\xf3\x0c\xb8\xf7\xf2\xa6\xd5\xf9\xd0\xff\x81\xf8c\x8ap\xe7\x05\xd6\xa8+\xc7\x03]" time="0.571" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-]" time="0.576" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-a]" time="0.583" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x9dy\xb1\xa3\x7f1\x80\x1c\xd1\x1ag\x06\xfb@\xd6\xbdWRhF\x90;\xb1&gt;\xdeV$9\xe9\xc1\xb8#]" time="0.577" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xa9`\x89\xbc\xa7\x1f=\x1am-&lt;\xad\xb3f\x9c\xbdP\xe1e\xe44$\x9d\x8b\x82\x9fA\x16i\x84*\x97]" time="0.568" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x99\x11\x03l\xf3\xe8&quot;\x08n\xca\xa0\x07Zi\xfc\x17\x8b\xa8\xf87\x18\xaa\x8f;\xd1\xf6^\x81D\xe6\x1d\x9a]" time="0.571" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xb3\x0f\xcb\x06\xa6\xc1\xad\x8f)\x06\xe72\xb1\x0fM\xb7\x89\xd3^\xa6\x8c\x08\x8a\xb3\xf6H\x81\x8b\xa4\xa6ek]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xe0\xcbn8*]\xffr\xac\x1d\xda\x96\x90\x817G\x8b\xd56\xcfKw\x8a\xde\x1f\xe7\xa9\x01\x0b3A\xc2]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xbd+J\xce\xc4n\xdf(zC\xb9\xb2\x11u0lv\xa8\x1aW\x89\x93&quot;G0\x81\xcd'{\xcd\x1e7]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-c\xea\x0b\xf5\xeeYt\xc3y\x0f+V\xeds*\x1a\x111\xbe\x17}\xeaBa\x97g\xc2\x18\x8e\x12\xe6[]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x13d\xf5\xd8q{\rX\x03\xca\x8d\x9a\xa6\xa3\xb7C\x7f\xf5\x9f\xcec\x91\x1f\x0b\xd0\xb3\xcf\xbaf\xde\x9cu]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x85&gt;F\x89x\x9b\xf4\x1fL\x1d\x1e\xf9\xa1\x8c\x1b\xec\x13\xa1\xe7`\xe8?,\x14\xf1\x88R\x8dA\xbb\rK]" time="0.584" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-2\xddS\xd4\xae\x89\xee\xa0zOW\x9e/\xf7\xac\xe2\xc1\xd2\x98\xdc\xf0\x1c\x94\\xbfY\xcd\x93,\xd391]" time="0.571" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xf0\xd1^\xb4\xd2]\xce\x11\x99%\xbb\x0b\x99\x8dH\xa9\x8e\x8aW:\x8a\xce\xe7\xc5MT\x15JLz7\xfc]" time="0.567" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-1?m\x14&amp;\x1a\xf6\xda\xf8.\x98;\xb2\xdf\xd1\xdd\xd0:\xdb\x19\xd7\xf3Oa9G)G\x93\xb2\x12t]" time="0.566" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-/7\xbc\xa2\xdeB\x88\xd5A\xa4e]\xe9\xb2\xa3)\x08.\xc4^S\x05\xf3Z\xae@\xa25\xa4\x99\x90\xab]" time="0.568" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x85\xa8XD\xfe~\xaa\xb3I\x98\xc8\xef\xd8\xfa\xfc\xae\xab\xa5\xe5\xa5WoG\x12s\x02\xf0\x9b\xe3\xef\x8d\xa2]" time="0.567" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x01\xbe\xcf+\x07d\xbd\x88\xd4\r\xa8\xba\xcb\xed\xab&gt;\xef\xbe\xd4)r\xafVv\xf7\xfd#a\xf3L\x1bE]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xe6fQ\xfd\xa2o\xe6\xec(\x06\xd7\xa3\xc4a+\xb09B\x94\x8e&amp;\xb388/\xe1B\xaf\x7f1\x04S]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xa5$\xc5\xd7\xcc2\xb0\xc49\xee\xa7\xc6\r\xf3Q\x0e\xf9\xe4\xa2:\xab\xa7a\xd2\xa3\xb87\x08N{\x17\xce]" time="0.565" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xfc\x87\xc1P[\xbc\xb2f\x9e\xaa\x8aD\x81\xbc\xf1\x10\xac\xf8\x026\xe0I\xc3\xe9\xe4\x87b\xf1&gt;\xb62\x91]" time="0.568" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xee\xa0Y\xe0\xcf:\xc9\xb7\xd7\xba\x8ePo\xb1n6\x15\xd4\xca\xa7\xb1\x9e\xcd\x7f\xd0!HeM\x98z\xe2]" time="0.571" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-e\xca\x1f\xea\xb2\xf0\x91\xa4\xa9Pwu\x83;\x93$\xde/\xcfC\x1d\xd0\xbe#\xf8\xfa&quot;?\x19\x99\xb7\xbe]" time="0.574" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-{\xd2\xb5\x8fhj\xfa\x89\xbc\x08CC\x06L&lt;\xbfym\xa7\x95\xc7\xd6\xadmu\xb8\xd7\xe5\xf0ib\x95]" time="0.566" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x97\x1c?f\x97\xcc\xab\\xb8g%8\xe4\xbdP\xff\xf0\x9f^\xff\x84\xb5i#\xa8Pp\x82\xdf\rW~]" time="0.568" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xd8\xd6E\x17\x8a\xf0z\xc1\x95\xd1\x0f\x0c\x96=q\xdc5\xf7\x11\x1c\xdf\x9b '\xc4M\xa0\xa0\x81\x94\xf4(]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x8c\xb6\xc5\xcaT\x044\xae\xe8\xac\x12l4C\xae\x98\x10ZC\x10E\x1c\x80b&quot;\xcd\xb1a\xc9$\x8c\x98]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x99\xcf\x01\xff\x02\x1e\xd2w\xa9\tt\x87\xec\xac\@\xb9\x97\x98\xf8[6\xa0\x8d\xed\x0e\\xdc/&amp;C\xf1]" time="0.574" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x90k\xf0\x02\xa7\r'\xae\xb99\x81\xb8KCS\x1d\x17\x92\x84\xae\xfd~\x81\xe24\xe3v\x89\x10\x879\xc0]" time="0.587" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xc8\xa7ND\xe3\xe2\xc2\xc4\x93\x12\x16\xa4o\xbd\x15W\xe9\xae\x8e\x1c\x08\xd3&quot;K\x9a\xc6Lo\xca\x06}(]" time="0.573" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xa3&lt;'tY\xaf\xd4\x00\xccG-\xf4r\x06\xdb\xb8\xed\xe57\xe0\x0b\xfe&lt;\xb8\xe2vmC\x8b\xa8\xcd\xf8]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-_i&amp;\x80n\xf4\x0f\xc34!\xbc-\x1cm\xf7\x81o\xfa\xa1\xe9\\xbd=\x1b\x16N\xda\xden\xac\x13\xa0]" time="0.568" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xa8\xe0fLw\xa4w\xd7\xa71\x92\xa3\xd41\xf6\x81\xc7x\xe5\x9b\x89\xd6\xeb2}y 'l\xd1\xb8_]" time="0.571" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-a\xe83\xc3\x15G[)b\xbe\x14\x8a?\x8f\x18\xf4\x8f\x10T\xc7\xc5\xa3$\xec\x1eB\xc5\x87\xddc&quot;\xeb]" time="0.572" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xd1z%\x00\xb4nT\x99;\xe4\xfbR\x85C\x15}\x82m\xfc\x04\xfb\\xa3\x1c1h\xd9\xed\xb5N\xec\]" time="0.572" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xb0\xea\xf3\xe0\x8b\x05&gt;\xfc9\x08\xe8\xd4-\xcb\x88\xce\xff&gt;\xb9N7\xbfL=\x1a/\xd4\x0e\xa9\xc2\xa9=]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xb8&lt;\xc5\xe0\xe2M&gt;\x91vGk\xf2\x07l)\x14ib\xed\x15\xcfK^\xbb\xe1\xdei|`\xe6\xe6\xd0]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-H\xe9\xb7\x11\x001]\xfa\xc5\xd2\xb6\xc2fn_\x88\xb4\xb9\r\xc4P\xd71 ]C\xde \x0cn\xe5\xa8]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x1e\x1b\xacy\xcc\xacd\xf2\xb0\xed\xbf\x8c\xab\xc2E*C\xc0\xdaC\x03\xa1\x15\x87\x9a\xc5W\xdf&amp;\xbdI\x9b]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x9f\xc4Rl\xc0|\xe0\xf6!h86^F\xcd\xed\xfbN\x0f\x8aS\x0fY\xc1*\xc3\xdc\xba\*\x9b\xb0]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xdf\xa2~3\xe6\xd2\x83\xb6\x9a\xa3\xccO\xfa[$f\xbe\x1b\xc2\xfe9\xad\xf3\xab\x8eh^\xa6q|\x98_]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xa1S'p\xcb\x1bM\xe6\xb4\xd9\x7f\x84\x8f\x98\x94s\x97!\xfa\x1e\x1d\xbev?\xcf\xc3\x859\\x00d\x10]" time="0.593" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x9b\xc6\x8cVY\x80b\x05bf\x9b\x96\x03\xcd\xcd\x8d\x93\xcc\xe8:\xf2\x02\xa4\x96\xb6*`8VB\xd7\x01]" time="0.574" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-V\x9a,\x12n\x105\xb5\xb6\xf6\x8f\xa1\xe0Y\x12\x0f\xd4\xed\x9b:\xc6%A\x11&amp;\x9b\xc9\xe7\xfb\xad\n\x08]" time="0.566" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xc1\x10\x11\xdc&lt;\xf6\x96T\x13\xb5#\x12P\xbc\x9f\x83-\xdf\xed&lt;;IJG\xa7 B\xab\xe7\x1fD|]" time="0.577" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-:9\xd863&lt;\x0b\x8ao0\xdf!+\xa2-\xb9v\xdc}\xefc\xdb\xe3\xe1Z\xe1/\x92C\x9b\x82\x93]" time="0.570" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xf9\xf7\x00y(\x115&gt;\x9f\xd1\xdc\xc8 \xc1\x14y\x9d\x1f\xb8\xce\xf2\x145h_\xb4\xbe0T\xbc%\x18]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-+u\xd0\x18\xfa\x17\xb3\xa8\xd3^Yn\xdf&gt;\xb3Z\x11\xa6ol\xbc\xff=i\xb3\xed\x8ew\xacg$\xdd]" time="0.571" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\x1a\xb7\xa4\xba\xa6)\xde\rc\x9ea\xac\xcf\xdbH\xa7P@\xf2\xfbA\tl\xa5\xee\xe91\x19\xefO\x84\x0f]" time="0.571" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-:0\x12g\xab4l\xba\x07\x89\xdcVq\xa1\xf3\xcc^\x92\x96\xdc'\x0e\xf9\x1b\x04\xf1\xa7?\x00\x0c\x0c1]" time="0.577" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xef\x87\xb10\xe4\x05J\x89}V\xd8r\xb4\xfc\xe2#ao\x00lv\x12\xf9.\x19\xbcNG\x15\xcbnv]" time="0.569" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xbfP\xf3?\xbfO\xde\xdf|&quot;[\xec\x92lL\x134\x04qq\xbb\x8b\xda\xce\xe7_\x81\xdcn\xa5 \xdb]" time="0.575" />
    <testcase classname="tests_014.test_crypto.TestHash" name="test_hash[sha3-\xa3\x1e\xe2\x8c\xe5\x8b\x10\x19X[\xf3\x0c\xb8\xf7\xf2\xa6\xd5\xf9\xd0\xff\x81\xf8c\x8ap\xe7\x05\xd6\xa8+\xc7\x03]" time="1.039" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_deploy_multisig[msig0]" time="16.263" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer[msig0]" time="0.571" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig0]" time="0.597" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig0]" time="1.730" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_failure[msig0]" time="0.576" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_success[msig0]" time="3.458" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_default_entrypoint[msig0]" time="3.463" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig0]" time="6.352" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_arg[msig0]" time="6.932" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig0]" time="0.582" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_too_high[msig0]" time="0.574" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations[msig0]" time="5.733" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig0]" time="0.576" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_change[msig0]" time="5.158" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_withdraw[msig0]" time="5.162" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig0]" time="7.452" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig0]" time="7.426" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_deploy_multisig[msig1]" time="7.509" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer[msig1]" time="0.575" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig1]" time="0.571" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig1]" time="1.710" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_failure[msig1]" time="0.570" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_success[msig1]" time="3.457" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_default_entrypoint[msig1]" time="3.461" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig1]" time="6.341" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_arg[msig1]" time="6.913" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig1]" time="0.571" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_too_high[msig1]" time="0.572" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations[msig1]" time="5.750" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig1]" time="0.569" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_change[msig1]" time="5.145" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_withdraw[msig1]" time="5.164" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig1]" time="7.419" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig1]" time="7.429" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_deploy_multisig[msig2]" time="2.890" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer[msig2]" time="0.577" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig2]" time="0.577" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig2]" time="1.714" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_failure[msig2]" time="0.574" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_success[msig2]" time="3.454" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_default_entrypoint[msig2]" time="0.573" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig2]" time="6.363" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_arg[msig2]" time="1.759" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig2]" time="0.572" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_too_high[msig2]" time="0.571" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations[msig2]" time="1.136" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig2]" time="0.575" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_change[msig2]" time="5.151" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_withdraw[msig2]" time="5.165" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig2]" time="7.409" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig2]" time="7.419" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_deploy_multisig[msig3]" time="2.887" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer[msig3]" time="0.568" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig3]" time="0.572" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig3]" time="1.693" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_failure[msig3]" time="0.570" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_success[msig3]" time="3.438" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_default_entrypoint[msig3]" time="0.572" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig3]" time="6.341" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_with_arg[msig3]" time="1.753" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig3]" time="0.569" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_transfer_too_high[msig3]" time="0.565" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations[msig3]" time="1.134" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig3]" time="0.577" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_change[msig3]" time="5.127" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_delegate_withdraw[msig3]" time="5.172" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig3]" time="7.440" />
    <testcase classname="tests_014.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig3]" time="7.836" />
    <testcase classname="tests_014.test_tenderbake.TestProtoTenderbake" name="test_init" time="32.990" />
    <testcase classname="tests_014.test_tenderbake.TestProtoTenderbake" name="test_wait" time="20.021" />
    <testcase classname="tests_014.test_tenderbake.TestProtoTenderbake" name="test_level" time="25.162" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_manager_origination" time="9.903" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_delegatable_origination" time="1.630" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_target_with_entrypoints_origination" time="1.643" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_target_without_entrypoints_origination" time="1.626" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_target_without_default_origination" time="1.630" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_target_with_root_origination" time="1.614" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_manager_set_delegate" time="6.461" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_manager_withdraw_delegate" time="3.261" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_transfer_to_manager" time="3.197" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_simple_transfer_from_manager_to_implicit" time="3.191" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_transfer_from_manager_to_manager" time="4.243" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_transfer_from_manager_to_default" time="2.174" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_transfer_from_manager_to_target" time="1.094" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_transfer_from_manager_to_entrypoint_with_args" time="4.405" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_transfer_from_manager_no_entrypoint_with_args" time="2.201" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_transfer_from_manager_to_no_default_with_args" time="2.202" />
    <testcase classname="tests_013.test_contract.TestManager" name="test_transfer_from_manager_to_rooted_target_with_args" time="2.634" />
    <testcase classname="tests_013.test_contract.TestBadAnnotation" name="test_write_contract_bad_annot" time="0.004" />
    <testcase classname="tests_013.test_contract.TestBadAnnotation" name="test_bad_annotation" time="7.570" />
    <testcase classname="tests_013.test_contract.TestScriptHashMultiple" name="test_contract_hashes_empty" time="7.162" />
    <testcase classname="tests_013.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single" time="0.528" />
    <testcase classname="tests_013.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single_display_names" time="0.531" />
    <testcase classname="tests_013.test_contract.TestScriptHashMultiple" name="test_contract_hashes_mixed" time="1.055" />
    <testcase classname="tests_013.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-True-results0]" time="0.535" />
    <testcase classname="tests_013.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-False-results1]" time="0.528" />
    <testcase classname="tests_013.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-True-results2]" time="0.527" />
    <testcase classname="tests_013.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-False-results3]" time="0.960" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_init" time="12.712" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_a" time="60.511" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_on_bootstrapped_node" time="2.442" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch1" time="0.472" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_import_and_reconstruct" time="9.362" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_request_all_blocks_with_metadata" time="0.074" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_import_before_reconstruct" time="7.110" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node2" time="0.035" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_after_snapshot_import" time="2.687" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node_2" time="0.068" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_b" time="50.579" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch2" time="0.492" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_sync_node3" time="2.527" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node3" time="0.545" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_command_after_bootstrap" time="2.973" />
    <testcase classname="tests_013.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node3" time="3.096" />
    <testcase classname="tests_013.test_programs.TestProgramsCommands" name="test_convert_script" time="12.946" />
    <testcase classname="tests_013.test_programs.TestProgramsCommands" name="test_convert_data" time="13.172" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_first_address_of_key[zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="13.089" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[0-zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="6.377" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[1-zet13mN26QV67FgPzMSzrigXjKZNMMtCubhi9L3kUePnFYdXqEjc8pmjw1h2wC6NLZf5F-1]" time="6.367" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[2-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="6.444" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[3-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="6.441" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[4-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="6.463" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[100-zet14LmgdAzVrTtQKpeuD3f2y7wFSjXTMEexNNuiEWhGimm25enxkqmwmbdFsC4y6YmYx-100]" time="6.440" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[143534-zet14EWNxZYoHJASHFpcCYSfTfQokWSMzdJeV5SfaGEPDtiYiDCX5jz8QkMF5jZaK5F4k-143536]" time="6.498" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[42-zet143WVQUmNodhSe4ytHL6gvtdXYhRp7bywDWASUFYUCMGAS71juXT6AyWY89fjg3eZn-42]" time="6.504" />
    <testcase classname="tests_013.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[90870987456348-zet13CiUqFsVEr2LdMnyyUQNL3Nh74sa4LdU6V3oD3YfcizbwuFtftPRYvRrB2zsVaEw1-90870987456348]" time="6.910" />
    <testcase classname="tests_013.test_tls.TestTLS" name="test_bootstrapped" time="0.000">
      <skipped type="pytest.skip" message="requires to install a custom CA">/builds/tezos/tezos/tests_python/tests_013/test_tls.py:22: requires to install a custom CA</skipped>
    </testcase>
    <testcase classname="tests_014.test_bootstrap.TestManyNodesBootstrap" name="test_init" time="12.930" />
    <testcase classname="tests_014.test_bootstrap.TestManyNodesBootstrap" name="test_bootstrap" time="1.093" />
    <testcase classname="tests_014.test_bootstrap.TestManyNodesBootstrap" name="test_add_nodes" time="18.360" />
    <testcase classname="tests_014.test_bootstrap.TestManyNodesBootstrap" name="test_let_baking" time="10.009" />
    <testcase classname="tests_014.test_bootstrap.TestManyNodesBootstrap" name="test_progress" time="0.602" />
    <testcase classname="tests_014.test_bootstrap.TestManyNodesBootstrap" name="test_add_one_more_node" time="10.360" />
    <testcase classname="tests_014.test_contract.TestNonRegression" name="test_issue_242_originate" time="8.546" />
    <testcase classname="tests_014.test_contract.TestNonRegression" name="test_issue_242_assert_balance" time="0.546" />
    <testcase classname="tests_014.test_contract.TestNonRegression" name="test_issue_843" time="4.844" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_annotation_length_success" time="7.325" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_annotation_length_failure" time="0.545" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_alphabetic" time="0.546" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_numeral" time="0.555" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_invalid_character" time="0.546" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_alphabetic" time="0.545" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_numeral" time="0.548" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_invalid_character" time="0.551" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic_legacy" time="0.545" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral_legacy" time="0.546" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic" time="0.549" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral" time="0.546" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_invalid_character" time="0.553" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_alphabetic" time="0.547" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_numeral" time="0.544" />
    <testcase classname="tests_014.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_invalid_character" time="0.964" />
    <testcase classname="tests_014.test_forge_block.TestForgeBlock" name="test_setup_network" time="6.237" />
    <testcase classname="tests_014.test_forge_block.TestForgeBlock" name="test_protocol_exists" time="0.544" />
    <testcase classname="tests_014.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ok" time="0.544" />
    <testcase classname="tests_014.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ko" time="0.981">
      <skipped type="pytest.xfail" message="" />
    </testcase>
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_init" time="14.765" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_no_peers" time="2.690" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_add_peers" time="2.706" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_check_clique" time="2.686" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_check_tables" time="5.363" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_set_expected_peers" time="5.375" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_expected_peers" time="5.390" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_wrong_expected_peer" time="5.451" />
    <testcase classname="tests_014.test_p2p.TestTrustedRing" name="test_check_stat_with_wrong_expected_peers" time="7.725" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_setup_network" time="31.937" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_wait_for_014" time="3.312" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_network_gen_operations" time="121.144" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.456" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_synchronize" time="2.750" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_check_operations" time="5.083" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_delegates" time="7.929" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_no_service_1" time="0.585" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_no_service_2" time="0.590" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_no_service_3" time="0.591" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_bake" time="0.615" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_sign_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.594" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_sign_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.590" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_sign_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.592" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_sign_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.592" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_check_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.590" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_check_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.589" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_check_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.587" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_check_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.587" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap1-msg1-False]" time="9.791" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap2-msg2-False]" time="2.452" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap3-msg3-True]" time="2.502" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap4-msg4-True]" time="2.435" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_gen_keys" time="1.888" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_transfers" time="3.668" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_balances" time="1.746" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_transfer_bar_foo" time="2.411" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_balances_bar_foo" time="1.168" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_transfer_foo_bar" time="2.418" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_balances_foo_bar" time="1.161" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_transfer_failure" time="0.594" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_originate_contract_noop" time="2.380" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_transfer_to_noop" time="1.227" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_contract_hardlimit" time="3.689" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_transfers_bootstraps5_bootstrap1" time="4.882" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_activate_accounts" time="3.728" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_transfer_king_queen" time="1.262" />
    <testcase classname="tests_013.test_basic.TestRawContext" name="test_duplicate_alias" time="1.681" />
    <testcase classname="tests_013.test_client_without_node.TestImportKeyMnemonic" name="test_import_simple" time="8.570" />
    <testcase classname="tests_013.test_client_without_node.TestImportKeyMnemonic" name="test_import_already_present_alias" time="1.198" />
    <testcase classname="tests_013.test_client_without_node.TestImportKeyMnemonic" name="test_import_passphrase" time="1.198" />
    <testcase classname="tests_013.test_client_without_node.TestImportKeyMnemonic" name="test_encrypted" time="1.928" />
    <testcase classname="tests_013.test_client_without_node.TestImportKeyMnemonic" name="test_gen_key_from_menmonic_bad_mnemonic" time="1.067" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_replay_originate" time="9.214" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_replay_transfer_fail" time="0.604" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_create_contract_originate" time="1.836" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_create_contract_balance" time="0.595" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_create_contract_perform_creation" time="3.038" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname.tz]" time="3.682" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname_alt.tz]" time="3.679" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_default_account_originate" time="1.835" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_default_account_transfer_then_bake" time="3.071" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_reveal_signed_preimage_originate" time="1.828" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_wrong_preimage" time="0.609" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_wrong_signature" time="0.607" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_good_preimage_and_signature" time="1.253" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_vote_for_delegate_originate" time="2.445" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity1" time="0.604" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity2" time="0.607" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b3_vote_for_b5" time="1.849" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate1" time="0.596" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b2" time="1.840" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate2" time="0.595" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b5" time="1.859" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_vote_for_delegate_has_delegate" time="0.600" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_multiple_entrypoints_counter" time="4.318" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_originate_simple_entrypoints" time="2.450" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}&quot;-(Some &quot;{adr}%A&quot;)]" time="0.603" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-string-&quot;{adr}&quot;-(Some &quot;{adr}%B&quot;)]" time="0.595" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-nat-&quot;{adr}&quot;-(Some &quot;{adr}%C&quot;)]" time="0.592" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None0]" time="0.592" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%B&quot;-None]" time="0.586" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%D&quot;-None]" time="0.589" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None1]" time="0.594" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}%A&quot;-None]" time="0.588" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}%A&quot;-None]" time="0.588" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%A&quot;-(Some &quot;{adr}%A&quot;)]" time="0.597" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-string-&quot;{adr}%B&quot;-(Some &quot;{adr}%B&quot;)]" time="0.596" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-nat-&quot;{adr}%C&quot;-(Some &quot;{adr}%C&quot;)]" time="0.594" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%B&quot;-None]" time="0.596" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%D&quot;-None]" time="0.596" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}&quot;-None]" time="0.587" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}&quot;-None]" time="0.587" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-int-&quot;{adr}&quot;-None]" time="0.592" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}&quot;-None]" time="0.586" />
    <testcase classname="tests_013.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-int-&quot;{adr}&quot;-None]" time="1.058" />
    <testcase classname="tests_013.test_contract.TestOriginateContractFromContract" name="test_originate_contract_from_contract_origination" time="9.054" />
    <testcase classname="tests_013.test_contract.TestOriginateContractFromContract" name="test_originate_contract_from_contract_transfer" time="1.690" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/build_list.tz]" time="7.837" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/map_caddaadr.tz]" time="0.588" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpneq.tz]" time="0.591" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert.tz]" time="0.587" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_le.tz]" time="0.582" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/fail.tz]" time="0.582" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/min.tz]" time="0.583" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare.tz]" time="0.587" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_gt.tz]" time="0.582" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_mem.tz]" time="0.581" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/take_my_money.tz]" time="0.582" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/pair_macro.tz]" time="0.590" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_get_add.tz]" time="0.580" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/max_in_list.tz]" time="0.585" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/macro_annotations.tz]" time="0.579" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_eq.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmplt.tz]" time="0.583" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpgt.tz]" time="0.578" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_ge.tz]" time="0.586" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_neq.tz]" time="0.583" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/guestbook.tz]" time="0.582" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmple.tz]" time="0.583" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/unpair_macro.tz]" time="0.596" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/set_caddaadr.tz]" time="0.584" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpeq.tz]" time="0.580" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpge.tz]" time="0.587" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/carn_and_cdrn.tz]" time="0.584" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_lt.tz]" time="0.581" />
    <testcase classname="tests_013.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare_bytes.tz]" time="1.061" />
    <testcase classname="tests_013.test_openapi.TestOpenAPI" name="test_validity[describe]" time="20.300" />
    <testcase classname="tests_013.test_openapi.TestOpenAPI" name="test_validity[describe/chains/main/blocks/head/]" time="130.953" />
    <testcase classname="tests_014.test_bootstrap.TestSplitView" name="test_setup_network" time="13.264" />
    <testcase classname="tests_014.test_bootstrap.TestSplitView" name="test_all_nodes_boostrap" time="1.740" />
    <testcase classname="tests_014.test_bootstrap.TestSplitView" name="test_pause" time="2.003" />
    <testcase classname="tests_014.test_bootstrap.TestSplitView" name="test_disconnect_node" time="1.151" />
    <testcase classname="tests_014.test_bootstrap.TestSplitView" name="test_sync_status" time="3.135" />
    <testcase classname="tests_014.test_contract.TestBigMapToSelf" name="test_big_map_to_self_origination" time="9.429" />
    <testcase classname="tests_014.test_contract.TestBigMapToSelf" name="test_big_map_to_self_transfer" time="2.840" />
    <testcase classname="tests_014.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_origination" time="8.907" />
    <testcase classname="tests_014.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_add_first_transfer" time="1.180" />
    <testcase classname="tests_014.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_clear_transfer" time="1.177" />
    <testcase classname="tests_014.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_add_second_transfer" time="1.187" />
    <testcase classname="tests_014.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_add_third_transfer" time="1.658" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer[fa12_reference]" time="12.478" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[fa12_reference]" time="0.583" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_approve[fa12_reference]" time="1.772" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[fa12_reference]" time="0.602" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_as[fa12_reference]" time="2.916" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[fa12_reference]" time="0.580" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers[fa12_reference]" time="3.487" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[fa12_reference]" time="4.645" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[fa12_reference]" time="6.459" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer[lqt_fa12]" time="5.348" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[lqt_fa12]" time="0.585" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_approve[lqt_fa12]" time="1.761" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[lqt_fa12]" time="0.578" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_as[lqt_fa12]" time="2.927" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[lqt_fa12]" time="0.582" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers[lqt_fa12]" time="3.521" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[lqt_fa12]" time="4.679" />
    <testcase classname="tests_014.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[lqt_fa12]" time="7.020" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_init" time="34.296" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_wait_for_two_cycles" time="19.127" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_get_all_blocks" time="113.826" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_cycle_alignment" time="0.001" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_collect_seed_nonce_hashes" time="0.001" />
    <testcase classname="tests_014.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_check_revelations" time="2.643" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_init_nodes" time="33.268" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_some_bakers" time="0.212" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_activate" time="8.650" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_remaining_bakers" time="12.325" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_wait" time="20.021" />
    <testcase classname="tests_014.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_level" time="39.043" />
    <testcase classname="tests_013.test_client_without_node.TestChainId" name="test_chain_id_block_hash" time="0.533" />
    <testcase classname="tests_013.test_client_without_node.TestChainId" name="test_chain_id_seed" time="0.533" />
    <testcase classname="tests_013.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_sender" time="8.244" />
    <testcase classname="tests_013.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_receiver" time="1.633" />
    <testcase classname="tests_013.test_contract.TestSelfAddressTransfer" name="test_send_self_address" time="1.511" />
    <testcase classname="tests_013.test_cors.TestCors" name="test_preflight" time="6.071" />
    <testcase classname="tests_013.test_cors.TestCors" name="test_request" time="0.424" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[0]" time="14.040" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[1]" time="2.176" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[10]" time="2.222" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[42]" time="2.175" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[100]" time="2.184" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[65535]" time="2.184" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[-1]" time="0.536" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65536]" time="0.530" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65598909]" time="0.534" />
    <testcase classname="tests_013.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[908923434]" time="0.956" />
    <testcase classname="tests_013.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_init" time="31.503" />
    <testcase classname="tests_013.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_restart" time="28.361" />
    <testcase classname="tests_013.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_level" time="5.033" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_setup_network" time="31.281" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_wait_for_013" time="3.214" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_network_gen_operations" time="121.923" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.456" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_synchronize" time="2.679" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_check_operations" time="5.046" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_init" time="6.815" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_choose_players" time="1.086" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_bake" time="0.567" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_level" time="0.552" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_transfer" time="0.555" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_bake_again" time="0.568" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_level_again" time="28.712" />
    <testcase classname="tests_013.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_balance" time="1.525" />
    <testcase classname="tests_014.test_client.TestSimulation" name="test_transfer_simulation" time="9.205" />
    <testcase classname="tests_014.test_client.TestSimulation" name="test_transfer_without_simulation" time="0.559" />
    <testcase classname="tests_014.test_client.TestSimulation" name="test_delegate_simulation" time="3.387" />
    <testcase classname="tests_014.test_client.TestSimulation" name="test_delegate_without_simulation" time="0.974" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_replay_originate" time="8.512" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_replay_transfer_fail" time="0.562" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_originate" time="1.708" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_balance" time="0.563" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_perform_creation" time="2.788" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname.tz]" time="3.375" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname_alt.tz]" time="3.381" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_default_account_originate" time="1.691" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_default_account_transfer_then_bake" time="2.841" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_reveal_signed_preimage_originate" time="1.683" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_wrong_preimage" time="0.557" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_wrong_signature" time="0.556" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_good_preimage_and_signature" time="1.143" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_originate" time="2.229" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity1" time="0.557" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity2" time="0.561" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b3_vote_for_b5" time="1.687" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate1" time="0.548" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b2" time="1.690" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate2" time="0.547" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b5" time="1.696" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_vote_for_delegate_has_delegate" time="0.553" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_multiple_entrypoints_counter" time="3.997" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_originate_simple_entrypoints" time="2.273" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}&quot;-(Some &quot;{adr}%A&quot;)]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-string-&quot;{adr}&quot;-(Some &quot;{adr}%B&quot;)]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-nat-&quot;{adr}&quot;-(Some &quot;{adr}%C&quot;)]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None0]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%B&quot;-None]" time="0.549" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%D&quot;-None]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None1]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}%A&quot;-None]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}%A&quot;-None]" time="0.547" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%A&quot;-(Some &quot;{adr}%A&quot;)]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-string-&quot;{adr}%B&quot;-(Some &quot;{adr}%B&quot;)]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-nat-&quot;{adr}%C&quot;-(Some &quot;{adr}%C&quot;)]" time="0.553" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%B&quot;-None]" time="0.550" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%D&quot;-None]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}&quot;-None]" time="0.541" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}&quot;-None]" time="0.542" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-int-&quot;{adr}&quot;-None]" time="0.555" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}&quot;-None]" time="0.548" />
    <testcase classname="tests_014.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-int-&quot;{adr}&quot;-None]" time="0.966" />
    <testcase classname="tests_014.test_contract_baker.TestOriginationCall" name="test_originate" time="8.475" />
    <testcase classname="tests_014.test_contract_baker.TestOriginationCall" name="test_call" time="1.657" />
    <testcase classname="tests_014.test_contract_baker.TestOriginationCall" name="test_balance" time="1.086" />
    <testcase classname="tests_014.test_contract_baker.TestOriginationCall" name="test_query_storage" time="0.970" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_init" time="19.174" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_level" time="1.645" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_terminate_nodes_1_and_2" time="0.001" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_bake_node_0" time="0.681" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_endorse_node_0" time="31.518" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_bake_node_0_again" time="0.571" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_first_branch" time="97.660" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_restart_node_2" time="1.585" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_bake_node_2" time="0.605" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_bake_node_2_again" time="0.615" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_second_branch" time="98.679" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_restart_all" time="3.086" />
    <testcase classname="tests_014.test_fork.TestFork" name="test_check_head" time="194.345" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_setup_network" time="6.897" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_wait_for_protocol" time="0.549" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_on_vote_file" time="4.225" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_off_vote_file" time="4.223" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_pass_vote_file" time="4.225" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_nonexistent_vote_file" time="4.224" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_invalid_json" time="4.225" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_default_file_location" time="4.226" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_vote_caching" time="6.226" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_path_overrides_default_location" time="4.224" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_true_vote_file" time="4.225" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_false_vote_file" time="4.225" />
    <testcase classname="tests_014.test_per_block_votes.TestAllPerBlockVotes" name="test_wrong_key" time="4.693" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_setup_network" time="31.860" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_topology" time="3.080" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_wait_for_014" time="3.144" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_network_gen_operations" time="122.192" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_kill_baker" time="0.456" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_synchronize" time="2.661" />
    <testcase classname="tests_014.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_operations" time="5.054" />
    <testcase classname="tests_013.test_binaries.TestBinaries" name="test_version" time="3.219" />
    <testcase classname="tests_013.test_client.TestSimulation" name="test_transfer_simulation" time="9.303" />
    <testcase classname="tests_013.test_client.TestSimulation" name="test_transfer_without_simulation" time="0.555" />
    <testcase classname="tests_013.test_client.TestSimulation" name="test_delegate_simulation" time="3.376" />
    <testcase classname="tests_013.test_client.TestSimulation" name="test_delegate_without_simulation" time="1.026" />
    <testcase classname="tests_013.test_forge_block.TestForgeBlock" name="test_setup_network" time="6.295" />
    <testcase classname="tests_013.test_forge_block.TestForgeBlock" name="test_protocol_exists" time="0.550" />
    <testcase classname="tests_013.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ok" time="0.553" />
    <testcase classname="tests_013.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ko" time="1.041">
      <skipped type="pytest.xfail" message="" />
    </testcase>
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_setup" time="7.972" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_call_mint_or_burn" time="1.151" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_call_approve1" time="1.147" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_call_approve2" time="1.146" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_call_approve3" time="1.146" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_add_liquidity" time="1.163" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_buy_tok" time="1.166" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_transfer" time="1.153" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_sell_tok" time="1.147" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_dex_storage" time="0.555" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_lqt_storage" time="0.552" />
    <testcase classname="tests_013.test_liquidity_baking.TestTrades" name="test_tok_storage" time="1.018" />
    <testcase classname="tests_013.test_p2p.TestTrustedRing" name="test_init" time="14.953" />
    <testcase classname="tests_013.test_p2p.TestTrustedRing" name="test_no_peers" time="2.786" />
    <testcase classname="tests_013.test_p2p.TestTrustedRing" name="test_add_peers" time="2.758" />
    <testcase classname="tests_013.test_p2p.TestTrustedRing" name="test_check_clique" time="2.757" />
    <testcase classname="tests_013.test_p2p.TestTrustedRing" name="test_check_tables" time="5.507" />
    <testcase classname="tests_013.test_p2p.TestTrustedRing" name="test_set_expected_peers" time="5.515" />
    <testcase classname="tests_013.test_p2p.TestTrustedRing" name="test_expected_peers" time="5.514" />
    <testcase classname="tests_013.test_p2p.TestTrustedRing" name="test_wrong_expected_peer" time="5.532" />
    <testcase classname="tests_013.test_p2p.TestTrustedRing" name="test_check_stat_with_wrong_expected_peers" time="7.847" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_setup_network" time="32.516" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_topology" time="3.024" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_wait_for_013" time="3.226" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_network_gen_operations" time="121.369" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_kill_baker" time="0.455" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_synchronize" time="2.768" />
    <testcase classname="tests_013.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_operations" time="5.133" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_init" time="14.908" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_level" time="1.100" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_terminate_node_1" time="0.001" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_bake_node_0" time="1.194" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_endorse_node_0" time="33.398" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_restart_node_1" time="1.556" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_start_accuser" time="2.108" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_bake_node_1" time="0.573" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_endorse_node_2" time="132.936" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_restart_node_0" time="1.553" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_check_level" time="1.110" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_bake_block" time="0.584" />
    <testcase classname="tests_014.test_accuser.TestAccuser" name="test_double_baking_evidence_generated" time="1.509" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_import_simple" time="7.977" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_import_already_present_alias" time="1.102" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_import_passphrase" time="1.101" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_encrypted" time="1.788" />
    <testcase classname="tests_014.test_client_without_node.TestImportKeyMnemonic" name="test_gen_key_from_menmonic_bad_mnemonic" time="1.025" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_unit" time="7.957" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_options" time="2.205" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_unions" time="2.776" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_pair" time="9.360" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_order_of_pairs" time="1.105" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_chain_id" time="2.214" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_signature" time="3.308" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_key" time="1.644" />
    <testcase classname="tests_014.test_contract.TestComparables" name="test_comparable_key_different_schemes" time="7.098" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-0-{ 0 }]" time="7.414" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-3-{ 0 ; 1 ; 2 ; 3 }]" time="0.561" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-10-{ 0 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 }]" time="0.555" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{}-None]" time="0.546" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 1 }-(Some 1)]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -1 }-(Some -1)]" time="0.566" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)0]" time="0.547" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)1]" time="0.556" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -10 ; -1 ; -20 ; -100 }-(Some -1)]" time="0.555" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 1000000 2000000)-{ False ; False ; True ; False ; True }]" time="0.557" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2000000 1000000)-{ False ; True ; False ; True ; False }]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2370000 2370000)-{ True ; False ; False ; True ; True }]" time="0.548" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert.tz-Unit-True-Unit]" time="0.554" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit0]" time="0.554" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit1]" time="0.555" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_neq.tz-Unit-(Pair 0 -1)-Unit]" time="0.555" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_lt.tz-Unit-(Pair -1 0)-Unit]" time="0.549" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair 0 0)-Unit]" time="0.552" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair -1 0)-Unit]" time="0.555" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_gt.tz-Unit-(Pair 0 -1)-Unit]" time="0.556" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 0)-Unit]" time="0.568" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 -1)-Unit]" time="0.549" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpeq.tz-Unit-(Pair -1 -1)-Unit]" time="0.549" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpneq.tz-Unit-(Pair 0 -1)-Unit]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmplt.tz-Unit-(Pair -1 0)-Unit]" time="0.554" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair -1 0)-Unit]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair 0 0)-Unit]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpgt.tz-Unit-(Pair 0 -1)-Unit]" time="0.559" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 -1)-Unit]" time="0.552" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 0)-Unit]" time="0.547" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[set_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-3000000-(Pair (Pair 1 2 (Pair (Pair 3 3000000) 4) 5) 6)]" time="0.555" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[map_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-Unit-(Pair (Pair 1 2 (Pair (Pair 3 1000000) 4) 5) 6)]" time="0.549" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x34)-{ False ; False ; True ; False ; True }]" time="0.564" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33aa)-{ False ; False ; True ; False ; True }]" time="0.554" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33)-{ True ; False ; False ; True ; True }]" time="0.551" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x34 0x33)-{ False ; True ; False ; True ; False }]" time="0.554" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert.tz-Unit-False]" time="0.562" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)0]" time="0.554" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)1]" time="0.556" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_neq.tz-Unit-(Pair -1 -1)]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 -1)]" time="0.547" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 0)]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_le.tz-Unit-(Pair 0 -1)]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair -1 0)]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair 0 0)]" time="0.553" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_ge.tz-Unit-(Pair -1 0)]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpeq.tz-Unit-(Pair 0 -1)]" time="0.558" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpneq.tz-Unit-(Pair -1 -1)]" time="0.549" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 0)]" time="0.550" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 -1)]" time="0.551" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmple.tz-Unit-(Pair 0 -1)]" time="0.551" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair 0 0)]" time="0.571" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair -1 0)]" time="0.549" />
    <testcase classname="tests_014.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpge.tz-Unit-(Pair -1 0)]" time="0.973" />
    <testcase classname="tests_014.test_injection.TestInjectionAndActivation" name="test_check_resources" time="0.001" />
    <testcase classname="tests_014.test_injection.TestInjectionAndActivation" name="test_compute_hash" time="0.067" />
    <testcase classname="tests_014.test_injection.TestInjectionAndActivation" name="test_injection" time="20.043" />
    <testcase classname="tests_014.test_injection.TestInjectionAndActivation" name="test_check_injected" time="0.548" />
    <testcase classname="tests_014.test_injection.TestInjectionAndActivation" name="test_environment_version" time="0.556" />
    <testcase classname="tests_014.test_injection.TestInjectionAndActivation" name="test_activation" time="0.727" />
    <testcase classname="tests_014.test_injection.TestInjectionAndActivation" name="test_check_protocol" time="3.116" />
    <testcase classname="tests_014.test_programs.TestProgramsCommands" name="test_convert_script" time="13.515" />
    <testcase classname="tests_014.test_programs.TestProgramsCommands" name="test_convert_data" time="13.751" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_init" time="6.864" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_choose_players" time="1.109" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_bake" time="0.576" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_deposit" time="1.101" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_level" time="103.686" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_preendorse" time="2.276" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_transfer" time="0.563" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_endorse" time="2.277" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_transfer_is_pending" time="32.349" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_bake_again" time="3.260" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_level_again" time="0.679" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_balance" time="1.112" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBake" name="test_bake_fail" time="0.999" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_unparsing_mode[None]" time="7.547" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Readable]" time="0.565" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized]" time="0.564" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized_legacy]" time="0.560" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_legacy_flag" time="1.129" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_script[None]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_script[Readable]" time="0.561" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_script[Optimized]" time="0.568" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_script[Optimized_legacy]" time="0.569" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_type[nat]" time="0.558" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_type[list nat]" time="0.567" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_type[pair nat int]" time="0.574" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int)]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool]" time="0.563" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool)]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool bytes]" time="0.562" />
    <testcase classname="tests_013.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool bytes)]" time="1.033" />
    <testcase classname="tests_013.test_contract.TestTZIP4View" name="test_run_view" time="10.883" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainLevel" name="test_level" time="15.006" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_init" time="20.082" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_level" time="1.736" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_terminate_nodes_1_and_2" time="0.001" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_bake_node_0" time="0.731" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_endorse_node_0" time="2.492" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_bake_node_0_again" time="0.611" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_first_branch" time="30.183" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_restart_node_2" time="1.589" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_bake_node_2" time="0.613" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_bake_node_2_again" time="0.596" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_second_branch" time="30.845" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_restart_all" time="3.144" />
    <testcase classname="tests_013.test_fork.TestFork" name="test_check_head" time="62.938" />
    <testcase classname="tests_013.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_delegatable[None]" time="14.424" />
    <testcase classname="tests_013.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_spendable[None]" time="3.433" />
    <testcase classname="tests_013.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_delegatable[proxy]" time="14.779" />
    <testcase classname="tests_013.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_spendable[proxy]" time="3.837" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_setup_network" time="36.003" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_wait_for_protocol" time="3.493" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_network_gen_operations_and_add_nodes" time="195.689" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.456" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_synchronize" time="5.615" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_progress" time="0.560" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_operations" time="5.628" />
    <testcase classname="tests_014.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_logs" time="4.836" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\n]" time="9.837" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\nign]" time="0.953" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\npassword]" time="0.959" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[password\n]" time="0.832" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\npassword\n]" time="0.959" />
    <testcase classname="tests_014.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\n\npassword\n]" time="1.565" />
    <testcase classname="tests_014.test_contract.TestTypecheckingErrors" name="test_big_map_arity_error" time="7.974" />
    <testcase classname="tests_014.test_contract_macros.TestGuestBook" name="test_guestbook" time="11.942" />
    <testcase classname="tests_014.test_injection.TestActivation" name="test_proto_known" time="7.068" />
    <testcase classname="tests_014.test_injection.TestActivation" name="test_first_protocol" time="0.562" />
    <testcase classname="tests_014.test_injection.TestActivation" name="test_activate_demo" time="0.559" />
    <testcase classname="tests_014.test_injection.TestActivation" name="test_level1" time="0.557" />
    <testcase classname="tests_014.test_injection.TestActivation" name="test_protocol_genesis" time="1.027" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_proto_known" time="6.915" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_proto_client_known" time="0.553" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_first_protocol" time="0.559" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_activate_proto" time="0.582" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_level1" time="0.561" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_protocol_genesis" time="0.561" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_bake_command" time="1.559" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_level2" time="0.565" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_inject_operations" time="1.662" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_mempool" time="0.556" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_bake_command_2" time="1.556" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_level3" time="0.562" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_a" time="0.561" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_b" time="0.559" />
    <testcase classname="tests_014.test_proto_demo_counter.TestProtoDemo" name="test_get_counter_commands" time="1.572" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_init" time="6.904" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_choose_players" time="1.113" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_bake" time="0.584" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_level" time="0.554" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_transfer" time="0.562" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_bake_again" time="0.575" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_level_again" time="100.498" />
    <testcase classname="tests_014.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_balance" time="1.619" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_init" time="15.165" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_level" time="1.122" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_terminate_node_1" time="0.001" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_bake_node_0" time="1.189" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_endorse_node_0" time="3.028" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_restart_node_1" time="1.575" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_start_accuser" time="2.107" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_bake_node_1" time="0.614" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_endorse_node_2" time="33.150" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_restart_node_0" time="1.570" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_check_level" time="1.126" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_bake_block" time="0.601" />
    <testcase classname="tests_013.test_accuser.TestAccuser" name="test_double_baking_evidence_generated" time="1.718" />
    <testcase classname="tests_013.test_bootstrap.TestThresholdZero" name="test_setup_network" time="6.557" />
    <testcase classname="tests_013.test_bootstrap.TestThresholdZero" name="test_bootstrap" time="1.040" />
    <testcase classname="tests_013.test_contract.TestBigMapToSelf" name="test_big_map_to_self_origination" time="9.338" />
    <testcase classname="tests_013.test_contract.TestBigMapToSelf" name="test_big_map_to_self_transfer" time="2.801" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_check_contract[fa12_reference]" time="10.592" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_balance_offchain[fa12_reference]" time="0.568" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[fa12_reference]" time="0.567" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[fa12_reference]" time="0.567" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_balance_callback[fa12_reference]" time="4.090" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_allowance_callback[fa12_reference]" time="2.905" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[fa12_reference]" time="2.900" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_check_contract[lqt_fa12]" time="3.505" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_balance_offchain[lqt_fa12]" time="0.566" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[lqt_fa12]" time="0.569" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[lqt_fa12]" time="0.571" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_balance_callback[lqt_fa12]" time="2.906" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_allowance_callback[lqt_fa12]" time="2.907" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[lqt_fa12]" time="2.899" />
    <testcase classname="tests_013.test_fa12.TestFA12Basic" name="test_check_contract_fail" time="2.763" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_deploy_multisig[msig0]" time="16.072" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer[msig0]" time="0.570" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig0]" time="0.578" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig0]" time="1.693" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_failure[msig0]" time="0.563" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_success[msig0]" time="3.426" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_default_entrypoint[msig0]" time="3.411" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig0]" time="6.287" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_with_arg[msig0]" time="6.867" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig0]" time="0.570" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_too_high[msig0]" time="0.564" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_multiple_operations[msig0]" time="5.645" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig0]" time="0.567" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_delegate_change[msig0]" time="5.109" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_delegate_withdraw[msig0]" time="5.134" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig0]" time="7.541" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig0]" time="7.381" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_deploy_multisig[msig1]" time="7.402" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer[msig1]" time="0.568" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig1]" time="0.563" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig1]" time="1.703" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_failure[msig1]" time="0.566" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_success[msig1]" time="3.437" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_default_entrypoint[msig1]" time="3.416" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig1]" time="6.294" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_with_arg[msig1]" time="6.856" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig1]" time="0.568" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_too_high[msig1]" time="0.562" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_multiple_operations[msig1]" time="5.699" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig1]" time="0.571" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_delegate_change[msig1]" time="5.144" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_delegate_withdraw[msig1]" time="5.124" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig1]" time="7.403" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig1]" time="7.415" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_deploy_multisig[msig2]" time="2.894" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer[msig2]" time="0.573" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig2]" time="0.570" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig2]" time="1.708" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_failure[msig2]" time="0.567" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_success[msig2]" time="3.427" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_default_entrypoint[msig2]" time="0.570" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig2]" time="6.295" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_with_arg[msig2]" time="1.742" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig2]" time="0.570" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_too_high[msig2]" time="0.565" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_multiple_operations[msig2]" time="1.144" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig2]" time="0.565" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_delegate_change[msig2]" time="5.109" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_delegate_withdraw[msig2]" time="5.123" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig2]" time="7.381" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig2]" time="7.381" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_deploy_multisig[msig3]" time="2.871" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer[msig3]" time="0.570" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig3]" time="0.571" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig3]" time="1.712" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_failure[msig3]" time="0.576" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_success[msig3]" time="3.441" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_default_entrypoint[msig3]" time="0.572" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig3]" time="6.354" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_with_arg[msig3]" time="1.757" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig3]" time="0.570" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_transfer_too_high[msig3]" time="0.585" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_multiple_operations[msig3]" time="1.130" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig3]" time="0.569" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_delegate_change[msig3]" time="5.145" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_delegate_withdraw[msig3]" time="5.173" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig3]" time="7.449" />
    <testcase classname="tests_013.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig3]" time="7.848" />
    <testcase classname="tests_013.test_sapling.TestSaplingRightMemosize" name="test_shield_with_same_memo_size" time="26.854" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_init" time="7.030" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_gen_operations" time="39.613" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_terminate_sandbox" time="1.004" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_baker" time="1.685" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_wait_until_high_enough_level" time="8.428" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_baked" time="100.410" />
    <testcase classname="tests_014.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_after_baked" time="1.158" />
    <testcase classname="tests_014.test_client_without_node.TestConfigValid" name="test_config_node_port" time="2.269" />
    <testcase classname="tests_014.test_client_without_node.TestConfigValid" name="test_config_web_port" time="2.252" />
    <testcase classname="tests_014.test_contract.TestScriptHashRegression" name="test_contract_hash[client_regtest_custom_scrubber0]" time="8.126" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_gen_keys" time="8.162" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_store_input" time="8.687" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_amount" time="2.942" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_now" time="4.060" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_tokens" time="8.714" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_self" time="3.627" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_contract_fails" time="3.479" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_init_proxy" time="1.176" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_source" time="5.213" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_sender" time="5.766" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice" time="1.178" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;p2sigsceCzcDw2AeYDzUonj4JT341WC9Px4wdhHBxbZcG1FhfqFVuG7f2fGCzrEHSAZgrsrQWpxduDPk9qZRgrpzwJnSHC3gZJ&quot;)]" time="0.572" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xeaa9ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.573" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2deaad01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.571" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150733eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.576" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.572" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_success[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="1.172" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_string" time="4.696" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_bytes" time="4.641" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_set_delegate" time="5.835" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type.tz]" time="1.797" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type2.tz]" time="2.250" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_init" time="20.231" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_add_nodes" time="13.017" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_sleep_30s" time="30.010" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_add_more_nodes" time="19.529" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_kill_baker" time="0.347" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_synchronize" time="4.549" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_progress" time="0.566" />
    <testcase classname="tests_014.test_many_nodes.TestManyNodesBootstrap" name="test_check_logs" time="3.745" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_first_address_of_key[zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="13.724" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[0-zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="6.700" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[1-zet13mN26QV67FgPzMSzrigXjKZNMMtCubhi9L3kUePnFYdXqEjc8pmjw1h2wC6NLZf5F-1]" time="6.761" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[2-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="6.678" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[3-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="6.664" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[4-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="6.675" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[100-zet14LmgdAzVrTtQKpeuD3f2y7wFSjXTMEexNNuiEWhGimm25enxkqmwmbdFsC4y6YmYx-100]" time="6.663" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[143534-zet14EWNxZYoHJASHFpcCYSfTfQokWSMzdJeV5SfaGEPDtiYiDCX5jz8QkMF5jZaK5F4k-143536]" time="6.688" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[42-zet143WVQUmNodhSe4ytHL6gvtdXYhRp7bywDWASUFYUCMGAS71juXT6AyWY89fjg3eZn-42]" time="6.688" />
    <testcase classname="tests_014.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[90870987456348-zet13CiUqFsVEr2LdMnyyUQNL3Nh74sa4LdU6V3oD3YfcizbwuFtftPRYvRrB2zsVaEw1-90870987456348]" time="7.163" />
    <testcase classname="examples.test_example.TestExample" name="test_wait_sync_proto" time="14.573" />
    <testcase classname="examples.test_example.TestExample" name="test_transfer" time="0.534" />
    <testcase classname="examples.test_example.TestExample" name="test_inclusion" time="1.443" />
    <testcase classname="examples.test_example.TestExample" name="test_inclusion_check_previous" time="1.415" />
    <testcase classname="tests_013.test_contract.TestScriptHashOrigination" name="test_contract_hash_with_origination" time="9.647" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_annotation_length_success" time="7.130" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_annotation_length_failure" time="0.525" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_alphabetic" time="0.524" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_numeral" time="0.543" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_invalid_character" time="0.527" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_alphabetic" time="0.527" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_numeral" time="0.522" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_invalid_character" time="0.528" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic_legacy" time="0.530" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral_legacy" time="0.528" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic" time="0.526" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral" time="0.525" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_invalid_character" time="0.526" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_alphabetic" time="0.525" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_numeral" time="0.525" />
    <testcase classname="tests_013.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_invalid_character" time="0.944" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_gen_keys" time="7.826" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_store_input" time="8.102" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_amount" time="2.701" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_now" time="3.744" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_tokens" time="8.087" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_self" time="3.237" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_contract_fails" time="3.233" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_init_proxy" time="1.091" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_source" time="4.840" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_sender" time="5.359" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice" time="1.089" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;p2sigsceCzcDw2AeYDzUonj4JT341WC9Px4wdhHBxbZcG1FhfqFVuG7f2fGCzrEHSAZgrsrQWpxduDPk9qZRgrpzwJnSHC3gZJ&quot;)]" time="0.537" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xeaa9ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.538" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2deaad01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.534" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150733eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.532" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.532" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_success[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="1.082" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_string" time="4.322" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_bytes" time="4.334" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_set_delegate" time="5.372" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type.tz]" time="1.651" />
    <testcase classname="tests_013.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type2.tz]" time="2.066" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{}-10-{ 10 }]" time="7.121" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ 10 }--5-{ -5 ; 10 }]" time="0.524" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ -5 ; 10 }-99-{ 99 ; -5 ; 10 }]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[none.tz-Some 10-Unit-None]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ret_int.tz-None-Unit-(Some 300)]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{}-{}]" time="0.524" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 1 ; 1 ; 1 }-{ 1 ; 2 ; 3 ; 4 }]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 2 ; 3 ; 0 }-{ 1 ; 3 ; 5 ; 3 }]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{}-{}]" time="0.527" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{}-{}]" time="0.527" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;Hello&quot;-(Some &quot;Hello&quot;)]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;abcd&quot;-(Some &quot;abcd&quot;)]" time="0.528" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-None-Pair 0 0-None]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 10 5-None]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 0-(Some &quot;&quot;)]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 10-None]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 2-(Some &quot;Fo&quot;)]" time="0.528" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 3-None]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 1-(Some &quot;o&quot;)]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some&quot;FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo&quot;-Pair 1 10000-None]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-None-Pair 0 1-None]" time="0.528" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 0-(Some 0x)]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 1-(Some 0xaa)]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)0]" time="0.527" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 2-(Some 0xbbcc)]" time="0.524" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 3-None]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)1]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some  1 10000-None]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True False)-(Some (Pair True False))]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False True)-(Some (Pair False True))]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True True)-(Some (Pair True True))]" time="0.524" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False False)-(Some (Pair False False))]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[car.tz-0-(Pair 34 17)-34]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cdr.tz-0-(Pair 34 17)-17]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-True-(Some False)]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-False-(Some True)]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False False)-(Some False)]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False True)-(Some False)]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True False)-(Some False)]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True True)-(Some True)]" time="0.526" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False False)-(Some False)]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False True)-(Some True)]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True False)-(Some True)]" time="0.528" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True True)-(Some True)]" time="0.516" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False False)-False]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False True)-False]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True False)-False]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True True)-True]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_binary.tz-Unit-Unit-Unit]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 4 8)-(Some 12)]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 0 8)-(Some 8)]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 8 0)-(Some 8)]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 15 4)-(Some 15)]" time="0.517" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 14 1)-(Some 15)]" time="0.516" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 7 7)-(Some 7)]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 0)-(Some -1)]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 8)-(Some -9)]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 7)-(Some -8)]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -9)-(Some 8)]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -8)-(Some 7)]" time="0.517" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 0)-(Some -1)]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 8)-(Some -9)]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 7)-(Some -8)]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False False)-(Some (Left False))]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False True)-(Some (Left True))]" time="0.515" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True False)-(Some (Left True))]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True True)-(Some (Left False))]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 0)-(Some (Right 0))]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 1)-(Some (Right 1))]" time="0.524" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 0)-(Some (Right 1))]" time="0.524" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 1)-(Some (Right 0))]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 21)-(Some (Right 63))]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 63)-(Some (Right 21))]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 8 1))-(Some 16)]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 0))-(Some 0)]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 1))-(Some 0)]" time="0.517" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 1 2))-(Some 4)]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 15 2))-(Some 60)]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 8 1))-(Some 4)]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 0))-(Some 0)]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 1))-(Some 0)]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 1 2))-(Some 0)]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 15 2))-(Some 3)]" time="0.516" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-&quot;abc&quot;]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{}-&quot;&quot;]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;Hello&quot; ; &quot; &quot; ; &quot;World&quot; ; &quot;!&quot; }-&quot;Hello World!&quot;]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xcd }-{ 0xffcd }]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{}-{}]" time="0.517" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xab ; 0xcd }-{ 0xffab ; 0xffcd }]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{}-{}]" time="0.524" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{}-{}]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 1 }-{ Elt 0 1 }]" time="0.517" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 }-{ Elt 0 0 }]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 ; Elt 3 4 }-{ Elt 0 0 ; Elt 3 4 }]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair { Elt 0 1 } (Some False))]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair {} None)-1-(Pair {} (Some False))]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair { Elt 1 0 } (Some True))]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair { Elt 1 4 ; Elt 2 11 } (Some False))]" time="0.523" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair { Elt &quot;foo&quot; 1 } (Some False))]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair {} (Some False))]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair { Elt &quot;foo&quot; 0 } (Some True))]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some False))]" time="0.526" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{}-10-{}]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;foo&quot; 1 }-10-{ Elt &quot;foo&quot; 11 }]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 }-15-{ Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 }]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))0]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))0]" time="0.520" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))0]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))0]" time="0.524" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))0]" time="0.518" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))0]" time="0.521" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.526" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.519" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.522" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair 4 (Some True))]" time="0.524" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair 4 (Some False))]" time="0.527" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))1]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))1]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))1]" time="0.527" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))1]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))1]" time="0.533" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))1]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{}-{}]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;asdf&quot; ; &quot;bcde&quot; }-{ &quot;asdf&quot; ; &quot;bcde&quot; }]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{ &quot;d&quot; ; &quot;e&quot; ; &quot;f&quot; }-&quot;abcdef&quot;]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{}-&quot;abc&quot;]" time="0.561" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x00ab-{ 0xcd ; 0xef ; 0x00 }-0x00abcdef00]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{ 0x00 ; 0x11 ; 0x00 }-0x001100]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0xabcd-{}-0xabcd]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{}-0x]" time="0.533" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 10 ; 2 ; 1 }-20]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 3 ; 6 ; 9 }-162]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{}-0]" time="0.533" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 }-1]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.531" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair {} None)-&quot;Hi&quot;-(Pair {} (Some False))]" time="0.531" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hi&quot; } None)-&quot;Hi&quot;-(Pair { &quot;Hi&quot; } (Some True))]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hello&quot; ; &quot;World&quot; } None)-&quot;&quot;-(Pair { &quot;Hello&quot; ; &quot;World&quot; } (Some False))]" time="0.531" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{}-0]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 }-1]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{}-0]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ 1 }-1]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ -100 ; 1 ; 2 ; 3 }--94]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{}-0]" time="0.531" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 }-1]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 }-3]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 ;             Elt &quot;d&quot; 4 ; Elt &quot;e&quot; 5 ; Elt &quot;f&quot; 6 }-6]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair {} {})-(Some True)]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;c&quot; } { &quot;B&quot; })-(Some False)]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;A&quot; } { &quot;B&quot; })-(Some False)]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; } { &quot;B&quot; })-(Some True)]" time="0.547" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; } { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; })-(Some True)]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; } { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; })-(Some True)]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;World!&quot; }-{ &quot;Hello World!&quot; }]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{}-{}]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;test1&quot; ; &quot;test2&quot; }-{ &quot;Hello test1&quot; ; &quot;Hello test2&quot; }]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[empty_map.tz-{}-Unit-{ Elt &quot;hello&quot; &quot;world&quot; }]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;hello&quot;-(Pair (Some &quot;hi&quot;) { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;&quot;-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;1&quot; &quot;one&quot; ;             Elt &quot;2&quot; &quot;two&quot; })-&quot;1&quot;-(Pair (Some &quot;one&quot;) { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; })]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None {})]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None { Elt &quot;hello&quot; 4 })]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) {})]" time="0.529" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) { Elt &quot;hello&quot; 5 })]" time="0.533" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None { Elt &quot;hello&quot; 4 ; Elt &quot;hi&quot; 5 })]" time="0.703" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })0]" time="0.533" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })1]" time="0.531" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 0 100 ; Elt 2 100 }-(Pair 2 200)]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 1 1 ; Elt 2 100 }-(Pair 3 101)]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-True-(Some True)]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-False-(Some False)]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Left True)-(Right True)]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Right &quot;a&quot;)-(Left &quot;a&quot;)]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{}-{}]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;&quot;-&quot;_abc&quot;]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;test&quot;-&quot;test_abc&quot;]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[balance.tz-111-Unit-4000000000000]" time="0.533" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[level.tz-111-Unit-1]" time="0.548" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2000000 1000000)-(Some (Pair 3000000 1000000))]" time="0.527" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2310000 1010000)-(Some (Pair 3320000 1300000))]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add.tz-Unit-Unit-Unit]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-12039123919239192312931-Unit]" time="0.530" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-0-Unit]" time="0.525" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-948-Unit]" time="0.531" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-0-(Some 0)]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-1-(Some 1)]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-9999-(Some 9999)]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 15 9)-(Pair 15 24)]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 1 1)-(Pair 1 2)]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 1 ; 2 ; 3 ; 4 }-1]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 4 }-4]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;abcdefg&quot;-0x46fdbcb4ea4eadad5615cdaa17d67f783e01e21149ce2b27de497600b4cd8f4e]" time="0.531" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;12345&quot;-0xb4c26c20de52a4eaf0d8a340db47ad8cb1e74049570859c9a9a3952b204c772f]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-(Some &quot;hello&quot;)-&quot;hello&quot;]" time="0.531" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-None-&quot;&quot;]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;world&quot;-(Pair &quot;world&quot; 0)]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;abc&quot;-(Pair &quot;abc&quot; 0)]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;&quot;-(Pair &quot;&quot; 0)]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 0)-1-(Pair &quot;hello&quot; 1)]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 500)-3-(Pair &quot;hello&quot; 3)]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 7)-100-(Pair &quot;hello&quot; 100)]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Some &quot;tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx&quot;)]" time="0.533" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuJqtDcA2m2muMxViSM47MPsGQzmyjnNTawUPqR8vZTAMcx61ES&quot;-(Some &quot;tz1XPTDmvT3vVE5Uunngmixm7gj7zmdbPq6k&quot;)]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 -100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair &quot;1970-01-01T00:00:00Z&quot; 0)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.553" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair -100 100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 0 &quot;1970-01-01T00:00:00Z&quot;)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 100)-&quot;1970-01-01T00:00:00Z&quot;]" time="0.545" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 -100)-&quot;1970-01-01T00:03:20Z&quot;]" time="0.545" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 2000000000000000000)--1999999999999999900]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 0)-0]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 1)--1]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 1 0)-1]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair &quot;1970-01-01T00:03:20Z&quot; &quot;1970-01-01T00:00:00Z&quot;)-200]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit0]" time="0.558" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit1]" time="0.556" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair (Some &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot;) (Pair { Unit }  (Pair { True }  (Pair (Pair 19 10) (Pair (Left &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;) (Pair { Elt 0 &quot;foo&quot; ; Elt 1 &quot;bar&quot; }  { PACK } )))))))))-Unit]" time="0.569" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair None (Pair {  }  (Pair {  }  (Pair (Pair 40 -10) (Pair (Right &quot;2019-09-09T08:35:33Z&quot;) (Pair {  }  { DUP ; DROP ; PACK } )))))))))-Unit]" time="0.560" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 -3)-(Pair (Some (Pair -3 1)) (Some (Pair 3 1)) (Some (Pair -3 1)) (Some (Pair 3 1)))]" time="0.547" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 0)-(Pair None None None None)]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair -8 2)-(Pair (Some (Pair -4 0)) (Some (Pair -4 0)) (Some (Pair 4 0)) (Some (Pair 4 0)))]" time="0.546" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 10))-(Left (Some (Pair 1 0)))]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 3))-(Left (Some (Pair 3 1)))]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 0))-(Left None)]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 10))-(Right (Some (Pair 1 0)))]" time="0.566" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 3))-(Right (Some (Pair 3 1)))]" time="0.544" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 0))-(Right None)]" time="0.544" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 5 (Right 10))-(Right (Some (Pair 0 5)))]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[compare.tz-Unit-Unit-Unit]" time="0.548" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comparisons.tz-{}-{ -9999999; -1 ; 0 ; 1 ; 9999999 }-{ { False ; False ; False ; True ; True } ;\n    { False ; False ; True ; True ; True } ;\n    { True ; True ; False ; False ; False } ;\n    { True ; True ; True ; False ; False } ;\n    { True ; True ; False ; True ; True } ;\n    { False ; False ; True ; False ; False } }]" time="0.550" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[address.tz-None-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-(Some &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;)]" time="0.552" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contract.tz-Unit-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-Unit]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[create_contract.tz-None-Unit-(Some &quot;KT1Mjjcb6tmSsLm7Cb3DSQszePjfchPM4Uxm&quot;)]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mul.tz-Unit-Unit-Unit]" time="0.546" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 2)--2]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 2)--2]" time="0.544" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 0)-0]" time="0.549" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 0)-0]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left -2)-2]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dign.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dugn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-1]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dropn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dipn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-6]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 17 (Pair 16 (Pair 15 (Pair 14 (Pair 13 (Pair 12 (Pair 11 (Pair 10 (Pair 9 (Pair 8 (Pair 7 (Pair 6 (Pair 5 (Pair 4 (Pair 3 (Pair 2 1))))))))))))))))-Unit]" time="0.646" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 2 (Pair 3 (Pair 12 (Pair 16 (Pair 10 (Pair 14 (Pair 19 (Pair 9 (Pair 18 (Pair 6 (Pair 8 (Pair 11 (Pair 4 (Pair 13 (Pair 15 (Pair 5 1))))))))))))))))-Unit]" time="0.621" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec.tz-14-38-52]" time="0.544" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec_2.tz-{ 0 ; 1 ; 2 ; 3}-4-{ 0 ; 7 ; 14 ; 21 }]" time="0.544" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-None-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.546" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some 0x7a06a770)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.544" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some &quot;NetXdQprcVkpaWU&quot;)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_entrypoint.tz-Unit-Left (Left 0)-Unit]" time="0.547" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_default_entrypoint.tz-Unit-Unit-Unit]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_address.tz-Unit-Unit-Unit]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[unpair.tz-Unit-Unit-Unit]" time="0.552" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[voting_power.tz-(Pair 0 0)-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Pair 4000000000000 20000000000000)]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[keccak.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xb6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4)]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sha3.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xf345a219da005ebe9c1a1eaad97bbf38a10c8473e41d0af7fb617caa0c6aa722)]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb.tz-(Pair 0 0 0)-Unit-(Pair 1 2 3)]" time="0.560" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[uncomb.tz-0-(Pair 1 4 2)-142]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-get.tz-Unit-(Pair 1 4 2 Unit)-Unit]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set.tz-(Pair 1 4 2 Unit)-Unit-(Pair 2 12 8 Unit)]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set-2.tz-None-(Pair 1 4 2 Unit)-(Some (Pair 2 4 &quot;toto&quot; 0x01))]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dup-n.tz-Unit-Unit-Unit]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sapling_empty_state.tz-{}-Unit-0]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.531" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.549" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x00 0x00-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.551" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x01 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.534" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x010000-(Some 0x0200000000000000000000000000000000000000000000000000000000000000)]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_bytes_not_padded.tz-None-Unit-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_nat.tz-None-Unit-(Some 0x1000000000000000000000000000000000000000000000000000000000000000)]" time="0.536" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x00-0]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x01-1]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x28db8e57af88d9576acd181b89f24e50a89a6423f939026ed91349fc9af16c27-17832688077013577776524784494464728518213913213412866604053735695200962927400]" time="0.537" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0xb9e8abf8dc324a010007addde986fe0f7c81fab16d26819d0534b7691c0b0719-11320265829256585830781521966149529460476767408210445238902869222031333517497]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x02-16-0x1000000000000000000000000000000000000000000000000000000000000000]" time="0.533" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x00-257-0x0101000000000000000000000000000000000000000000000000000000000000]" time="0.533" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_mutez.tz-0-0x10-16]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_balance[0]" time="0.553" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_balance[1e-06]" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_balance[0.5]" time="0.532" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_balance[1]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_balance[5]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_balance[1000]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_balance[8000000000000.0]" time="0.538" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_now" time="0.535" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_level" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;hello&quot;-(Pair 4 (Some &quot;hi&quot;))-big_map_diff0]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;&quot;-(Pair 4 None)-big_map_diff1]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } None)-&quot;1&quot;-(Pair 4 (Some &quot;one&quot;))-big_map_diff2]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{}-(Pair 4 Unit)-big_map_diff3]" time="0.545" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff4]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; (Some &quot;three&quot;) }-(Pair 4 Unit)-big_map_diff5]" time="0.545" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; None }-(Pair 4 Unit)-big_map_diff6]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;2&quot; None }-(Pair 4 Unit)-big_map_diff7]" time="0.544" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff8]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None 4)-big_map_diff9]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None 4)-big_map_diff10]" time="0.549" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff11]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff12]" time="0.545" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None 4)-big_map_diff13]" time="0.543" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff14]" time="0.546" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff15]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Left Unit)-(Left (Pair 4 5))-big_map_diff0]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Left (Pair { Elt &quot;3&quot; &quot;three&quot; } { Elt &quot;4&quot; &quot;four&quot; }))))-(Left (Pair 4 5))-big_map_diff1]" time="0.546" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Right Unit)))-(Right Unit)-big_map_diff2]" time="0.552" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Right Unit)-(Right (Right (Left (Pair { Pair &quot;foo&quot; &quot;bar&quot; } { Pair &quot;gaz&quot; &quot;baz&quot; }) )))-(Left (Pair 4 5))-big_map_diff3]" time="0.547" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }) )-(Right (Right (Right (Left { Pair &quot;3&quot; &quot;three&quot; }))))-(Left (Pair 4 5))-big_map_diff4]" time="0.546" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Right (Right (Right { &quot;1&quot; }))))-(Left (Pair 4 5))-big_map_diff5]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_packunpack" time="1.081" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_check_signature" time="1.086" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_hash_consistency_michelson_cli" time="1.621" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 1 257))]" time="0.539" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 123 257))]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 1 257))]" time="0.541" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 123 257))]" time="0.542" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Left Unit]" time="0.545" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Right Unit]" time="0.544" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_fails_annotated_set_car_cdr" time="0.000">
      <skipped type="pytest.skip" message="Bug in annotation system">/home/tezos/.venv/lib/python3.9/site-packages/_pytest/skipping.py:245: Bug in annotation system</skipped>
    </testcase>
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair {} 0)-10-(Pair {} 0)]" time="0.547" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;foo&quot; 1 } 1)-10-(Pair { Elt &quot;foo&quot; 11 } 11)]" time="0.540" />
    <testcase classname="tests_013.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 } 6)-15-(Pair { Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 } 36)]" time="0.980" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_init" time="19.138" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_level1" time="1.628" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_running_prevalidators" time="1.634" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_mempool_empty" time="4.277" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_transfer" time="0.555" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_mempool_include_transfer" time="1.646" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_bake_for1" time="0.572" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_level2" time="1.626" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_mempools_are_empty" time="1.641" />
    <testcase classname="tests_013.test_mempool.TestMempool" name="test_injection_fails_on_mempool_disabled_node" time="1.960" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_delegates" time="7.306" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_no_service_1" time="0.549" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_no_service_2" time="0.544" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_no_service_3" time="0.540" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_bake" time="0.578" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_sign_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.542" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_sign_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.543" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_sign_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.544" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_sign_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.540" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_check_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.537" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_check_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.537" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_check_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.542" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_check_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.537" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap1-msg1-False]" time="17.538" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap2-msg2-False]" time="2.274" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap3-msg3-True]" time="2.272" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap4-msg4-True]" time="2.274" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_gen_keys" time="1.596" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfers" time="3.302" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_balances" time="1.604" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_bar_foo" time="2.218" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_balances_bar_foo" time="1.069" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_foo_bar" time="2.223" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_balances_foo_bar" time="1.081" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_failure" time="0.547" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_originate_contract_noop" time="2.194" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_to_noop" time="1.119" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_contract_hardlimit" time="3.394" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfers_bootstraps5_bootstrap1" time="4.396" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_activate_accounts" time="3.315" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_transfer_king_queen" time="1.132" />
    <testcase classname="tests_014.test_basic.TestRawContext" name="test_duplicate_alias" time="1.546" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_manager_origination" time="10.074" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_delegatable_origination" time="1.668" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_target_with_entrypoints_origination" time="1.661" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_target_without_entrypoints_origination" time="1.659" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_target_without_default_origination" time="1.657" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_target_with_root_origination" time="1.658" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_manager_set_delegate" time="6.641" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_manager_withdraw_delegate" time="3.315" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_to_manager" time="3.257" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_simple_transfer_from_manager_to_implicit" time="3.263" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_manager" time="4.352" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_default" time="2.232" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_target" time="1.120" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_entrypoint_with_args" time="4.521" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_no_entrypoint_with_args" time="2.395" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_no_default_with_args" time="2.243" />
    <testcase classname="tests_014.test_contract.TestManager" name="test_transfer_from_manager_to_rooted_target_with_args" time="2.667" />
    <testcase classname="tests_014.test_contract.TestScriptHashOrigination" name="test_contract_hash_with_origination" time="9.827" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_forge" time="9.956" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_big_forge" time="4.949" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_read" time="6.058" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_bad_ticket" time="4.391" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_utxo" time="8.247" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_split" time="4.953" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_join" time="7.722" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_originations" time="5.578" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_transfers" time="12.731" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_originations" time="5.584" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_transfers" time="15.339" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_init" time="18.823" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_level1" time="1.591" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_running_prevalidators" time="1.603" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_mempool_empty" time="66.136" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_transfer" time="0.545" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_mempool_include_transfer" time="1.627" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_bake_for1" time="0.560" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_level2" time="1.570" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_mempools_are_empty" time="1.607" />
    <testcase classname="tests_014.test_mempool.TestMempool" name="test_injection_fails_on_mempool_disabled_node" time="1.935" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_originate_sapling_contract" time="13.406" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_generate_bob" time="1.080" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_list_keys_bob" time="0.534" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_list_keys_with_alice_and_bob" time="1.583" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_0" time="0.527" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_1" time="0.525" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_bob_balance" time="0.530" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_shield_bob_address_0" time="3.750" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_contract_balance_after_shielding" time="0.524" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_regenerate_bob_from_mnemonic" time="0.537" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_derive_alice" time="0.529" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_derive_yves" time="0.524" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_generate_alice_address_0" time="0.532" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money_insufficient_funds" time="1.692" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money" time="3.329" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.bin-False]" time="0.545" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.json-True]" time="0.539" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_0" time="4.476" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_binary_format" time="4.475" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[alice-100.0]" time="0.533" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[bob-100.0]" time="0.534" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_binary_format" time="1.153" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[alice-50.0]" time="0.540" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[bob-150.0]" time="0.537" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_json_format" time="4.487" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[alice-50.0]" time="0.533" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[bob-150.0]" time="0.532" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_json_format" time="1.158" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[alice-0.0]" time="0.558" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[bob-200.0]" time="0.530" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob0[sapling_transaction0.bin-False]" time="0.534" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-200-bob]" time="0.541" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[300-200-bob]" time="0.537" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-0-alice]" time="0.537" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[100-0-alice]" time="0.538" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_bob_unshields_money" time="9.215" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_state_with_another_client" time="7.371" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_shielded_transfer_using_non_sapling_transfer_method[bootstrap4-bootstrap2]" time="5.646" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[alice-0.0]" time="0.543" />
    <testcase classname="tests_014.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[bob-110.0]" time="1.000" />
    <testcase classname="tests_013.test_contract.TestChainId" name="test_chain_id_opcode" time="9.488" />
    <testcase classname="tests_013.test_contract.TestChainId" name="test_chain_id_authentication_origination" time="2.206" />
    <testcase classname="tests_013.test_contract.TestChainId" name="test_chain_id_authentication_first_run" time="3.119" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-]" time="7.208" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-a]" time="0.530" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x9dy\xb1\xa3\x7f1\x80\x1c\xd1\x1ag\x06\xfb@\xd6\xbdWRhF\x90;\xb1&gt;\xdeV$9\xe9\xc1\xb8#]" time="0.538" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xa9`\x89\xbc\xa7\x1f=\x1am-&lt;\xad\xb3f\x9c\xbdP\xe1e\xe44$\x9d\x8b\x82\x9fA\x16i\x84*\x97]" time="0.551" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x99\x11\x03l\xf3\xe8&quot;\x08n\xca\xa0\x07Zi\xfc\x17\x8b\xa8\xf87\x18\xaa\x8f;\xd1\xf6^\x81D\xe6\x1d\x9a]" time="0.536" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xb3\x0f\xcb\x06\xa6\xc1\xad\x8f)\x06\xe72\xb1\x0fM\xb7\x89\xd3^\xa6\x8c\x08\x8a\xb3\xf6H\x81\x8b\xa4\xa6ek]" time="0.533" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xe0\xcbn8*]\xffr\xac\x1d\xda\x96\x90\x817G\x8b\xd56\xcfKw\x8a\xde\x1f\xe7\xa9\x01\x0b3A\xc2]" time="0.535" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xbd+J\xce\xc4n\xdf(zC\xb9\xb2\x11u0lv\xa8\x1aW\x89\x93&quot;G0\x81\xcd'{\xcd\x1e7]" time="0.533" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-c\xea\x0b\xf5\xeeYt\xc3y\x0f+V\xeds*\x1a\x111\xbe\x17}\xeaBa\x97g\xc2\x18\x8e\x12\xe6[]" time="0.531" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x13d\xf5\xd8q{\rX\x03\xca\x8d\x9a\xa6\xa3\xb7C\x7f\xf5\x9f\xcec\x91\x1f\x0b\xd0\xb3\xcf\xbaf\xde\x9cu]" time="0.531" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x85&gt;F\x89x\x9b\xf4\x1fL\x1d\x1e\xf9\xa1\x8c\x1b\xec\x13\xa1\xe7`\xe8?,\x14\xf1\x88R\x8dA\xbb\rK]" time="0.533" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-2\xddS\xd4\xae\x89\xee\xa0zOW\x9e/\xf7\xac\xe2\xc1\xd2\x98\xdc\xf0\x1c\x94\\xbfY\xcd\x93,\xd391]" time="0.529" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xf0\xd1^\xb4\xd2]\xce\x11\x99%\xbb\x0b\x99\x8dH\xa9\x8e\x8aW:\x8a\xce\xe7\xc5MT\x15JLz7\xfc]" time="0.533" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-1?m\x14&amp;\x1a\xf6\xda\xf8.\x98;\xb2\xdf\xd1\xdd\xd0:\xdb\x19\xd7\xf3Oa9G)G\x93\xb2\x12t]" time="0.540" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-/7\xbc\xa2\xdeB\x88\xd5A\xa4e]\xe9\xb2\xa3)\x08.\xc4^S\x05\xf3Z\xae@\xa25\xa4\x99\x90\xab]" time="0.532" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x85\xa8XD\xfe~\xaa\xb3I\x98\xc8\xef\xd8\xfa\xfc\xae\xab\xa5\xe5\xa5WoG\x12s\x02\xf0\x9b\xe3\xef\x8d\xa2]" time="0.531" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x01\xbe\xcf+\x07d\xbd\x88\xd4\r\xa8\xba\xcb\xed\xab&gt;\xef\xbe\xd4)r\xafVv\xf7\xfd#a\xf3L\x1bE]" time="0.536" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xe6fQ\xfd\xa2o\xe6\xec(\x06\xd7\xa3\xc4a+\xb09B\x94\x8e&amp;\xb388/\xe1B\xaf\x7f1\x04S]" time="0.538" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xa5$\xc5\xd7\xcc2\xb0\xc49\xee\xa7\xc6\r\xf3Q\x0e\xf9\xe4\xa2:\xab\xa7a\xd2\xa3\xb87\x08N{\x17\xce]" time="0.529" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xfc\x87\xc1P[\xbc\xb2f\x9e\xaa\x8aD\x81\xbc\xf1\x10\xac\xf8\x026\xe0I\xc3\xe9\xe4\x87b\xf1&gt;\xb62\x91]" time="0.535" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xee\xa0Y\xe0\xcf:\xc9\xb7\xd7\xba\x8ePo\xb1n6\x15\xd4\xca\xa7\xb1\x9e\xcd\x7f\xd0!HeM\x98z\xe2]" time="0.533" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-e\xca\x1f\xea\xb2\xf0\x91\xa4\xa9Pwu\x83;\x93$\xde/\xcfC\x1d\xd0\xbe#\xf8\xfa&quot;?\x19\x99\xb7\xbe]" time="0.529" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-{\xd2\xb5\x8fhj\xfa\x89\xbc\x08CC\x06L&lt;\xbfym\xa7\x95\xc7\xd6\xadmu\xb8\xd7\xe5\xf0ib\x95]" time="0.531" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x97\x1c?f\x97\xcc\xab\\xb8g%8\xe4\xbdP\xff\xf0\x9f^\xff\x84\xb5i#\xa8Pp\x82\xdf\rW~]" time="0.546" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xd8\xd6E\x17\x8a\xf0z\xc1\x95\xd1\x0f\x0c\x96=q\xdc5\xf7\x11\x1c\xdf\x9b '\xc4M\xa0\xa0\x81\x94\xf4(]" time="0.532" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x8c\xb6\xc5\xcaT\x044\xae\xe8\xac\x12l4C\xae\x98\x10ZC\x10E\x1c\x80b&quot;\xcd\xb1a\xc9$\x8c\x98]" time="0.532" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x99\xcf\x01\xff\x02\x1e\xd2w\xa9\tt\x87\xec\xac\@\xb9\x97\x98\xf8[6\xa0\x8d\xed\x0e\\xdc/&amp;C\xf1]" time="0.534" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x90k\xf0\x02\xa7\r'\xae\xb99\x81\xb8KCS\x1d\x17\x92\x84\xae\xfd~\x81\xe24\xe3v\x89\x10\x879\xc0]" time="0.538" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xc8\xa7ND\xe3\xe2\xc2\xc4\x93\x12\x16\xa4o\xbd\x15W\xe9\xae\x8e\x1c\x08\xd3&quot;K\x9a\xc6Lo\xca\x06}(]" time="0.533" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xa3&lt;'tY\xaf\xd4\x00\xccG-\xf4r\x06\xdb\xb8\xed\xe57\xe0\x0b\xfe&lt;\xb8\xe2vmC\x8b\xa8\xcd\xf8]" time="0.531" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-_i&amp;\x80n\xf4\x0f\xc34!\xbc-\x1cm\xf7\x81o\xfa\xa1\xe9\\xbd=\x1b\x16N\xda\xden\xac\x13\xa0]" time="0.534" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xa8\xe0fLw\xa4w\xd7\xa71\x92\xa3\xd41\xf6\x81\xc7x\xe5\x9b\x89\xd6\xeb2}y 'l\xd1\xb8_]" time="0.530" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-a\xe83\xc3\x15G[)b\xbe\x14\x8a?\x8f\x18\xf4\x8f\x10T\xc7\xc5\xa3$\xec\x1eB\xc5\x87\xddc&quot;\xeb]" time="0.531" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xd1z%\x00\xb4nT\x99;\xe4\xfbR\x85C\x15}\x82m\xfc\x04\xfb\\xa3\x1c1h\xd9\xed\xb5N\xec\]" time="0.533" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xb0\xea\xf3\xe0\x8b\x05&gt;\xfc9\x08\xe8\xd4-\xcb\x88\xce\xff&gt;\xb9N7\xbfL=\x1a/\xd4\x0e\xa9\xc2\xa9=]" time="0.530" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xb8&lt;\xc5\xe0\xe2M&gt;\x91vGk\xf2\x07l)\x14ib\xed\x15\xcfK^\xbb\xe1\xdei|`\xe6\xe6\xd0]" time="0.531" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-H\xe9\xb7\x11\x001]\xfa\xc5\xd2\xb6\xc2fn_\x88\xb4\xb9\r\xc4P\xd71 ]C\xde \x0cn\xe5\xa8]" time="0.530" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x1e\x1b\xacy\xcc\xacd\xf2\xb0\xed\xbf\x8c\xab\xc2E*C\xc0\xdaC\x03\xa1\x15\x87\x9a\xc5W\xdf&amp;\xbdI\x9b]" time="0.535" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x9f\xc4Rl\xc0|\xe0\xf6!h86^F\xcd\xed\xfbN\x0f\x8aS\x0fY\xc1*\xc3\xdc\xba\*\x9b\xb0]" time="0.539" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xdf\xa2~3\xe6\xd2\x83\xb6\x9a\xa3\xccO\xfa[$f\xbe\x1b\xc2\xfe9\xad\xf3\xab\x8eh^\xa6q|\x98_]" time="0.540" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xa1S'p\xcb\x1bM\xe6\xb4\xd9\x7f\x84\x8f\x98\x94s\x97!\xfa\x1e\x1d\xbev?\xcf\xc3\x859\\x00d\x10]" time="0.539" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x9b\xc6\x8cVY\x80b\x05bf\x9b\x96\x03\xcd\xcd\x8d\x93\xcc\xe8:\xf2\x02\xa4\x96\xb6*`8VB\xd7\x01]" time="0.533" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-V\x9a,\x12n\x105\xb5\xb6\xf6\x8f\xa1\xe0Y\x12\x0f\xd4\xed\x9b:\xc6%A\x11&amp;\x9b\xc9\xe7\xfb\xad\n\x08]" time="0.535" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xc1\x10\x11\xdc&lt;\xf6\x96T\x13\xb5#\x12P\xbc\x9f\x83-\xdf\xed&lt;;IJG\xa7 B\xab\xe7\x1fD|]" time="0.540" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-:9\xd863&lt;\x0b\x8ao0\xdf!+\xa2-\xb9v\xdc}\xefc\xdb\xe3\xe1Z\xe1/\x92C\x9b\x82\x93]" time="0.536" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xf9\xf7\x00y(\x115&gt;\x9f\xd1\xdc\xc8 \xc1\x14y\x9d\x1f\xb8\xce\xf2\x145h_\xb4\xbe0T\xbc%\x18]" time="0.532" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-+u\xd0\x18\xfa\x17\xb3\xa8\xd3^Yn\xdf&gt;\xb3Z\x11\xa6ol\xbc\xff=i\xb3\xed\x8ew\xacg$\xdd]" time="0.541" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\x1a\xb7\xa4\xba\xa6)\xde\rc\x9ea\xac\xcf\xdbH\xa7P@\xf2\xfbA\tl\xa5\xee\xe91\x19\xefO\x84\x0f]" time="0.543" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-:0\x12g\xab4l\xba\x07\x89\xdcVq\xa1\xf3\xcc^\x92\x96\xdc'\x0e\xf9\x1b\x04\xf1\xa7?\x00\x0c\x0c1]" time="0.544" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xef\x87\xb10\xe4\x05J\x89}V\xd8r\xb4\xfc\xe2#ao\x00lv\x12\xf9.\x19\xbcNG\x15\xcbnv]" time="0.541" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xbfP\xf3?\xbfO\xde\xdf|&quot;[\xec\x92lL\x134\x04qq\xbb\x8b\xda\xce\xe7_\x81\xdcn\xa5 \xdb]" time="0.542" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[keccak-\xa3\x1e\xe2\x8c\xe5\x8b\x10\x19X[\xf3\x0c\xb8\xf7\xf2\xa6\xd5\xf9\xd0\xff\x81\xf8c\x8ap\xe7\x05\xd6\xa8+\xc7\x03]" time="0.549" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-]" time="0.534" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-a]" time="0.538" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x9dy\xb1\xa3\x7f1\x80\x1c\xd1\x1ag\x06\xfb@\xd6\xbdWRhF\x90;\xb1&gt;\xdeV$9\xe9\xc1\xb8#]" time="0.541" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xa9`\x89\xbc\xa7\x1f=\x1am-&lt;\xad\xb3f\x9c\xbdP\xe1e\xe44$\x9d\x8b\x82\x9fA\x16i\x84*\x97]" time="0.546" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x99\x11\x03l\xf3\xe8&quot;\x08n\xca\xa0\x07Zi\xfc\x17\x8b\xa8\xf87\x18\xaa\x8f;\xd1\xf6^\x81D\xe6\x1d\x9a]" time="0.541" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xb3\x0f\xcb\x06\xa6\xc1\xad\x8f)\x06\xe72\xb1\x0fM\xb7\x89\xd3^\xa6\x8c\x08\x8a\xb3\xf6H\x81\x8b\xa4\xa6ek]" time="0.544" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xe0\xcbn8*]\xffr\xac\x1d\xda\x96\x90\x817G\x8b\xd56\xcfKw\x8a\xde\x1f\xe7\xa9\x01\x0b3A\xc2]" time="0.548" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xbd+J\xce\xc4n\xdf(zC\xb9\xb2\x11u0lv\xa8\x1aW\x89\x93&quot;G0\x81\xcd'{\xcd\x1e7]" time="0.550" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-c\xea\x0b\xf5\xeeYt\xc3y\x0f+V\xeds*\x1a\x111\xbe\x17}\xeaBa\x97g\xc2\x18\x8e\x12\xe6[]" time="0.542" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x13d\xf5\xd8q{\rX\x03\xca\x8d\x9a\xa6\xa3\xb7C\x7f\xf5\x9f\xcec\x91\x1f\x0b\xd0\xb3\xcf\xbaf\xde\x9cu]" time="0.554" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x85&gt;F\x89x\x9b\xf4\x1fL\x1d\x1e\xf9\xa1\x8c\x1b\xec\x13\xa1\xe7`\xe8?,\x14\xf1\x88R\x8dA\xbb\rK]" time="0.548" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-2\xddS\xd4\xae\x89\xee\xa0zOW\x9e/\xf7\xac\xe2\xc1\xd2\x98\xdc\xf0\x1c\x94\\xbfY\xcd\x93,\xd391]" time="0.547" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xf0\xd1^\xb4\xd2]\xce\x11\x99%\xbb\x0b\x99\x8dH\xa9\x8e\x8aW:\x8a\xce\xe7\xc5MT\x15JLz7\xfc]" time="0.553" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-1?m\x14&amp;\x1a\xf6\xda\xf8.\x98;\xb2\xdf\xd1\xdd\xd0:\xdb\x19\xd7\xf3Oa9G)G\x93\xb2\x12t]" time="0.554" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-/7\xbc\xa2\xdeB\x88\xd5A\xa4e]\xe9\xb2\xa3)\x08.\xc4^S\x05\xf3Z\xae@\xa25\xa4\x99\x90\xab]" time="0.547" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x85\xa8XD\xfe~\xaa\xb3I\x98\xc8\xef\xd8\xfa\xfc\xae\xab\xa5\xe5\xa5WoG\x12s\x02\xf0\x9b\xe3\xef\x8d\xa2]" time="0.546" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x01\xbe\xcf+\x07d\xbd\x88\xd4\r\xa8\xba\xcb\xed\xab&gt;\xef\xbe\xd4)r\xafVv\xf7\xfd#a\xf3L\x1bE]" time="0.544" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xe6fQ\xfd\xa2o\xe6\xec(\x06\xd7\xa3\xc4a+\xb09B\x94\x8e&amp;\xb388/\xe1B\xaf\x7f1\x04S]" time="0.573" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xa5$\xc5\xd7\xcc2\xb0\xc49\xee\xa7\xc6\r\xf3Q\x0e\xf9\xe4\xa2:\xab\xa7a\xd2\xa3\xb87\x08N{\x17\xce]" time="0.552" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xfc\x87\xc1P[\xbc\xb2f\x9e\xaa\x8aD\x81\xbc\xf1\x10\xac\xf8\x026\xe0I\xc3\xe9\xe4\x87b\xf1&gt;\xb62\x91]" time="0.544" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xee\xa0Y\xe0\xcf:\xc9\xb7\xd7\xba\x8ePo\xb1n6\x15\xd4\xca\xa7\xb1\x9e\xcd\x7f\xd0!HeM\x98z\xe2]" time="0.552" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-e\xca\x1f\xea\xb2\xf0\x91\xa4\xa9Pwu\x83;\x93$\xde/\xcfC\x1d\xd0\xbe#\xf8\xfa&quot;?\x19\x99\xb7\xbe]" time="0.546" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-{\xd2\xb5\x8fhj\xfa\x89\xbc\x08CC\x06L&lt;\xbfym\xa7\x95\xc7\xd6\xadmu\xb8\xd7\xe5\xf0ib\x95]" time="0.544" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x97\x1c?f\x97\xcc\xab\\xb8g%8\xe4\xbdP\xff\xf0\x9f^\xff\x84\xb5i#\xa8Pp\x82\xdf\rW~]" time="0.548" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xd8\xd6E\x17\x8a\xf0z\xc1\x95\xd1\x0f\x0c\x96=q\xdc5\xf7\x11\x1c\xdf\x9b '\xc4M\xa0\xa0\x81\x94\xf4(]" time="0.547" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x8c\xb6\xc5\xcaT\x044\xae\xe8\xac\x12l4C\xae\x98\x10ZC\x10E\x1c\x80b&quot;\xcd\xb1a\xc9$\x8c\x98]" time="0.548" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x99\xcf\x01\xff\x02\x1e\xd2w\xa9\tt\x87\xec\xac\@\xb9\x97\x98\xf8[6\xa0\x8d\xed\x0e\\xdc/&amp;C\xf1]" time="0.557" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x90k\xf0\x02\xa7\r'\xae\xb99\x81\xb8KCS\x1d\x17\x92\x84\xae\xfd~\x81\xe24\xe3v\x89\x10\x879\xc0]" time="0.541" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xc8\xa7ND\xe3\xe2\xc2\xc4\x93\x12\x16\xa4o\xbd\x15W\xe9\xae\x8e\x1c\x08\xd3&quot;K\x9a\xc6Lo\xca\x06}(]" time="0.546" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xa3&lt;'tY\xaf\xd4\x00\xccG-\xf4r\x06\xdb\xb8\xed\xe57\xe0\x0b\xfe&lt;\xb8\xe2vmC\x8b\xa8\xcd\xf8]" time="0.548" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-_i&amp;\x80n\xf4\x0f\xc34!\xbc-\x1cm\xf7\x81o\xfa\xa1\xe9\\xbd=\x1b\x16N\xda\xden\xac\x13\xa0]" time="0.547" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xa8\xe0fLw\xa4w\xd7\xa71\x92\xa3\xd41\xf6\x81\xc7x\xe5\x9b\x89\xd6\xeb2}y 'l\xd1\xb8_]" time="0.543" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-a\xe83\xc3\x15G[)b\xbe\x14\x8a?\x8f\x18\xf4\x8f\x10T\xc7\xc5\xa3$\xec\x1eB\xc5\x87\xddc&quot;\xeb]" time="0.543" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xd1z%\x00\xb4nT\x99;\xe4\xfbR\x85C\x15}\x82m\xfc\x04\xfb\\xa3\x1c1h\xd9\xed\xb5N\xec\]" time="0.543" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xb0\xea\xf3\xe0\x8b\x05&gt;\xfc9\x08\xe8\xd4-\xcb\x88\xce\xff&gt;\xb9N7\xbfL=\x1a/\xd4\x0e\xa9\xc2\xa9=]" time="0.546" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xb8&lt;\xc5\xe0\xe2M&gt;\x91vGk\xf2\x07l)\x14ib\xed\x15\xcfK^\xbb\xe1\xdei|`\xe6\xe6\xd0]" time="0.545" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-H\xe9\xb7\x11\x001]\xfa\xc5\xd2\xb6\xc2fn_\x88\xb4\xb9\r\xc4P\xd71 ]C\xde \x0cn\xe5\xa8]" time="0.549" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x1e\x1b\xacy\xcc\xacd\xf2\xb0\xed\xbf\x8c\xab\xc2E*C\xc0\xdaC\x03\xa1\x15\x87\x9a\xc5W\xdf&amp;\xbdI\x9b]" time="0.543" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x9f\xc4Rl\xc0|\xe0\xf6!h86^F\xcd\xed\xfbN\x0f\x8aS\x0fY\xc1*\xc3\xdc\xba\*\x9b\xb0]" time="0.545" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xdf\xa2~3\xe6\xd2\x83\xb6\x9a\xa3\xccO\xfa[$f\xbe\x1b\xc2\xfe9\xad\xf3\xab\x8eh^\xa6q|\x98_]" time="0.543" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xa1S'p\xcb\x1bM\xe6\xb4\xd9\x7f\x84\x8f\x98\x94s\x97!\xfa\x1e\x1d\xbev?\xcf\xc3\x859\\x00d\x10]" time="0.545" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x9b\xc6\x8cVY\x80b\x05bf\x9b\x96\x03\xcd\xcd\x8d\x93\xcc\xe8:\xf2\x02\xa4\x96\xb6*`8VB\xd7\x01]" time="0.545" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-V\x9a,\x12n\x105\xb5\xb6\xf6\x8f\xa1\xe0Y\x12\x0f\xd4\xed\x9b:\xc6%A\x11&amp;\x9b\xc9\xe7\xfb\xad\n\x08]" time="0.551" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xc1\x10\x11\xdc&lt;\xf6\x96T\x13\xb5#\x12P\xbc\x9f\x83-\xdf\xed&lt;;IJG\xa7 B\xab\xe7\x1fD|]" time="0.544" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-:9\xd863&lt;\x0b\x8ao0\xdf!+\xa2-\xb9v\xdc}\xefc\xdb\xe3\xe1Z\xe1/\x92C\x9b\x82\x93]" time="0.547" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xf9\xf7\x00y(\x115&gt;\x9f\xd1\xdc\xc8 \xc1\x14y\x9d\x1f\xb8\xce\xf2\x145h_\xb4\xbe0T\xbc%\x18]" time="0.547" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-+u\xd0\x18\xfa\x17\xb3\xa8\xd3^Yn\xdf&gt;\xb3Z\x11\xa6ol\xbc\xff=i\xb3\xed\x8ew\xacg$\xdd]" time="0.546" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\x1a\xb7\xa4\xba\xa6)\xde\rc\x9ea\xac\xcf\xdbH\xa7P@\xf2\xfbA\tl\xa5\xee\xe91\x19\xefO\x84\x0f]" time="0.544" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-:0\x12g\xab4l\xba\x07\x89\xdcVq\xa1\xf3\xcc^\x92\x96\xdc'\x0e\xf9\x1b\x04\xf1\xa7?\x00\x0c\x0c1]" time="0.547" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xef\x87\xb10\xe4\x05J\x89}V\xd8r\xb4\xfc\xe2#ao\x00lv\x12\xf9.\x19\xbcNG\x15\xcbnv]" time="0.555" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xbfP\xf3?\xbfO\xde\xdf|&quot;[\xec\x92lL\x134\x04qq\xbb\x8b\xda\xce\xe7_\x81\xdcn\xa5 \xdb]" time="0.549" />
    <testcase classname="tests_013.test_crypto.TestHash" name="test_hash[sha3-\xa3\x1e\xe2\x8c\xe5\x8b\x10\x19X[\xf3\x0c\xb8\xf7\xf2\xa6\xd5\xf9\xd0\xff\x81\xf8c\x8ap\xe7\x05\xd6\xa8+\xc7\x03]" time="0.970" />
    <testcase classname="tests_013.test_injection.TestInjectionAndActivation" name="test_check_resources" time="0.001" />
    <testcase classname="tests_013.test_injection.TestInjectionAndActivation" name="test_compute_hash" time="0.046" />
    <testcase classname="tests_013.test_injection.TestInjectionAndActivation" name="test_injection" time="19.743" />
    <testcase classname="tests_013.test_injection.TestInjectionAndActivation" name="test_check_injected" time="0.542" />
    <testcase classname="tests_013.test_injection.TestInjectionAndActivation" name="test_environment_version" time="0.539" />
    <testcase classname="tests_013.test_injection.TestInjectionAndActivation" name="test_activation" time="0.565" />
    <testcase classname="tests_013.test_injection.TestInjectionAndActivation" name="test_check_protocol" time="13.249" />
    <testcase classname="tests_013.test_injection.TestActivation" name="test_proto_known" time="6.792" />
    <testcase classname="tests_013.test_injection.TestActivation" name="test_first_protocol" time="0.552" />
    <testcase classname="tests_013.test_injection.TestActivation" name="test_activate_demo" time="0.557" />
    <testcase classname="tests_013.test_injection.TestActivation" name="test_level1" time="0.554" />
    <testcase classname="tests_013.test_injection.TestActivation" name="test_protocol_genesis" time="0.961" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_setup" time="7.914" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_mint_or_burn" time="1.143" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve1" time="1.140" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve2" time="1.136" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve3" time="1.141" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_add_liquidity" time="1.158" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approval" time="1.145" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approved_transfer" time="1.136" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_remove_liquidity" time="1.159" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_dex_storage" time="0.555" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_lqt_storage" time="0.548" />
    <testcase classname="tests_013.test_liquidity_baking.TestAddApproveTransferRemove" name="test_tok_storage" time="0.971" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_init" time="7.956" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_activate" time="9.499" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_migration" time="11.577" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_new_proto" time="31.415" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_new_proto_second" time="1.742" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_terminate_node0" time="91.632" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_export_snapshots" time="0.988" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_import_full_snapshot_node1" time="7.562" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_import_rolling_snapshot_node2" time="8.538" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_reconstruct_full_node3" time="14.554" />
    <testcase classname="tests_013.test_migration.TestMigration" name="test_rerun_node0" time="5.555" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="7.347" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.545" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.544" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.543" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.544" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.546" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_originate_byte_contract" time="2.236" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_small" time="1.159" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_medium" time="1.427" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_oversized" time="0.650" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_originate_munch_contract" time="2.240" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_lambda_ok" time="3.147" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_lambda_fail" time="3.352" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_list_ok" time="2.051" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_list_syntax_error" time="0.714" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_list_ill_typed" time="0.801" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_list_fail" time="0.917" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_nat_ok" time="1.742" />
    <testcase classname="tests_014.test_basic.TestRememberContract" name="test_operation_size_with_nat_fail" time="1.421" />
    <testcase classname="tests_014.test_contract.TestExecutionOrdering" name="test_ordering[tree0-ABCDEFG]" time="33.094" />
    <testcase classname="tests_014.test_contract.TestExecutionOrdering" name="test_ordering[tree1-ABC]" time="17.370" />
    <testcase classname="tests_014.test_contract.TestExecutionOrdering" name="test_ordering[tree2-ABCD]" time="21.790" />
    <testcase classname="tests_014.test_contract.TestExecutionOrdering" name="test_ordering[tree3-]" time="6.538" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_empty" time="7.261" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single" time="0.533" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single_display_names" time="0.537" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_mixed" time="1.073" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-True-results0]" time="0.539" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-False-results1]" time="0.536" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-True-results2]" time="0.568" />
    <testcase classname="tests_014.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-False-results3]" time="0.956" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_literal" time="7.809" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_id" time="0.543" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_diff" time="0.544" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_id" time="0.541" />
    <testcase classname="tests_014.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_diff" time="0.966" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_init" time="7.815" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_activate" time="29.579" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_migration" time="32.214" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_new_proto" time="108.033" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_new_proto_second" time="1.663" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_terminate_node0" time="91.219" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_export_snapshots" time="0.985" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_import_full_snapshot_node1" time="7.425" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_import_rolling_snapshot_node2" time="8.422" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_reconstruct_full_node3" time="14.448" />
    <testcase classname="tests_014.test_migration.TestMigration" name="test_rerun_node0" time="5.512" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[0]" time="14.425" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[1]" time="2.258" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[10]" time="2.276" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[42]" time="2.278" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[100]" time="2.266" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[65535]" time="2.271" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[-1]" time="0.564" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65536]" time="0.557" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65598909]" time="0.576" />
    <testcase classname="tests_014.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[908923434]" time="0.994" />
    <testcase classname="tests_013.test_baker_endorser.TestAllDaemonsWithOperations" name="test_setup_network" time="34.470" />
    <testcase classname="tests_013.test_baker_endorser.TestAllDaemonsWithOperations" name="test_wait_for_protocol" time="3.278" />
    <testcase classname="tests_013.test_baker_endorser.TestAllDaemonsWithOperations" name="test_network_gen_operations_and_add_nodes" time="190.653" />
    <testcase classname="tests_013.test_baker_endorser.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.507" />
    <testcase classname="tests_013.test_baker_endorser.TestAllDaemonsWithOperations" name="test_synchronize" time="5.345" />
    <testcase classname="tests_013.test_baker_endorser.TestAllDaemonsWithOperations" name="test_progress" time="0.534" />
    <testcase classname="tests_013.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_operations" time="5.394" />
    <testcase classname="tests_013.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_logs" time="4.729" />
    <testcase classname="tests_013.test_client_without_node.TestConfigInit" name="test_config_init[None]" time="0.532" />
    <testcase classname="tests_013.test_client_without_node.TestConfigInit" name="test_config_init[config_dict1]" time="0.531" />
    <testcase classname="tests_013.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[None]" time="1.586" />
    <testcase classname="tests_013.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[config_dict1]" time="0.532" />
    <testcase classname="tests_013.test_multisig.TestUnsupportedMultisig" name="test_deploy_nonmultisig" time="8.727" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_setup_network" time="6.745" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_wait_for_protocol" time="0.538" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_on_vote_file" time="4.223" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_off_vote_file" time="4.225" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_pass_vote_file" time="4.225" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_nonexistent_vote_file" time="4.224" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_invalid_json" time="4.225" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_default_file_location" time="4.223" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_vote_caching" time="6.225" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_path_overrides_default_location" time="4.224" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_true_vote_file" time="4.224" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_false_vote_file" time="4.224" />
    <testcase classname="tests_013.test_per_block_votes.TestAllPerBlockVotes" name="test_wrong_key" time="4.642" />
    <testcase classname="tests_013.test_sapling.TestSaplingStateCorruption" name="test_push_sapling_state_with_id_is_forbidden" time="12.487" />
    <testcase classname="tests_013.test_sapling.TestSaplingStateCorruption" name="test_originate_with_empty" time="1.111" />
    <testcase classname="tests_013.test_sapling.TestSaplingStateCorruption" name="test_originate_with_id_is_forbidden" time="0.972" />
    <testcase classname="tests_013.test_sapling.TestSaplingDifferentMemosize" name="test_shield_with_different_memo_size" time="16.202" />
    <testcase classname="tests_014.test_client_without_node.TestChainId" name="test_chain_id_block_hash" time="0.533" />
    <testcase classname="tests_014.test_client_without_node.TestChainId" name="test_chain_id_seed" time="0.535" />
    <testcase classname="tests_014.test_contract.TestBadAnnotation" name="test_write_contract_bad_annot" time="0.003" />
    <testcase classname="tests_014.test_contract.TestBadAnnotation" name="test_bad_annotation" time="7.608" />
    <testcase classname="tests_014.test_contract_macros.TestBigmap" name="test_bigmap" time="17.988" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_setup" time="7.695" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_mint_or_burn" time="1.108" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve1" time="1.104" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve2" time="1.104" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve3" time="1.110" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_add_liquidity" time="1.114" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approval" time="1.108" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approved_transfer" time="1.112" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_remove_liquidity" time="1.118" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_dex_storage" time="0.536" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_lqt_storage" time="0.528" />
    <testcase classname="tests_014.test_liquidity_baking.TestAddApproveTransferRemove" name="test_tok_storage" time="0.949" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_proto_known" time="6.764" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_first_protocol" time="0.528" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_activate_proto" time="0.528" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level1" time="0.532" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_protocol_genesis" time="0.527" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_manual_bake" time="2.589" />
    <testcase classname="tests_014.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level2" time="0.952" />
    <testcase classname="tests_014.test_tls.TestTLS" name="test_bootstrapped" time="0.005">
      <skipped type="pytest.skip" message="requires to install a custom CA">/builds/tezos/tezos/tests_python/tests_014/test_tls.py:22: requires to install a custom CA</skipped>
    </testcase>
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="7.138" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_not_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.523" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.530" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_with_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.527" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-KT1BuEZtb68c1Q4yjtckcNjGELqWt56Xyesc]" time="0.527" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_non_originated_contract_no_forcing_and_saved_before[test-2-KT1TZCh8fmUbuDqFxetPWC2fsQanAHzLx4W9]" time="0.534" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_originate_byte_contract" time="2.150" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_small" time="1.108" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_medium" time="1.384" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_oversized" time="0.586" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_originate_munch_contract" time="2.153" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_lambda_ok" time="2.976" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_lambda_fail" time="3.056" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_list_ok" time="1.969" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_list_syntax_error" time="0.686" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_list_ill_typed" time="0.757" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_list_fail" time="0.819" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_nat_ok" time="1.692" />
    <testcase classname="tests_alpha.test_basic.TestRememberContract" name="test_operation_size_with_nat_fail" time="1.338" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/cons_twice.tz]" time="7.108" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/cadr_annotation.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/reduce_map.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/at_least.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/create_add1_lists.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/infinite_loop.tz]" time="0.554" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/add1_list.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/queue.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/int_publisher.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/big_map_union.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/add1.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/auction.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/always.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/accounts.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/faucet.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/reentrancy.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/reservoir.tz]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/cps_fact.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/forward.tz]" time="0.651" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/scrutable_reservoir.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/append.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/insertion_sort.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/list_of_transactions.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/king_of_tez.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/data_publisher.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/fail_amount.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/empty.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/concat.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/dispatch.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/spawn_identities.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/after_strategy.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/conditionals.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/bad_lockup.tz]" time="0.555" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[attic/id.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/left_right.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/iter_fail.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dugn.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dipn.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/slices.tz]" time="0.537" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g2.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dip.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_now.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_nonexistent_view.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/tez_add_sub.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_view.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g2.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev.tz]" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_nonexistent_view.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_nat.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type.tz]" time="0.775" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_car.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/abs.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sub_timestamp_delta.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_addr.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_fr.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/address.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_add.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/update_big_map.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_delegate.tz]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname_alt.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/or.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_iter.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_fr.tz]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g1.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dign.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_bytes.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_constant.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/uncomb.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left_failwith.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/exec_concat.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_size.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_nat.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_join.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_list.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_toplevel_lib.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_nonexistent_func.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_consistency_checker.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_nonexistent_view.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse_loop.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/int.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_with_view.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g2.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_amount.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_view.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/car.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_output_type.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/empty_map.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/keccak.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_fib_view.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id_store.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_default_entrypoint.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-literals.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_iter.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_left.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/not.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dropn.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_int.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_view.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/cons.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_map_block.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/if.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_input.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_binary.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/none.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_mutual_recursion.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/emit.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/not_binary.tz]" time="0.542" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_int.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/merge_comparable_pairs.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/voting_power.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/shifts.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set-2.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_size.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/originate_big_map.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/check_signature.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_size.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer-2.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/pair_id.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_fib_view.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_timestamp_delta.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_fib_view.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_test_step_contants.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/if_some.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_car.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_fr.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/amount_after_view.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_rec.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sets.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/reverse.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_big_store.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_toplevel_inconsistent_input_type.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/or_binary.tz]" time="0.551" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/source.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/munch.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/first.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/and.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-get.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/level.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/noop.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/loop_failwith.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/packunpack_rev_cty.tz]" time="0.558" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_read.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/contract.tz]" time="0.552" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_split.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_bls12_381_g2.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance_after_fib_view.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxo_read.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/create_contract_rootname.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ret_int.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/and_logical_1.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_nat.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_fib_view.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sapling_empty_state.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_fr.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/proxy.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_bad.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_key.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/split_string.tz]" time="0.539" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sha3.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_id.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec_2.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_mem_string.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bytes.tz]" time="0.519" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_map_value.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_id.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_member.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_op_id.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/concat_hello_bytes.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/view_fib.tz]" time="0.518" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_z_nat.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_to_self.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/store_bls12_381_g1.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_push_bytes_not_padded.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/set_cdr.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_nat.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comb-set.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/cdr.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_big_map.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_and_update_map.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/diff_timestamps.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/big_map_mem_string.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_bls12_381_g1.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/subset.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/slice_bytes.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mul_overflow.tz]" time="0.539" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_with_entrypoint.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_z_fr_int.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/neg_bls12_381_g1.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/xor.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/bls12_381_fr_to_mutez.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/sender_after_nonexistent_view.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dig_eq.tz]" time="0.558" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_iter.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/str_id.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_address_after_nonexistent_view.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ediv_mutez.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/get_big_map_value.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/self_after_view.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/add_delta_timestamp.tz]" time="0.539" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/pairing_check.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/hash_string.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/transfer_tokens.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_id_map.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/dup-n.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/pexec.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/chain_id.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticketer.tz]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/utxor.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/map_map_sideeffect.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/list_concat_bytes.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/comparisons.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/unpair_field_annotation_mismatch.tz]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/ticket_store-2.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/balance.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/mutez_to_bls12_381_fr.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/compare_big_type2.tz]" time="0.796" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[opcodes/contains_all.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/pair_macro.tz]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/fail.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/take_my_money.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/compare.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpgt.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/guestbook.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/max_in_list.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_lt.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpeq.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_mem.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpneq.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/min.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/macro_annotations.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/unpair_macro.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/set_caddaadr.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/compare_bytes.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmpge.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_ge.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_gt.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_le.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_neq.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmplt.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/build_list.tz]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_cmple.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/assert_eq.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/map_caddaadr.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/carn_and_cdrn.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[macros/big_map_get_add.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/hardlimit.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_sender.tz]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_fungible.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/vote_for_delegate.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/xcat_dapp.tz]" time="0.556" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_fungible.tz]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/replay.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_store.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_entrypoints_counter.tz]" time="0.537" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract_simple.tz]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/self_address_receiver.tz]" time="0.545" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/groth16.tz]" time="0.542" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_storer.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/fa12_reference.tz]" time="0.797" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_appender.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/create_contract.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/default_account.tz]" time="0.526" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_entrypoints.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_read.tz]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/authentication.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_magic.tz]" time="0.537" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lockup.tz]" time="0.547" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/execution_order_caller.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/multiple_en2.tz]" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/generic_multisig.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/big_map_write.tz]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/legacy_multisig.tz]" time="0.551" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_wallet_non_fungible.tz]" time="0.537" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/weather_insurance.tz]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/reveal_signed_preimage.tz]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/lqt_fa12.mligo.tz]" time="0.651" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/ticket_builder_non_fungible.tz]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/originate_contract.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/parameterized_multisig.tz]" time="0.546" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/tzip4_view.tz]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[mini_scenarios/add_clear_tickets.tz]" time="0.527" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_262.tz]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[non_regression/bug_843.tz]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestTypecheck" name="test_typecheck[non_regression/pairk_annot.tz]" time="0.960" />
    <testcase classname="tests_alpha.test_contract.TestNonRegression" name="test_issue_242_originate" time="8.215" />
    <testcase classname="tests_alpha.test_contract.TestNonRegression" name="test_issue_242_assert_balance" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestNonRegression" name="test_issue_843" time="4.686" />
    <testcase classname="tests_alpha.test_contract.TestBadAnnotation" name="test_write_contract_bad_annot" time="0.003" />
    <testcase classname="tests_alpha.test_contract.TestBadAnnotation" name="test_bad_annotation" time="7.660" />
    <testcase classname="tests_alpha.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_sender" time="8.237" />
    <testcase classname="tests_alpha.test_contract.TestSelfAddressTransfer" name="test_self_address_originate_receiver" time="1.610" />
    <testcase classname="tests_alpha.test_contract.TestSelfAddressTransfer" name="test_send_self_address" time="1.506" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_check_contract[fa12_reference]" time="9.929" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_balance_offchain[fa12_reference]" time="0.535" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[fa12_reference]" time="0.534" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[fa12_reference]" time="0.536" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_balance_callback[fa12_reference]" time="3.846" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_allowance_callback[fa12_reference]" time="2.761" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[fa12_reference]" time="2.746" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_check_contract[lqt_fa12]" time="3.344" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_balance_offchain[lqt_fa12]" time="0.537" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_allowance_offchain[lqt_fa12]" time="0.540" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_total_supply_offchain[lqt_fa12]" time="0.536" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_balance_callback[lqt_fa12]" time="2.771" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_allowance_callback[lqt_fa12]" time="2.753" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_get_total_supply_callback[lqt_fa12]" time="2.768" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Basic" name="test_check_contract_fail" time="2.598" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer[fa12_reference]" time="11.777" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[fa12_reference]" time="0.552" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_approve[fa12_reference]" time="1.678" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[fa12_reference]" time="0.548" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_as[fa12_reference]" time="2.762" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[fa12_reference]" time="0.556" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers[fa12_reference]" time="3.317" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[fa12_reference]" time="4.408" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[fa12_reference]" time="6.128" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer[lqt_fa12]" time="5.086" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_not_enough_balance[lqt_fa12]" time="0.561" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_approve[lqt_fa12]" time="1.677" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_approve_unsafe_allowance_change[lqt_fa12]" time="0.558" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_as[lqt_fa12]" time="2.817" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_transfer_as_not_enough_allowance[lqt_fa12]" time="0.554" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers[lqt_fa12]" time="3.351" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers_fail[lqt_fa12]" time="4.450" />
    <testcase classname="tests_alpha.test_fa12.TestFA12Incremental" name="test_multiple_transfers_as[lqt_fa12]" time="6.577" />
    <testcase classname="tests_alpha.test_forge_block.TestForgeBlock" name="test_setup_network" time="6.238" />
    <testcase classname="tests_alpha.test_forge_block.TestForgeBlock" name="test_protocol_exists" time="0.543" />
    <testcase classname="tests_alpha.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ok" time="0.546" />
    <testcase classname="tests_alpha.test_forge_block.TestForgeBlock" name="test_activate_proto_demo_time_shifted_ko" time="0.969">
      <skipped type="pytest.xfail" message="" />
    </testcase>
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_init" time="13.037" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_a" time="177.831" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_on_bootstrapped_node" time="2.454" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch1" time="0.476" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_import_and_reconstruct" time="9.486" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_node1_request_all_blocks_with_metadata" time="0.076" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_import_before_reconstruct" time="7.174" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node2" time="0.043" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_after_snapshot_import" time="2.779" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node_2" time="0.070" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_bake_node0_level_b" time="51.904" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_export_snapshot_batch2" time="0.485" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_sync_node3" time="2.555" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_unavailable_blocks_node3" time="0.550" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_reconstruct_command_after_bootstrap" time="3.006" />
    <testcase classname="tests_alpha.test_multinode_storage_reconstruction.TestMultiNodeStorageReconstruction" name="test_available_blocks_node3" time="3.132" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingDifferentMemosize" name="test_shield_with_different_memo_size" time="16.441" />
    <testcase classname="tests_alpha.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_init" time="32.059" />
    <testcase classname="tests_alpha.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_restart" time="28.362" />
    <testcase classname="tests_alpha.test_tenderbake_bakers_restart.TestProtoTenderbake" name="test_level" time="5.120" />
    <testcase classname="tests_alpha.test_bootstrap.TestStuck" name="test_setup_network" time="6.869" />
    <testcase classname="tests_alpha.test_bootstrap.TestStuck" name="test_kill_baker" time="19.134" />
    <testcase classname="tests_alpha.test_bootstrap.TestStuck" name="test_progress" time="0.555" />
    <testcase classname="tests_alpha.test_bootstrap.TestStuck" name="test_add_node" time="5.887" />
    <testcase classname="tests_alpha.test_bootstrap.TestStuck" name="test_all_nodes_boostrap" time="92.087" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show[None]" time="0.550" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show[config_dict1]" time="0.542" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-None]" time="1.082" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args0-config_dict1]" time="1.080" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-None]" time="1.087" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigShow" name="test_config_show_roundtrip[cmd_line_args1-config_dict1]" time="1.096" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_manager_origination" time="10.131" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_delegatable_origination" time="1.671" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_target_with_entrypoints_origination" time="1.678" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_target_without_entrypoints_origination" time="1.666" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_target_without_default_origination" time="1.676" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_target_with_root_origination" time="1.680" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_manager_set_delegate" time="6.681" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_manager_withdraw_delegate" time="3.335" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_to_manager" time="3.287" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_simple_transfer_from_manager_to_implicit" time="3.285" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_manager" time="4.403" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_default" time="2.268" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_target" time="1.144" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_entrypoint_with_args" time="4.512" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_no_entrypoint_with_args" time="2.272" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_no_default_with_args" time="2.308" />
    <testcase classname="tests_alpha.test_contract.TestManager" name="test_transfer_from_manager_to_rooted_target_with_args" time="2.690" />
    <testcase classname="tests_alpha.test_contract.TestExecutionOrdering" name="test_ordering[tree0-ABCDEFG]" time="33.563" />
    <testcase classname="tests_alpha.test_contract.TestExecutionOrdering" name="test_ordering[tree1-ABC]" time="18.990" />
    <testcase classname="tests_alpha.test_contract.TestExecutionOrdering" name="test_ordering[tree2-ABCD]" time="23.103" />
    <testcase classname="tests_alpha.test_contract.TestExecutionOrdering" name="test_ordering[tree3-]" time="6.870" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_unparsing_mode[None]" time="7.765" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Readable]" time="0.545" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized]" time="0.552" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_unparsing_mode[Optimized_legacy]" time="0.548" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_legacy_flag" time="1.095" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_script[None]" time="0.547" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_script[Readable]" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_script[Optimized]" time="0.547" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_script[Optimized_legacy]" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[nat]" time="0.543" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[list nat]" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[pair nat int]" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int)]" time="0.541" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool]" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool)]" time="0.541" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[pair nat int bool bytes]" time="0.539" />
    <testcase classname="tests_alpha.test_contract.TestNormalize" name="test_normalize_type[list (pair nat int bool bytes)]" time="0.962" />
    <testcase classname="tests_alpha.test_contract.TestBadIndentation" name="test_bad_indentation_ill_typed" time="7.266" />
    <testcase classname="tests_alpha.test_contract.TestBadIndentation" name="test_bad_indentation_hash" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestBadIndentation" name="test_formatting" time="0.537" />
    <testcase classname="tests_alpha.test_contract.TestBadIndentation" name="test_formatted_hash" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestBadIndentation" name="test_formatted_typechecks" time="0.955" />
    <testcase classname="tests_alpha.test_contract.TestContractTypeChecking" name="test_implicit" time="19.809" />
    <testcase classname="tests_alpha.test_contract.TestContractTypeChecking" name="test_originated_inexistent" time="13.009" />
    <testcase classname="tests_alpha.test_contract.TestContractTypeChecking" name="test_originated_no_default" time="14.656" />
    <testcase classname="tests_alpha.test_contract.TestContractTypeChecking" name="test_originated_with_default" time="15.067" />
    <testcase classname="tests_alpha.test_contract_baker.TestOriginationCall" name="test_originate" time="8.432" />
    <testcase classname="tests_alpha.test_contract_baker.TestOriginationCall" name="test_call" time="1.669" />
    <testcase classname="tests_alpha.test_contract_baker.TestOriginationCall" name="test_balance" time="1.078" />
    <testcase classname="tests_alpha.test_contract_baker.TestOriginationCall" name="test_query_storage" time="0.960" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainLevel" name="test_level" time="14.419" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_empty" time="7.287" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap2-manager]" time="5.537" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_transfer_json_to_entrypoint_with_args[bootstrap4-bootstrap4]" time="3.278" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap2-manager]" time="4.331" />
    <testcase classname="tests_alpha.test_multiple_transfers.TestMultipleTransfers" name="test_multiple_transfers[bootstrap4-bootstrap4]" time="4.788" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_setup_network" time="31.805" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_wait_for_alpha" time="3.319" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_network_gen_operations" time="120.974" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.456" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_synchronize" time="2.732" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperations" name="test_check_operations" time="5.100" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_ignore" time="9.182" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestIgnoreNodeMempool" name="test_no_ignore" time="2.552" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_file" time="148.605" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_empty_operations_http" time="2.284" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_file" time="2.303" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_absent_operations_http" time="2.278" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file_pre" time="2.721" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_file" time="80.161" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestExternalOperations" name="test_bake_singleton_operations_http" time="225.655" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashOrigination" name="test_contract_hash_with_origination" time="9.729" />
    <testcase classname="tests_alpha.test_cors.TestCors" name="test_preflight" time="6.104" />
    <testcase classname="tests_alpha.test_cors.TestCors" name="test_request" time="0.425" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-]" time="7.139" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-a]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x9dy\xb1\xa3\x7f1\x80\x1c\xd1\x1ag\x06\xfb@\xd6\xbdWRhF\x90;\xb1&gt;\xdeV$9\xe9\xc1\xb8#]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xa9`\x89\xbc\xa7\x1f=\x1am-&lt;\xad\xb3f\x9c\xbdP\xe1e\xe44$\x9d\x8b\x82\x9fA\x16i\x84*\x97]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x99\x11\x03l\xf3\xe8&quot;\x08n\xca\xa0\x07Zi\xfc\x17\x8b\xa8\xf87\x18\xaa\x8f;\xd1\xf6^\x81D\xe6\x1d\x9a]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xb3\x0f\xcb\x06\xa6\xc1\xad\x8f)\x06\xe72\xb1\x0fM\xb7\x89\xd3^\xa6\x8c\x08\x8a\xb3\xf6H\x81\x8b\xa4\xa6ek]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xe0\xcbn8*]\xffr\xac\x1d\xda\x96\x90\x817G\x8b\xd56\xcfKw\x8a\xde\x1f\xe7\xa9\x01\x0b3A\xc2]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xbd+J\xce\xc4n\xdf(zC\xb9\xb2\x11u0lv\xa8\x1aW\x89\x93&quot;G0\x81\xcd'{\xcd\x1e7]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-c\xea\x0b\xf5\xeeYt\xc3y\x0f+V\xeds*\x1a\x111\xbe\x17}\xeaBa\x97g\xc2\x18\x8e\x12\xe6[]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x13d\xf5\xd8q{\rX\x03\xca\x8d\x9a\xa6\xa3\xb7C\x7f\xf5\x9f\xcec\x91\x1f\x0b\xd0\xb3\xcf\xbaf\xde\x9cu]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x85&gt;F\x89x\x9b\xf4\x1fL\x1d\x1e\xf9\xa1\x8c\x1b\xec\x13\xa1\xe7`\xe8?,\x14\xf1\x88R\x8dA\xbb\rK]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-2\xddS\xd4\xae\x89\xee\xa0zOW\x9e/\xf7\xac\xe2\xc1\xd2\x98\xdc\xf0\x1c\x94\\xbfY\xcd\x93,\xd391]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xf0\xd1^\xb4\xd2]\xce\x11\x99%\xbb\x0b\x99\x8dH\xa9\x8e\x8aW:\x8a\xce\xe7\xc5MT\x15JLz7\xfc]" time="0.532" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-1?m\x14&amp;\x1a\xf6\xda\xf8.\x98;\xb2\xdf\xd1\xdd\xd0:\xdb\x19\xd7\xf3Oa9G)G\x93\xb2\x12t]" time="0.547" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-/7\xbc\xa2\xdeB\x88\xd5A\xa4e]\xe9\xb2\xa3)\x08.\xc4^S\x05\xf3Z\xae@\xa25\xa4\x99\x90\xab]" time="0.533" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x85\xa8XD\xfe~\xaa\xb3I\x98\xc8\xef\xd8\xfa\xfc\xae\xab\xa5\xe5\xa5WoG\x12s\x02\xf0\x9b\xe3\xef\x8d\xa2]" time="0.531" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x01\xbe\xcf+\x07d\xbd\x88\xd4\r\xa8\xba\xcb\xed\xab&gt;\xef\xbe\xd4)r\xafVv\xf7\xfd#a\xf3L\x1bE]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xe6fQ\xfd\xa2o\xe6\xec(\x06\xd7\xa3\xc4a+\xb09B\x94\x8e&amp;\xb388/\xe1B\xaf\x7f1\x04S]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xa5$\xc5\xd7\xcc2\xb0\xc49\xee\xa7\xc6\r\xf3Q\x0e\xf9\xe4\xa2:\xab\xa7a\xd2\xa3\xb87\x08N{\x17\xce]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xfc\x87\xc1P[\xbc\xb2f\x9e\xaa\x8aD\x81\xbc\xf1\x10\xac\xf8\x026\xe0I\xc3\xe9\xe4\x87b\xf1&gt;\xb62\x91]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xee\xa0Y\xe0\xcf:\xc9\xb7\xd7\xba\x8ePo\xb1n6\x15\xd4\xca\xa7\xb1\x9e\xcd\x7f\xd0!HeM\x98z\xe2]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-e\xca\x1f\xea\xb2\xf0\x91\xa4\xa9Pwu\x83;\x93$\xde/\xcfC\x1d\xd0\xbe#\xf8\xfa&quot;?\x19\x99\xb7\xbe]" time="0.524" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-{\xd2\xb5\x8fhj\xfa\x89\xbc\x08CC\x06L&lt;\xbfym\xa7\x95\xc7\xd6\xadmu\xb8\xd7\xe5\xf0ib\x95]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x97\x1c?f\x97\xcc\xab\\xb8g%8\xe4\xbdP\xff\xf0\x9f^\xff\x84\xb5i#\xa8Pp\x82\xdf\rW~]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xd8\xd6E\x17\x8a\xf0z\xc1\x95\xd1\x0f\x0c\x96=q\xdc5\xf7\x11\x1c\xdf\x9b '\xc4M\xa0\xa0\x81\x94\xf4(]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x8c\xb6\xc5\xcaT\x044\xae\xe8\xac\x12l4C\xae\x98\x10ZC\x10E\x1c\x80b&quot;\xcd\xb1a\xc9$\x8c\x98]" time="0.534" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x99\xcf\x01\xff\x02\x1e\xd2w\xa9\tt\x87\xec\xac\@\xb9\x97\x98\xf8[6\xa0\x8d\xed\x0e\\xdc/&amp;C\xf1]" time="0.525" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x90k\xf0\x02\xa7\r'\xae\xb99\x81\xb8KCS\x1d\x17\x92\x84\xae\xfd~\x81\xe24\xe3v\x89\x10\x879\xc0]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xc8\xa7ND\xe3\xe2\xc2\xc4\x93\x12\x16\xa4o\xbd\x15W\xe9\xae\x8e\x1c\x08\xd3&quot;K\x9a\xc6Lo\xca\x06}(]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xa3&lt;'tY\xaf\xd4\x00\xccG-\xf4r\x06\xdb\xb8\xed\xe57\xe0\x0b\xfe&lt;\xb8\xe2vmC\x8b\xa8\xcd\xf8]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-_i&amp;\x80n\xf4\x0f\xc34!\xbc-\x1cm\xf7\x81o\xfa\xa1\xe9\\xbd=\x1b\x16N\xda\xden\xac\x13\xa0]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xa8\xe0fLw\xa4w\xd7\xa71\x92\xa3\xd41\xf6\x81\xc7x\xe5\x9b\x89\xd6\xeb2}y 'l\xd1\xb8_]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-a\xe83\xc3\x15G[)b\xbe\x14\x8a?\x8f\x18\xf4\x8f\x10T\xc7\xc5\xa3$\xec\x1eB\xc5\x87\xddc&quot;\xeb]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xd1z%\x00\xb4nT\x99;\xe4\xfbR\x85C\x15}\x82m\xfc\x04\xfb\\xa3\x1c1h\xd9\xed\xb5N\xec\]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xb0\xea\xf3\xe0\x8b\x05&gt;\xfc9\x08\xe8\xd4-\xcb\x88\xce\xff&gt;\xb9N7\xbfL=\x1a/\xd4\x0e\xa9\xc2\xa9=]" time="0.534" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xb8&lt;\xc5\xe0\xe2M&gt;\x91vGk\xf2\x07l)\x14ib\xed\x15\xcfK^\xbb\xe1\xdei|`\xe6\xe6\xd0]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-H\xe9\xb7\x11\x001]\xfa\xc5\xd2\xb6\xc2fn_\x88\xb4\xb9\r\xc4P\xd71 ]C\xde \x0cn\xe5\xa8]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x1e\x1b\xacy\xcc\xacd\xf2\xb0\xed\xbf\x8c\xab\xc2E*C\xc0\xdaC\x03\xa1\x15\x87\x9a\xc5W\xdf&amp;\xbdI\x9b]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x9f\xc4Rl\xc0|\xe0\xf6!h86^F\xcd\xed\xfbN\x0f\x8aS\x0fY\xc1*\xc3\xdc\xba\*\x9b\xb0]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xdf\xa2~3\xe6\xd2\x83\xb6\x9a\xa3\xccO\xfa[$f\xbe\x1b\xc2\xfe9\xad\xf3\xab\x8eh^\xa6q|\x98_]" time="0.531" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xa1S'p\xcb\x1bM\xe6\xb4\xd9\x7f\x84\x8f\x98\x94s\x97!\xfa\x1e\x1d\xbev?\xcf\xc3\x859\\x00d\x10]" time="0.534" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x9b\xc6\x8cVY\x80b\x05bf\x9b\x96\x03\xcd\xcd\x8d\x93\xcc\xe8:\xf2\x02\xa4\x96\xb6*`8VB\xd7\x01]" time="0.541" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-V\x9a,\x12n\x105\xb5\xb6\xf6\x8f\xa1\xe0Y\x12\x0f\xd4\xed\x9b:\xc6%A\x11&amp;\x9b\xc9\xe7\xfb\xad\n\x08]" time="0.549" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xc1\x10\x11\xdc&lt;\xf6\x96T\x13\xb5#\x12P\xbc\x9f\x83-\xdf\xed&lt;;IJG\xa7 B\xab\xe7\x1fD|]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-:9\xd863&lt;\x0b\x8ao0\xdf!+\xa2-\xb9v\xdc}\xefc\xdb\xe3\xe1Z\xe1/\x92C\x9b\x82\x93]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xf9\xf7\x00y(\x115&gt;\x9f\xd1\xdc\xc8 \xc1\x14y\x9d\x1f\xb8\xce\xf2\x145h_\xb4\xbe0T\xbc%\x18]" time="0.532" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-+u\xd0\x18\xfa\x17\xb3\xa8\xd3^Yn\xdf&gt;\xb3Z\x11\xa6ol\xbc\xff=i\xb3\xed\x8ew\xacg$\xdd]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\x1a\xb7\xa4\xba\xa6)\xde\rc\x9ea\xac\xcf\xdbH\xa7P@\xf2\xfbA\tl\xa5\xee\xe91\x19\xefO\x84\x0f]" time="0.531" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-:0\x12g\xab4l\xba\x07\x89\xdcVq\xa1\xf3\xcc^\x92\x96\xdc'\x0e\xf9\x1b\x04\xf1\xa7?\x00\x0c\x0c1]" time="0.525" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xef\x87\xb10\xe4\x05J\x89}V\xd8r\xb4\xfc\xe2#ao\x00lv\x12\xf9.\x19\xbcNG\x15\xcbnv]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xbfP\xf3?\xbfO\xde\xdf|&quot;[\xec\x92lL\x134\x04qq\xbb\x8b\xda\xce\xe7_\x81\xdcn\xa5 \xdb]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[keccak-\xa3\x1e\xe2\x8c\xe5\x8b\x10\x19X[\xf3\x0c\xb8\xf7\xf2\xa6\xd5\xf9\xd0\xff\x81\xf8c\x8ap\xe7\x05\xd6\xa8+\xc7\x03]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-a]" time="0.525" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x9dy\xb1\xa3\x7f1\x80\x1c\xd1\x1ag\x06\xfb@\xd6\xbdWRhF\x90;\xb1&gt;\xdeV$9\xe9\xc1\xb8#]" time="0.534" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xa9`\x89\xbc\xa7\x1f=\x1am-&lt;\xad\xb3f\x9c\xbdP\xe1e\xe44$\x9d\x8b\x82\x9fA\x16i\x84*\x97]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x99\x11\x03l\xf3\xe8&quot;\x08n\xca\xa0\x07Zi\xfc\x17\x8b\xa8\xf87\x18\xaa\x8f;\xd1\xf6^\x81D\xe6\x1d\x9a]" time="0.531" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xb3\x0f\xcb\x06\xa6\xc1\xad\x8f)\x06\xe72\xb1\x0fM\xb7\x89\xd3^\xa6\x8c\x08\x8a\xb3\xf6H\x81\x8b\xa4\xa6ek]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xe0\xcbn8*]\xffr\xac\x1d\xda\x96\x90\x817G\x8b\xd56\xcfKw\x8a\xde\x1f\xe7\xa9\x01\x0b3A\xc2]" time="0.523" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xbd+J\xce\xc4n\xdf(zC\xb9\xb2\x11u0lv\xa8\x1aW\x89\x93&quot;G0\x81\xcd'{\xcd\x1e7]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-c\xea\x0b\xf5\xeeYt\xc3y\x0f+V\xeds*\x1a\x111\xbe\x17}\xeaBa\x97g\xc2\x18\x8e\x12\xe6[]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x13d\xf5\xd8q{\rX\x03\xca\x8d\x9a\xa6\xa3\xb7C\x7f\xf5\x9f\xcec\x91\x1f\x0b\xd0\xb3\xcf\xbaf\xde\x9cu]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x85&gt;F\x89x\x9b\xf4\x1fL\x1d\x1e\xf9\xa1\x8c\x1b\xec\x13\xa1\xe7`\xe8?,\x14\xf1\x88R\x8dA\xbb\rK]" time="0.535" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-2\xddS\xd4\xae\x89\xee\xa0zOW\x9e/\xf7\xac\xe2\xc1\xd2\x98\xdc\xf0\x1c\x94\\xbfY\xcd\x93,\xd391]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xf0\xd1^\xb4\xd2]\xce\x11\x99%\xbb\x0b\x99\x8dH\xa9\x8e\x8aW:\x8a\xce\xe7\xc5MT\x15JLz7\xfc]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-1?m\x14&amp;\x1a\xf6\xda\xf8.\x98;\xb2\xdf\xd1\xdd\xd0:\xdb\x19\xd7\xf3Oa9G)G\x93\xb2\x12t]" time="0.532" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-/7\xbc\xa2\xdeB\x88\xd5A\xa4e]\xe9\xb2\xa3)\x08.\xc4^S\x05\xf3Z\xae@\xa25\xa4\x99\x90\xab]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x85\xa8XD\xfe~\xaa\xb3I\x98\xc8\xef\xd8\xfa\xfc\xae\xab\xa5\xe5\xa5WoG\x12s\x02\xf0\x9b\xe3\xef\x8d\xa2]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x01\xbe\xcf+\x07d\xbd\x88\xd4\r\xa8\xba\xcb\xed\xab&gt;\xef\xbe\xd4)r\xafVv\xf7\xfd#a\xf3L\x1bE]" time="0.526" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xe6fQ\xfd\xa2o\xe6\xec(\x06\xd7\xa3\xc4a+\xb09B\x94\x8e&amp;\xb388/\xe1B\xaf\x7f1\x04S]" time="0.536" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xa5$\xc5\xd7\xcc2\xb0\xc49\xee\xa7\xc6\r\xf3Q\x0e\xf9\xe4\xa2:\xab\xa7a\xd2\xa3\xb87\x08N{\x17\xce]" time="0.534" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xfc\x87\xc1P[\xbc\xb2f\x9e\xaa\x8aD\x81\xbc\xf1\x10\xac\xf8\x026\xe0I\xc3\xe9\xe4\x87b\xf1&gt;\xb62\x91]" time="0.535" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xee\xa0Y\xe0\xcf:\xc9\xb7\xd7\xba\x8ePo\xb1n6\x15\xd4\xca\xa7\xb1\x9e\xcd\x7f\xd0!HeM\x98z\xe2]" time="0.531" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-e\xca\x1f\xea\xb2\xf0\x91\xa4\xa9Pwu\x83;\x93$\xde/\xcfC\x1d\xd0\xbe#\xf8\xfa&quot;?\x19\x99\xb7\xbe]" time="0.533" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-{\xd2\xb5\x8fhj\xfa\x89\xbc\x08CC\x06L&lt;\xbfym\xa7\x95\xc7\xd6\xadmu\xb8\xd7\xe5\xf0ib\x95]" time="0.535" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x97\x1c?f\x97\xcc\xab\\xb8g%8\xe4\xbdP\xff\xf0\x9f^\xff\x84\xb5i#\xa8Pp\x82\xdf\rW~]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xd8\xd6E\x17\x8a\xf0z\xc1\x95\xd1\x0f\x0c\x96=q\xdc5\xf7\x11\x1c\xdf\x9b '\xc4M\xa0\xa0\x81\x94\xf4(]" time="0.535" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x8c\xb6\xc5\xcaT\x044\xae\xe8\xac\x12l4C\xae\x98\x10ZC\x10E\x1c\x80b&quot;\xcd\xb1a\xc9$\x8c\x98]" time="0.537" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x99\xcf\x01\xff\x02\x1e\xd2w\xa9\tt\x87\xec\xac\@\xb9\x97\x98\xf8[6\xa0\x8d\xed\x0e\\xdc/&amp;C\xf1]" time="0.535" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x90k\xf0\x02\xa7\r'\xae\xb99\x81\xb8KCS\x1d\x17\x92\x84\xae\xfd~\x81\xe24\xe3v\x89\x10\x879\xc0]" time="0.536" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xc8\xa7ND\xe3\xe2\xc2\xc4\x93\x12\x16\xa4o\xbd\x15W\xe9\xae\x8e\x1c\x08\xd3&quot;K\x9a\xc6Lo\xca\x06}(]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xa3&lt;'tY\xaf\xd4\x00\xccG-\xf4r\x06\xdb\xb8\xed\xe57\xe0\x0b\xfe&lt;\xb8\xe2vmC\x8b\xa8\xcd\xf8]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-_i&amp;\x80n\xf4\x0f\xc34!\xbc-\x1cm\xf7\x81o\xfa\xa1\xe9\\xbd=\x1b\x16N\xda\xden\xac\x13\xa0]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xa8\xe0fLw\xa4w\xd7\xa71\x92\xa3\xd41\xf6\x81\xc7x\xe5\x9b\x89\xd6\xeb2}y 'l\xd1\xb8_]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-a\xe83\xc3\x15G[)b\xbe\x14\x8a?\x8f\x18\xf4\x8f\x10T\xc7\xc5\xa3$\xec\x1eB\xc5\x87\xddc&quot;\xeb]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xd1z%\x00\xb4nT\x99;\xe4\xfbR\x85C\x15}\x82m\xfc\x04\xfb\\xa3\x1c1h\xd9\xed\xb5N\xec\]" time="0.532" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xb0\xea\xf3\xe0\x8b\x05&gt;\xfc9\x08\xe8\xd4-\xcb\x88\xce\xff&gt;\xb9N7\xbfL=\x1a/\xd4\x0e\xa9\xc2\xa9=]" time="0.533" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xb8&lt;\xc5\xe0\xe2M&gt;\x91vGk\xf2\x07l)\x14ib\xed\x15\xcfK^\xbb\xe1\xdei|`\xe6\xe6\xd0]" time="0.532" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-H\xe9\xb7\x11\x001]\xfa\xc5\xd2\xb6\xc2fn_\x88\xb4\xb9\r\xc4P\xd71 ]C\xde \x0cn\xe5\xa8]" time="0.529" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x1e\x1b\xacy\xcc\xacd\xf2\xb0\xed\xbf\x8c\xab\xc2E*C\xc0\xdaC\x03\xa1\x15\x87\x9a\xc5W\xdf&amp;\xbdI\x9b]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x9f\xc4Rl\xc0|\xe0\xf6!h86^F\xcd\xed\xfbN\x0f\x8aS\x0fY\xc1*\xc3\xdc\xba\*\x9b\xb0]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xdf\xa2~3\xe6\xd2\x83\xb6\x9a\xa3\xccO\xfa[$f\xbe\x1b\xc2\xfe9\xad\xf3\xab\x8eh^\xa6q|\x98_]" time="0.531" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xa1S'p\xcb\x1bM\xe6\xb4\xd9\x7f\x84\x8f\x98\x94s\x97!\xfa\x1e\x1d\xbev?\xcf\xc3\x859\\x00d\x10]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x9b\xc6\x8cVY\x80b\x05bf\x9b\x96\x03\xcd\xcd\x8d\x93\xcc\xe8:\xf2\x02\xa4\x96\xb6*`8VB\xd7\x01]" time="0.527" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-V\x9a,\x12n\x105\xb5\xb6\xf6\x8f\xa1\xe0Y\x12\x0f\xd4\xed\x9b:\xc6%A\x11&amp;\x9b\xc9\xe7\xfb\xad\n\x08]" time="0.524" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xc1\x10\x11\xdc&lt;\xf6\x96T\x13\xb5#\x12P\xbc\x9f\x83-\xdf\xed&lt;;IJG\xa7 B\xab\xe7\x1fD|]" time="0.525" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-:9\xd863&lt;\x0b\x8ao0\xdf!+\xa2-\xb9v\xdc}\xefc\xdb\xe3\xe1Z\xe1/\x92C\x9b\x82\x93]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xf9\xf7\x00y(\x115&gt;\x9f\xd1\xdc\xc8 \xc1\x14y\x9d\x1f\xb8\xce\xf2\x145h_\xb4\xbe0T\xbc%\x18]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-+u\xd0\x18\xfa\x17\xb3\xa8\xd3^Yn\xdf&gt;\xb3Z\x11\xa6ol\xbc\xff=i\xb3\xed\x8ew\xacg$\xdd]" time="0.542" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\x1a\xb7\xa4\xba\xa6)\xde\rc\x9ea\xac\xcf\xdbH\xa7P@\xf2\xfbA\tl\xa5\xee\xe91\x19\xefO\x84\x0f]" time="0.530" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-:0\x12g\xab4l\xba\x07\x89\xdcVq\xa1\xf3\xcc^\x92\x96\xdc'\x0e\xf9\x1b\x04\xf1\xa7?\x00\x0c\x0c1]" time="0.533" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xef\x87\xb10\xe4\x05J\x89}V\xd8r\xb4\xfc\xe2#ao\x00lv\x12\xf9.\x19\xbcNG\x15\xcbnv]" time="0.525" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xbfP\xf3?\xbfO\xde\xdf|&quot;[\xec\x92lL\x134\x04qq\xbb\x8b\xda\xce\xe7_\x81\xdcn\xa5 \xdb]" time="0.528" />
    <testcase classname="tests_alpha.test_crypto.TestHash" name="test_hash[sha3-\xa3\x1e\xe2\x8c\xe5\x8b\x10\x19X[\xf3\x0c\xb8\xf7\xf2\xa6\xd5\xf9\xd0\xff\x81\xf8c\x8ap\xe7\x05\xd6\xa8+\xc7\x03]" time="0.948" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_setup" time="7.654" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_call_mint_or_burn" time="1.097" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_call_approve1" time="1.100" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_call_approve2" time="1.102" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_call_approve3" time="1.112" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_add_liquidity" time="1.100" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_buy_tok" time="1.106" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_transfer" time="1.091" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_sell_tok" time="1.094" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_dex_storage" time="0.533" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_lqt_storage" time="0.521" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestTrades" name="test_tok_storage" time="0.944" />
    <testcase classname="tests_alpha.test_mockup" name="test_list_mockup_protocols" time="0.527" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_dir_exists_nonempty" time="0.529" />
    <testcase classname="tests_alpha.test_mockup" name="test_retrieve_addresses" time="1.066" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_already_initialized" time="1.070" />
    <testcase classname="tests_alpha.test_mockup" name="test_transfer" time="3.174" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXcqTGZX74DxG]" time="0.540" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXaFDF7xZQCpR]" time="0.542" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXkKbtqncJcAz]" time="0.554" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXjjE5cZUeWPy]" time="0.546" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[2020-07-21T17:11:10+02:00-NetXi7C1pyLhQNe]" time="0.546" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXcqTGZX74DxG]" time="0.544" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXaFDF7xZQCpR]" time="0.536" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXkKbtqncJcAz]" time="0.541" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXjjE5cZUeWPy]" time="0.542" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_constants[1970-01-01T00:00:00Z-NetXi7C1pyLhQNe]" time="0.546" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_custom_bootstrap_accounts" time="1.064" />
    <testcase classname="tests_alpha.test_mockup" name="test_transfer_bad_base_dir" time="1.083" />
    <testcase classname="tests_alpha.test_mockup" name="test_config_show_mockup" time="1.074" />
    <testcase classname="tests_alpha.test_mockup" name="test_config_show_mockup_fail" time="1.076" />
    <testcase classname="tests_alpha.test_mockup" name="test_config_init_mockup" time="1.074" />
    <testcase classname="tests_alpha.test_mockup" name="test_config_init_mockup_fail" time="1.071" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-None-None]" time="2.151" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.138" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_number_of_messages_per_commitment_period&quot;: 32765, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100, &quot;sc_rollup_number_of_sections_in_dissection&quot;: 32, &quot;sc_rollup_timeout_period_in_blocks&quot;: 20160}-None]" time="2.164" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_number_of_messages_per_commitment_period&quot;: 32765, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100, &quot;sc_rollup_number_of_sections_in_dissection&quot;: 32, &quot;sc_rollup_timeout_period_in_blocks&quot;: 20160}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.145" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-None-None]" time="2.161" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.134" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_number_of_messages_per_commitment_period&quot;: 32765, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100, &quot;sc_rollup_number_of_sections_in_dissection&quot;: 32, &quot;sc_rollup_timeout_period_in_blocks&quot;: 20160}-None]" time="2.148" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_show_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_number_of_messages_per_commitment_period&quot;: 32765, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100, &quot;sc_rollup_number_of_sections_in_dissection&quot;: 32, &quot;sc_rollup_timeout_period_in_blocks&quot;: 20160}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.140" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-None-None]" time="2.135" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.177" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_number_of_messages_per_commitment_period&quot;: 32765, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100, &quot;sc_rollup_number_of_sections_in_dissection&quot;: 32, &quot;sc_rollup_timeout_period_in_blocks&quot;: 20160}-None]" time="2.178" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_show_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_number_of_messages_per_commitment_period&quot;: 32765, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100, &quot;sc_rollup_number_of_sections_in_dissection&quot;: 32, &quot;sc_rollup_timeout_period_in_blocks&quot;: 20160}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.161" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-None-None]" time="2.165" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-None-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.118" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_number_of_messages_per_commitment_period&quot;: 32765, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100, &quot;sc_rollup_number_of_sections_in_dissection&quot;: 32, &quot;sc_rollup_timeout_period_in_blocks&quot;: 20160}-None]" time="2.164" />
    <testcase classname="tests_alpha.test_mockup" name="test_create_mockup_config_show_init_roundtrip[_get_state_using_config_init_mockup-_get_state_using_config_init_mockup-{&quot;initial_timestamp&quot;: &quot;2021-02-03T12:34:56Z&quot;, &quot;chain_id&quot;: &quot;NetXaFDF7xZQCpR&quot;, &quot;min_proposal_quorum&quot;: 501, &quot;quorum_max&quot;: 7001, &quot;quorum_min&quot;: 2001, &quot;hard_storage_limit_per_operation&quot;: &quot;60001&quot;, &quot;cost_per_byte&quot;: &quot;251&quot;, &quot;baking_reward_fixed_portion&quot;: &quot;20000000&quot;, &quot;baking_reward_bonus_per_slot&quot;: &quot;2500&quot;, &quot;endorsing_reward_per_slot&quot;: &quot;2857&quot;, &quot;origination_size&quot;: 258, &quot;vdf_difficulty&quot;: &quot;1000000000&quot;, &quot;seed_nonce_revelation_tip&quot;: &quot;125001&quot;, &quot;testnet_dictator&quot;: null, &quot;tokens_per_roll&quot;: &quot;8000000001&quot;, &quot;proof_of_work_threshold&quot;: &quot;-2&quot;, &quot;hard_gas_limit_per_block&quot;: &quot;10400001&quot;, &quot;hard_gas_limit_per_operation&quot;: &quot;1040001&quot;, &quot;consensus_committee_size&quot;: 12, &quot;consensus_threshold&quot;: 0, &quot;initial_seed&quot;: null, &quot;minimal_participation_ratio&quot;: {&quot;denominator&quot;: 5, &quot;numerator&quot;: 1}, &quot;minimal_block_delay&quot;: &quot;1&quot;, &quot;delay_increment_per_round&quot;: &quot;1&quot;, &quot;max_slashing_period&quot;: 12, &quot;cycles_per_voting_period&quot;: 7, &quot;blocks_per_stake_snapshot&quot;: 5, &quot;blocks_per_commitment&quot;: 5, &quot;nonce_revelation_threshold&quot;: 5, &quot;blocks_per_cycle&quot;: 9, &quot;preserved_cycles&quot;: 3, &quot;liquidity_baking_toggle_ema_threshold&quot;: 1000000000, &quot;liquidity_baking_subsidy&quot;: &quot;2500000&quot;, &quot;liquidity_baking_sunset_level&quot;: 1024, &quot;max_operations_time_to_live&quot;: 120, &quot;frozen_deposits_percentage&quot;: 10, &quot;ratio_of_frozen_deposits_slashed_per_double_endorsement&quot;: {&quot;numerator&quot;: 1, &quot;denominator&quot;: 2}, &quot;double_baking_punishment&quot;: &quot;640000001&quot;, &quot;cache_script_size&quot;: 100000001, &quot;cache_stake_distribution_cycles&quot;: 10, &quot;cache_sampler_state_cycles&quot;: 10, &quot;tx_rollup_enable&quot;: false, &quot;tx_rollup_origination_size&quot;: 30000, &quot;tx_rollup_hard_size_limit_per_inbox&quot;: 100000, &quot;tx_rollup_hard_size_limit_per_message&quot;: 5000, &quot;tx_rollup_commitment_bond&quot;: &quot;10000000000&quot;, &quot;tx_rollup_finality_period&quot;: 2000, &quot;tx_rollup_withdraw_period&quot;: 123456, &quot;tx_rollup_max_inboxes_count&quot;: 2218, &quot;tx_rollup_max_messages_per_inbox&quot;: 1010, &quot;tx_rollup_max_withdrawals_per_batch&quot;: 255, &quot;tx_rollup_max_commitments_count&quot;: 666, &quot;tx_rollup_cost_per_byte_ema_factor&quot;: 321, &quot;tx_rollup_max_ticket_payload_size&quot;: 10240, &quot;tx_rollup_rejection_max_proof_size&quot;: 30000, &quot;tx_rollup_sunset_level&quot;: 3473409, &quot;dal_parametric&quot;: {&quot;feature_enable&quot;: true, &quot;number_of_slots&quot;: 64, &quot;number_of_shards&quot;: 1024, &quot;endorsement_lag&quot;: 1, &quot;availability_threshold&quot;: 25}, &quot;sc_rollup_enable&quot;: false, &quot;sc_rollup_origination_size&quot;: 6314, &quot;sc_rollup_challenge_window_in_blocks&quot;: 20160, &quot;sc_rollup_max_number_of_messages_per_commitment_period&quot;: 32765, &quot;sc_rollup_stake_amount&quot;: &quot;42000000&quot;, &quot;sc_rollup_commitment_period_in_blocks&quot;: 40, &quot;sc_rollup_max_lookahead_in_blocks&quot;: 30000, &quot;sc_rollup_max_active_outbox_levels&quot;: 20160, &quot;sc_rollup_max_outbox_messages_per_level&quot;: 100, &quot;sc_rollup_number_of_sections_in_dissection&quot;: 32, &quot;sc_rollup_timeout_period_in_blocks&quot;: 20160}-[{&quot;name&quot;: &quot;bootstrap0&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk2uqQB9AY4FvioK2YMdfmyMrer5R8mGFyuaLLFfSRo8EoyNdht3&quot;, &quot;amount&quot;: &quot;2000000000000&quot;}, {&quot;name&quot;: &quot;bootstrap1&quot;, &quot;sk_uri&quot;: &quot;unencrypted:edsk3gUfUPyBSfrS9CCgmCiQsTCHGkviBDusMxDJstFtojtc1zcpsh&quot;, &quot;amount&quot;: &quot;1000000000000&quot;}]]" time="2.129" />
    <testcase classname="tests_alpha.test_mockup" name="test_transfer_rpc" time="3.711" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos0]" time="1.067" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos1]" time="1.071" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos2]" time="1.066" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos3]" time="1.080" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos4]" time="1.076" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command0-protos5]" time="1.072" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos0]" time="1.110" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos1]" time="1.067" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos2]" time="1.077" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos3]" time="1.074" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos4]" time="1.092" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command1-protos5]" time="1.078" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos0]" time="1.071" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos1]" time="1.068" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos2]" time="1.064" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos3]" time="1.075" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos4]" time="1.076" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command2-protos5]" time="1.076" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos0]" time="1.073" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos1]" time="1.064" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos2]" time="1.072" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos3]" time="1.070" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos4]" time="1.073" />
    <testcase classname="tests_alpha.test_mockup" name="test_proto_mix[command3-protos5]" time="1.073" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_setup_network" time="6.734" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_wait_for_protocol" time="0.537" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_on_vote_file" time="4.224" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_off_vote_file" time="4.224" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_pass_vote_file" time="4.225" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_nonexistent_vote_file" time="4.224" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_invalid_json" time="4.224" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_default_file_location" time="4.223" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_vote_caching" time="6.225" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_path_overrides_default_location" time="4.223" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_true_vote_file" time="4.228" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_false_vote_file" time="4.224" />
    <testcase classname="tests_alpha.test_per_block_votes.TestAllPerBlockVotes" name="test_wrong_key" time="4.692" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletImportKey" name="test_import_key_no_force" time="12.904" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_non_previously_saved" time="6.310" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletImportKey" name="test_import_key_force_and_previously_saved" time="7.223" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingStateCorruption" name="test_push_sapling_state_with_id_is_forbidden" time="12.336" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingStateCorruption" name="test_originate_with_empty" time="1.098" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingStateCorruption" name="test_originate_with_id_is_forbidden" time="0.952" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_setup_network" time="31.220" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_topology" time="2.915" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_wait_for_alpha" time="3.074" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_network_gen_operations" time="121.567" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_kill_baker" time="0.455" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_synchronize" time="2.621" />
    <testcase classname="tests_alpha.test_tenderbake_long_dynamic_bake.TestAllDaemonsWithOperationsRingTopo" name="test_check_operations" time="4.939" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_delegates" time="7.111" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_no_service_1" time="0.522" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_no_service_2" time="0.521" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_no_service_3" time="0.521" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_bake" time="0.550" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_sign_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.522" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_sign_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.525" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_sign_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.519" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_sign_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.520" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_check_message[bootstrap1-msg1-edsigtz68o4FdbpvycnAMDLaa7hpmmhjDxhx4Zu3QWHLYJtcY1mVhW9m6CCvsciFXwf1zLmah8fJP51cqaeaciBPGy5osH11AnR]" time="0.522" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_check_message[bootstrap2-msg2-edsigtZqhR5SW6vbRSmqwzfS1KiJZLYLeFhLcCEw7WxjBDxotVx83M2rLe4Baq52SUTjxfXhQ5J3TabCwqt78kNpoU8j42GDEk4]" time="0.519" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_check_message[bootstrap3-msg3-edsigu2PvAWxVYY3jQFVfBRW2Dg61xZMNesHiNbwCTmpJSyfcJMW8Ch9WABHqsgHQRBaSs6zZNHVGXfHSBnGCxT9x2b49L2zpMW]" time="0.533" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_check_message[bootstrap4-msg4-edsigu5jieost8eeD3JwVrpPuSnKzLLvR3aqezLPDTvxC3p41qwBEpxuViKriipxig52NQmJ7AFXTzhM3xgKM2ZaADcSMYWztuJ]" time="0.528" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap1-msg1-False]" time="22.519" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap2-msg2-False]" time="2.270" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap3-msg3-True]" time="2.263" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_fail_inject_signed_arbitrary_ope[bootstrap4-msg4-True]" time="2.287" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_gen_keys" time="1.582" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfers" time="3.263" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_balances" time="1.581" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_bar_foo" time="2.165" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_balances_bar_foo" time="1.065" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_foo_bar" time="2.197" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_balances_foo_bar" time="1.049" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_failure" time="0.533" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_originate_contract_noop" time="2.135" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_to_noop" time="1.084" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_contract_hardlimit" time="3.263" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfers_bootstraps5_bootstrap1" time="4.285" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_activate_accounts" time="3.242" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_transfer_king_queen" time="1.094" />
    <testcase classname="tests_alpha.test_basic.TestRawContext" name="test_duplicate_alias" time="1.483" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_import_simple" time="7.744" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_import_already_present_alias" time="1.073" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_import_passphrase" time="1.078" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_encrypted" time="1.708" />
    <testcase classname="tests_alpha.test_client_without_node.TestImportKeyMnemonic" name="test_gen_key_from_menmonic_bad_mnemonic" time="0.946" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\n]" time="9.296" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\nign]" time="0.903" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_stops_after_three_tries[\n\n\npassword]" time="0.914" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[password\n]" time="0.787" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\npassword\n]" time="0.913" />
    <testcase classname="tests_alpha.test_client_without_node.TestStopLoopPassword" name="test_password_succeed_before_three_tries[\n\npassword\n]" time="1.454" />
    <testcase classname="tests_alpha.test_client_without_node.TestChainId" name="test_chain_id_block_hash" time="0.525" />
    <testcase classname="tests_alpha.test_client_without_node.TestChainId" name="test_chain_id_seed" time="0.521" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigInit" name="test_config_init[None]" time="0.527" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigInit" name="test_config_init[config_dict1]" time="0.520" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[None]" time="1.560" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigInit" name="test_config_init_roundtrip[config_dict1]" time="0.520" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_deploy_view_lib" time="8.687" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_id-(Pair 0 0)-Pair 10 3]" time="3.178" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_add-42-13]" time="3.180" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_fib-0-55]" time="3.280" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_mutual_recursion-0-20]" time="3.183" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_nonexistent_func-True-False]" time="3.187" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_nonexistent_addr-True-False]" time="3.166" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_input_type-5-0]" time="3.174" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_runtime[view_op_toplevel_inconsistent_output_type-True-False]" time="3.219" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_create_contract" time="6.372" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_step_constants" time="3.182" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self[self_after_view]" time="3.723" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self[self_after_fib_view]" time="3.731" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self[self_after_nonexistent_view]" time="3.756" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self_address[self_address_after_view]" time="3.761" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self_address[self_address_after_fib_view]" time="3.754" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_self_address[self_address_after_nonexistent_view]" time="3.736" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_sender[sender_after_view]" time="3.790" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_sender[sender_after_fib_view]" time="3.779" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_sender[sender_after_nonexistent_view]" time="3.786" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_balance_after_view[balance_after_view]" time="3.788" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_balance_after_view[balance_after_fib_view]" time="3.824" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_balance_after_view[balance_after_nonexistent_view]" time="3.758" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_amount_after_view[amount_after_view]" time="3.745" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_amount_after_view[amount_after_fib_view]" time="3.768" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_amount_after_view[amount_after_nonexistent_view]" time="3.758" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_recursion" time="2.692" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_type-the return of a view block did not match the expected type.]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_return_type-the return of a view block did not match the expected type.]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_input_type-operator ADD is undefined between string]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_invalid_arity-primitive view expects 4 arguments]" time="0.522" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_type-only a string can be used here]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.529" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_duplicated_name-the name of view in toplevel should be unique]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_output-Ticket in unauthorized position]" time="0.539" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_dupable_type_input-Ticket in unauthorized position]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_input-big_map or sapling_state type not expected here]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_toplevel_lazy_storage_output-big_map or sapling_state type not expected here]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_invalid_arity-primitive VIEW expects 2 arguments]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_type-unexpected int, only a string]" time="0.521" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_too_long-exceeds the maximum length of 31 characters]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_non_printable_char-string \\[a-zA-Z0-9_.%@\\]]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_name_invalid_char_set-string \\[a-zA-Z0-9_.%@\\]]" time="0.541" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_bad_return_type-two branches don't end with the same stack type]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_dupable_type-Ticket in unauthorized position]" time="0.524" />
    <testcase classname="tests_alpha.test_contract.TestView" name="test_typechecking_error[view_op_lazy_storage-big_map or sapling_state type not expected here]" time="0.948" />
    <testcase classname="tests_alpha.test_contract.TestOrderInTopLevelDoesNotMatter" name="test_shuffle" time="10.076" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{}-10-{ 10 }]" time="7.121" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ 10 }--5-{ -5 ; 10 }]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cons.tz-{ -5 ; 10 }-99-{ 99 ; -5 ; 10 }]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[none.tz-Some 10-Unit-None]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ret_int.tz-None-Unit-(Some 300)]" time="0.523" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{}-{}]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 1 ; 1 ; 1 }-{ 1 ; 2 ; 3 ; 4 }]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_map_block.tz-{0}-{ 1 ; 2 ; 3 ; 0 }-{ 1 ; 3 ; 5 ; 3 }]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[emit.tz-Unit-Unit-Unit]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{}-{}]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{}-{}]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[loop_left.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;Hello&quot;-(Some &quot;Hello&quot;)]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[str_id.tz-None-&quot;abcd&quot;-(Some &quot;abcd&quot;)]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-None-Pair 0 0-None]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 10 5-None]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 0-(Some &quot;&quot;)]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 10-None]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 0 2-(Some &quot;Fo&quot;)]" time="0.538" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 3-None]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some &quot;Foo&quot;-Pair 1 1-(Some &quot;o&quot;)]" time="0.547" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice.tz-Some&quot;FooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFooFoo&quot;-Pair 1 10000-None]" time="0.545" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-None-Pair 0 1-None]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 0-(Some 0x)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 0 1-(Some 0xaa)]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)0]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 2-(Some 0xbbcc)]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 3-None]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some 0xaabbcc-Pair 1 1-(Some 0xbb)1]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[slice_bytes.tz-Some  1 10000-None]" time="0.544" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True False)-(Some (Pair True False))]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False True)-(Some (Pair False True))]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair True True)-(Some (Pair True True))]" time="0.547" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pair_id.tz-None-(Pair False False)-(Some (Pair False False))]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[car.tz-0-(Pair 34 17)-34]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[cdr.tz-0-(Pair 34 17)-17]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-True-(Some False)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not.tz-None-False-(Some True)]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False False)-(Some False)]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair False True)-(Some False)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True False)-(Some False)]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and.tz-None-(Pair True True)-(Some True)]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False False)-(Some False)]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair False True)-(Some True)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True False)-(Some True)]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or.tz-None-(Pair True True)-(Some True)]" time="0.539" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False False)-False]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair False True)-False]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True False)-False]" time="0.545" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_logical_1.tz-False-(Pair True True)-True]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[and_binary.tz-Unit-Unit-Unit]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 4 8)-(Some 12)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 0 8)-(Some 8)]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 8 0)-(Some 8)]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 15 4)-(Some 15)]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 14 1)-(Some 15)]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[or_binary.tz-None-(Pair 7 7)-(Some 7)]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 0)-(Some -1)]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 8)-(Some -9)]" time="0.538" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left 7)-(Some -8)]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -9)-(Some 8)]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Left -8)-(Some 7)]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 0)-(Some -1)]" time="0.538" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 8)-(Some -9)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[not_binary.tz-None-(Right 7)-(Some -8)]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False False)-(Some (Left False))]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair False True)-(Some (Left True))]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True False)-(Some (Left True))]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Left (Pair True True)-(Some (Left False))]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 0)-(Some (Right 0))]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 0 1)-(Some (Right 1))]" time="0.539" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 0)-(Some (Right 1))]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 1 1)-(Some (Right 0))]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 21)-(Some (Right 63))]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[xor.tz-None-Right (Pair 42 63)-(Some (Right 21))]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 8 1))-(Some 16)]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 0))-(Some 0)]" time="0.548" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 0 1))-(Some 0)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 1 2))-(Some 4)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Left (Pair 15 2))-(Some 60)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 8 1))-(Some 4)]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 0))-(Some 0)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 0 1))-(Some 0)]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 1 2))-(Some 0)]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[shifts.tz-None-(Right (Pair 15 2))-(Some 3)]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-&quot;abc&quot;]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{}-&quot;&quot;]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_list.tz-&quot;&quot;-{ &quot;Hello&quot; ; &quot; &quot; ; &quot;World&quot; ; &quot;!&quot; }-&quot;Hello World!&quot;]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xcd }-{ 0xffcd }]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{}-{}]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello_bytes.tz-{}-{ 0xab ; 0xcd }-{ 0xffab ; 0xffcd }]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{}-{}]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }-{ &quot;1&quot; ; &quot;2&quot; ; &quot;3&quot; }]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{}-{}]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_id_map.tz-{&quot;&quot;}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 1 }-{ Elt 0 1 }]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 }-{ Elt 0 0 }]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_id.tz-{}-{ Elt 0 0 ; Elt 3 4 }-{ Elt 0 0 ; Elt 3 4 }]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair { Elt 0 1 } (Some False))]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair {} None)-1-(Pair {} (Some False))]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair { Elt 1 0 } (Some True))]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair { Elt 1 4 ; Elt 2 11 } (Some True))]" time="0.539" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair { Elt 1 4 ; Elt 2 11 } (Some False))]" time="0.548" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair { Elt &quot;foo&quot; 1 } (Some False))]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair {} (Some False))]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair { Elt &quot;foo&quot; 0 } (Some True))]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some True))]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } (Some False))]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{}-10-{}]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;foo&quot; 1 }-10-{ Elt &quot;foo&quot; 11 }]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_map.tz-{ Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 }-15-{ Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 }]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))0]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))0]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))0]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))0]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))0]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))0]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 1 } None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair {} None)-&quot;bar&quot;-(Pair 4 (Some False))]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;foo&quot; 0 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;foo&quot;-(Pair 4 (Some True))]" time="0.539" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;bar&quot;-(Pair 4 (Some True))]" time="0.550" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_string.tz-(Pair { Elt &quot;bar&quot; 4 ; Elt &quot;foo&quot; 11 } None)-&quot;baz&quot;-(Pair 4 (Some False))]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 0 1 } None)-1-(Pair 4 (Some False))1]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair {} None)-1-(Pair 4 (Some False))1]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 0 } None)-1-(Pair 4 (Some True))1]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-1-(Pair 4 (Some True))1]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-2-(Pair 4 (Some True))1]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[big_map_mem_nat.tz-(Pair { Elt 1 4 ; Elt 2 11 } None)-3-(Pair 4 (Some False))1]" time="0.544" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{}-{}]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_id.tz-{}-{ &quot;asdf&quot; ; &quot;bcde&quot; }-{ &quot;asdf&quot; ; &quot;bcde&quot; }]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{ &quot;d&quot; ; &quot;e&quot; ; &quot;f&quot; }-&quot;abcdef&quot;]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat.tz-&quot;abc&quot;-{}-&quot;abc&quot;]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x00ab-{ 0xcd ; 0xef ; 0x00 }-0x00abcdef00]" time="0.538" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{ 0x00 ; 0x11 ; 0x00 }-0x001100]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0xabcd-{}-0xabcd]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_concat_bytes.tz-0x-{}-0x]" time="0.525" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 10 ; 2 ; 1 }-20]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_iter.tz-0-{ 3 ; 6 ; 9 }-162]" time="0.524" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{}-0]" time="0.525" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 }-1]" time="0.524" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.521" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[list_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair {} None)-&quot;Hi&quot;-(Pair {} (Some False))]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hi&quot; } None)-&quot;Hi&quot;-(Pair { &quot;Hi&quot; } (Some True))]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_member.tz-(Pair { &quot;Hello&quot; ; &quot;World&quot; } None)-&quot;&quot;-(Pair { &quot;Hello&quot; ; &quot;World&quot; } (Some False))]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{}-0]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 }-1]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 }-3]" time="0.525" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_size.tz-111-{ 1 ; 2 ; 3 ; 4 ; 5 ; 6 }-6]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{}-0]" time="0.525" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ 1 }-1]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_iter.tz-111-{ -100 ; 1 ; 2 ; 3 }--94]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{}-0]" time="0.525" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 }-1]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 }-3]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_size.tz-111-{ Elt &quot;a&quot; 1 ; Elt &quot;b&quot; 2 ; Elt &quot;c&quot; 3 ;             Elt &quot;d&quot; 4 ; Elt &quot;e&quot; 5 ; Elt &quot;f&quot; 6 }-6]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair {} {})-(Some True)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;c&quot; } { &quot;B&quot; })-(Some False)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;A&quot; } { &quot;B&quot; })-(Some False)]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; } { &quot;B&quot; })-(Some True)]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; } { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; })-(Some True)]" time="0.539" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contains_all.tz-None-(Pair { &quot;B&quot; ; &quot;B&quot; ; &quot;asdf&quot; ; &quot;C&quot; } { &quot;B&quot; ; &quot;C&quot; ; &quot;asdf&quot; })-(Some True)]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;World!&quot; }-{ &quot;Hello World!&quot; }]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{}-{}]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[concat_hello.tz-{}-{ &quot;test1&quot; ; &quot;test2&quot; }-{ &quot;Hello test1&quot; ; &quot;Hello test2&quot; }]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[empty_map.tz-{}-Unit-{ Elt &quot;hello&quot; &quot;world&quot; }]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;hello&quot;-(Pair (Some &quot;hi&quot;) { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })-&quot;&quot;-(Pair None { Elt &quot;hello&quot; &quot;hi&quot; })]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_map_value.tz-(Pair None { Elt &quot;1&quot; &quot;one&quot; ;             Elt &quot;2&quot; &quot;two&quot; })-&quot;1&quot;-(Pair (Some &quot;one&quot;) { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; })]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None {})]" time="0.546" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None { Elt &quot;hello&quot; 4 })]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) {})]" time="0.525" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) { Elt &quot;hello&quot; 5 })]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None { Elt &quot;hello&quot; 4 ; Elt &quot;hi&quot; 5 })]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })0]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[get_and_update_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) { Elt &quot;2&quot; 2 })1]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 0 100 ; Elt 2 100 }-(Pair 2 200)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[map_iter.tz-(Pair 0 0)-{ Elt 1 1 ; Elt 2 100 }-(Pair 3 101)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-True-(Some True)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if.tz-None-False-(Some False)]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Left True)-(Right True)]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[left_right.tz-(Left &quot;X&quot;)-(Right &quot;a&quot;)-(Left &quot;a&quot;)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{}-{}]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[reverse_loop.tz-{&quot;&quot;}-{ &quot;c&quot; ; &quot;b&quot; ; &quot;a&quot; }-{ &quot;a&quot; ; &quot;b&quot; ; &quot;c&quot; }]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;&quot;-&quot;_abc&quot;]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[exec_concat.tz-&quot;?&quot;-&quot;test&quot;-&quot;test_abc&quot;]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[balance.tz-111-Unit-4000000000000]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[level.tz-111-Unit-1]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2000000 1000000)-(Some (Pair 3000000 1000000))]" time="0.556" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[tez_add_sub.tz-None-(Pair 2310000 1010000)-(Some (Pair 3320000 1300000))]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add.tz-Unit-Unit-Unit]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-12039123919239192312931-Unit]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-0-Unit]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[abs.tz-Unit-948-Unit]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-0-(Some 0)]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-1-(Some 1)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[int.tz-None-9999-(Some 9999)]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 15 9)-(Pair 15 24)]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dip.tz-(Pair 0 0)-(Pair 1 1)-(Pair 1 2)]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 1 ; 2 ; 3 ; 4 }-1]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[first.tz-111-{ 4 }-4]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;abcdefg&quot;-0x46fdbcb4ea4eadad5615cdaa17d67f783e01e21149ce2b27de497600b4cd8f4e]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_string.tz-0x00-&quot;12345&quot;-0xb4c26c20de52a4eaf0d8a340db47ad8cb1e74049570859c9a9a3952b204c772f]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-(Some &quot;hello&quot;)-&quot;hello&quot;]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[if_some.tz-&quot;?&quot;-None-&quot;&quot;]" time="0.525" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;world&quot;-(Pair &quot;world&quot; 0)]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;abc&quot;-(Pair &quot;abc&quot; 0)]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_car.tz-(Pair &quot;hello&quot; 0)-&quot;&quot;-(Pair &quot;&quot; 0)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 0)-1-(Pair &quot;hello&quot; 1)]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 500)-3-(Pair &quot;hello&quot; 3)]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[set_cdr.tz-(Pair &quot;hello&quot; 7)-100-(Pair &quot;hello&quot; 100)]" time="0.550" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Some &quot;tz1KqTpEZ7Yob7QbPE4Hy4Wo8fHG8LhKxZSx&quot;)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[hash_key.tz-None-&quot;edpkuJqtDcA2m2muMxViSM47MPsGQzmyjnNTawUPqR8vZTAMcx61ES&quot;-(Some &quot;tz1XPTDmvT3vVE5Uunngmixm7gj7zmdbPq6k&quot;)]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair 100 -100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_timestamp_delta.tz-None-(Pair &quot;1970-01-01T00:00:00Z&quot; 0)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 100 100)-(Some &quot;1970-01-01T00:03:20Z&quot;)]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair -100 100)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_delta_timestamp.tz-None-(Pair 0 &quot;1970-01-01T00:00:00Z&quot;)-(Some &quot;1970-01-01T00:00:00Z&quot;)]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 100)-&quot;1970-01-01T00:00:00Z&quot;]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 -100)-&quot;1970-01-01T00:03:20Z&quot;]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sub_timestamp_delta.tz-111-(Pair 100 2000000000000000000)--1999999999999999900]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 0)-0]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 0 1)--1]" time="0.538" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair 1 0)-1]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[diff_timestamps.tz-111-(Pair &quot;1970-01-01T00:03:20Z&quot; &quot;1970-01-01T00:00:00Z&quot;)-200]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit0]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev.tz-Unit-(Pair -1  (Pair 1 (Pair &quot;foobar&quot; (Pair 0x00AABBCC (Pair 1000 (Pair False (Pair &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot; (Pair &quot;2019-09-09T08:35:33Z&quot; &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;))))))))-Unit1]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair (Some &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot;) (Pair { Unit }  (Pair { True }  (Pair (Pair 19 10) (Pair (Left &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;) (Pair { Elt 0 &quot;foo&quot; ; Elt 1 &quot;bar&quot; }  { PACK } )))))))))-Unit]" time="0.556" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[packunpack_rev_cty.tz-Unit-(Pair &quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot; (Pair Unit (Pair &quot;edsigthTzJ8X7MPmNeEwybRAvdxS1pupqcM5Mk4uCuyZAe7uEk68YpuGDeViW8wSXMrCi5CwoNgqs8V2w8ayB5dMJzrYCHhD8C7&quot; (Pair None (Pair {  }  (Pair {  }  (Pair (Pair 40 -10) (Pair (Right &quot;2019-09-09T08:35:33Z&quot;) (Pair {  }  { DUP ; DROP ; PACK } )))))))))-Unit]" time="0.553" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 -3)-(Pair (Some (Pair -3 1)) (Some (Pair 3 1)) (Some (Pair -3 1)) (Some (Pair 3 1)))]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair 10 0)-(Pair None None None None)]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv.tz-(Pair None None None None)-(Pair -8 2)-(Pair (Some (Pair -4 0)) (Some (Pair -4 0)) (Some (Pair 4 0)) (Some (Pair 4 0)))]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 10))-(Left (Some (Pair 1 0)))]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 3))-(Left (Some (Pair 3 1)))]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Left 0))-(Left None)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 10))-(Right (Some (Pair 1 0)))]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 3))-(Right (Some (Pair 3 1)))]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 10 (Right 0))-(Right None)]" time="0.544" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[ediv_mutez.tz-(Left None)-(Pair 5 (Right 10))-(Right (Some (Pair 0 5)))]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[compare.tz-Unit-Unit-Unit]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comparisons.tz-{}-{ -9999999; -1 ; 0 ; 1 ; 9999999 }-{ { False ; False ; False ; True ; True } ;\n    { False ; False ; True ; True ; True } ;\n    { True ; True ; False ; False ; False } ;\n    { True ; True ; True ; False ; False } ;\n    { True ; True ; False ; True ; True } ;\n    { False ; False ; True ; False ; False } }]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[address.tz-None-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-(Some &quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;)]" time="0.554" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[contract.tz-Unit-&quot;tz1cxcwwnzENRdhe2Kb8ZdTrdNy4bFNyScx5&quot;-Unit]" time="0.524" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[create_contract.tz-None-Unit-(Some &quot;KT1Mjjcb6tmSsLm7Cb3DSQszePjfchPM4Uxm&quot;)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mul.tz-Unit-Unit-Unit]" time="0.545" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 2)--2]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 2)--2]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left 0)-0]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Right 0)-0]" time="0.521" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[neg.tz-0-(Left -2)-2]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dign.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dugn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-1]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dropn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-5]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dipn.tz-0-(Pair (Pair (Pair (Pair 1 2) 3) 4) 5)-6]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 17 (Pair 16 (Pair 15 (Pair 14 (Pair 13 (Pair 12 (Pair 11 (Pair 10 (Pair 9 (Pair 8 (Pair 7 (Pair 6 (Pair 5 (Pair 4 (Pair 3 (Pair 2 1))))))))))))))))-Unit]" time="0.615" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dig_eq.tz-Unit-(Pair 2 (Pair 3 (Pair 12 (Pair 16 (Pair 10 (Pair 14 (Pair 19 (Pair 9 (Pair 18 (Pair 6 (Pair 8 (Pair 11 (Pair 4 (Pair 13 (Pair 15 (Pair 5 1))))))))))))))))-Unit]" time="0.613" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec.tz-14-38-52]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[pexec_2.tz-{ 0 ; 1 ; 2 ; 3}-4-{ 0 ; 7 ; 14 ; 21 }]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-None-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some 0x7a06a770)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[chain_id_store.tz-(Some &quot;NetXdQprcVkpaWU&quot;)-Unit-(Some &quot;NetXdQprcVkpaWU&quot;)]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_entrypoint.tz-Unit-Left (Left 0)-Unit]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_with_default_entrypoint.tz-Unit-Unit-Unit]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[self_address.tz-Unit-Unit-Unit]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[unpair.tz-Unit-Unit-Unit]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[voting_power.tz-(Pair 0 0)-&quot;edpkuBknW28nW72KG6RoHtYW7p12T6GKc7nAbwYX5m8Wd9sDVC9yav&quot;-(Pair 4000000000000 20000000000000)]" time="0.549" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[keccak.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xb6e16d27ac5ab427a7f68900ac5559ce272dc6c37c82b3e052246c82244c50e4)]" time="0.558" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sha3.tz-None-0x48656c6c6f2c20776f726c6421-(Some 0xf345a219da005ebe9c1a1eaad97bbf38a10c8473e41d0af7fb617caa0c6aa722)]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb.tz-(Pair 0 0 0)-Unit-(Pair 1 2 3)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[uncomb.tz-0-(Pair 1 4 2)-142]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-get.tz-Unit-(Pair 1 4 2 Unit)-Unit]" time="0.541" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set.tz-(Pair 1 4 2 Unit)-Unit-(Pair 2 12 8 Unit)]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[comb-set-2.tz-None-(Pair 1 4 2 Unit)-(Some (Pair 2 4 &quot;toto&quot; 0x01))]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[dup-n.tz-Unit-Unit-Unit]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[sapling_empty_state.tz-{}-Unit-0]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.524" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_z_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.524" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.545" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_nat.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-0-0x0000000000000000000000000000000000000000000000000000000000000000]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-1-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-52435875175126190479447740508185965837690552500527637822603658699938581184514-0x0100000000000000000000000000000000000000000000000000000000000000]" time="0.524" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000-2-0x0200000000000000000000000000000000000000000000000000000000000000]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x5b0ecd0fa853810e356f1eb79721e80b30510fcc3a455f4fc02fdd9a90c5401f-33644916630334844239120348434626468649534186770809802792596996408934105684394-0x2ef123703093cbbbd124e15f2054fa5781ed0b8d092ec3c6e5d76b4ca918a221]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x4147a5ad0a633e4880d2296f08ec5c12d03e3fa4a6b49ecbd16a30a3cfcdbe3f-22620284817922784902564672469917992996328211127984472897491698543785655336309-0x4e387e0ebfb3d1633153c195036e0c0b672955c4a0e420f93ec20a76fe677c62]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-17180093072794558806177035834397932205917577288483739652510482486858834123369-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--1-0x00000000fffffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x0100000000000000000000000000000000000000000000000000000000000000--42-0xd7fffffffefffffffe5bfeff02a4bd5305d8a10908d83933487d9d2953a7ed73]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_z_fr_int.tz-0x8578be1766f92cd82c5e5135c374a03a8562e263ea953a3f9711b0153b7fcf2d-69615968247920749285624776342583898043608129789011377475114141186797415307882-0xfaa60dacea8e26112e524d379720fe4f95fbc5a26f1b1a67e229e26ddecbf221]" time="0.549" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x00 0x00-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x01 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.533" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x00-(Some 0x0100000000000000000000000000000000000000000000000000000000000000)]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[add_bls12_381_fr.tz-None-Pair 0x010000 0x010000-(Some 0x0200000000000000000000000000000000000000000000000000000000000000)]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_bytes_not_padded.tz-None-Unit-(Some 0x0000000000000000000000000000000000000000000000000000000000000000)]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_push_nat.tz-None-Unit-(Some 0x1000000000000000000000000000000000000000000000000000000000000000)]" time="0.551" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x00-0]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x01-1]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0x28db8e57af88d9576acd181b89f24e50a89a6423f939026ed91349fc9af16c27-17832688077013577776524784494464728518213913213412866604053735695200962927400]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_int.tz-0-0xb9e8abf8dc324a010007addde986fe0f7c81fab16d26819d0534b7691c0b0719-11320265829256585830781521966149529460476767408210445238902869222031333517497]" time="0.531" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x02-16-0x1000000000000000000000000000000000000000000000000000000000000000]" time="0.544" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[mutez_to_bls12_381_fr.tz-0x00-257-0x0101000000000000000000000000000000000000000000000000000000000000]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_contract_input_output[bls12_381_fr_to_mutez.tz-0-0x10-16]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[0]" time="0.528" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[1e-06]" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[0.5]" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[1]" time="0.526" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[5]" time="0.527" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[1000]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_balance[8000000000000.0]" time="0.532" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_now" time="0.530" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_level" time="0.529" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;hello&quot;-(Pair 4 (Some &quot;hi&quot;))-big_map_diff0]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;hello&quot; &quot;hi&quot; } None)-&quot;&quot;-(Pair 4 None)-big_map_diff1]" time="0.539" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_big_map_value.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } None)-&quot;1&quot;-(Pair 4 (Some &quot;one&quot;))-big_map_diff2]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{}-(Pair 4 Unit)-big_map_diff3]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff4]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; (Some &quot;three&quot;) }-(Pair 4 Unit)-big_map_diff5]" time="0.538" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;3&quot; None }-(Pair 4 Unit)-big_map_diff6]" time="0.538" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;2&quot; None }-(Pair 4 Unit)-big_map_diff7]" time="0.534" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[update_big_map.tz-(Pair { Elt &quot;1&quot; &quot;one&quot; ; Elt &quot;2&quot; &quot;two&quot; } Unit)-{ Elt &quot;1&quot; (Some &quot;two&quot;) }-(Pair 4 Unit)-big_map_diff8]" time="0.543" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None {})-&quot;hello&quot;-(Pair None 4)-big_map_diff9]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 4) {})-&quot;hello&quot;-(Pair None 4)-big_map_diff10]" time="0.539" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff11]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hello&quot;-(Pair (Some 4) 4)-big_map_diff12]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair (Some 5) { Elt &quot;hello&quot; 4 })-&quot;hi&quot;-(Pair None 4)-big_map_diff13]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff14]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test__big_map_contract_io[get_and_update_big_map.tz-(Pair None { Elt &quot;1&quot; 1 ;             Elt &quot;2&quot; 2 })-&quot;1&quot;-(Pair (Some 1) 4)-big_map_diff15]" time="0.544" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Left Unit)-(Left (Pair 4 5))-big_map_diff0]" time="0.560" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Left (Pair { Elt &quot;3&quot; &quot;three&quot; } { Elt &quot;4&quot; &quot;four&quot; }))))-(Left (Pair 4 5))-big_map_diff1]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Left (Right Unit)))-(Right Unit)-big_map_diff2]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Right Unit)-(Right (Right (Left (Pair { Pair &quot;foo&quot; &quot;bar&quot; } { Pair &quot;gaz&quot; &quot;baz&quot; }) )))-(Left (Pair 4 5))-big_map_diff3]" time="0.541" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }) )-(Right (Right (Right (Left { Pair &quot;3&quot; &quot;three&quot; }))))-(Left (Pair 4 5))-big_map_diff4]" time="0.547" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_big_map_magic[(Left (Pair { Elt &quot;1&quot; &quot;one&quot; } { Elt &quot;2&quot; &quot;two&quot; }))-(Right (Right (Right (Right { &quot;1&quot; }))))-(Left (Pair 4 5))-big_map_diff5]" time="0.545" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_packunpack" time="1.074" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_check_signature" time="1.081" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_hash_consistency_michelson_cli" time="1.620" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 1 257))]" time="0.543" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Left (Pair 123 257))]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 1 257))]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[shifts.tz-None-(Right (Pair 123 257))]" time="0.543" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Left Unit]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_arithmetic_overflow[mul_overflow.tz-Unit-Right Unit]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_fails_annotated_set_car_cdr" time="0.000">
      <skipped type="pytest.skip" message="Bug in annotation system">/home/tezos/.venv/lib/python3.9/site-packages/_pytest/skipping.py:245: Bug in annotation system</skipped>
    </testcase>
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair {} 0)-10-(Pair {} 0)]" time="0.541" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;foo&quot; 1 } 1)-10-(Pair { Elt &quot;foo&quot; 11 } 11)]" time="0.543" />
    <testcase classname="tests_alpha.test_contract_opcodes.TestContractOpcodes" name="test_map_map_sideeffect[map_map_sideeffect.tz-(Pair { Elt &quot;bar&quot; 5 ; Elt &quot;foo&quot; 1 } 6)-15-(Pair { Elt &quot;bar&quot; 20 ; Elt &quot;foo&quot; 16 } 36)]" time="0.972" />
    <testcase classname="tests_alpha.test_injection.TestInjectionAndActivation" name="test_check_resources" time="0.001" />
    <testcase classname="tests_alpha.test_injection.TestInjectionAndActivation" name="test_compute_hash" time="0.045" />
    <testcase classname="tests_alpha.test_injection.TestInjectionAndActivation" name="test_injection" time="19.561" />
    <testcase classname="tests_alpha.test_injection.TestInjectionAndActivation" name="test_check_injected" time="0.533" />
    <testcase classname="tests_alpha.test_injection.TestInjectionAndActivation" name="test_environment_version" time="0.530" />
    <testcase classname="tests_alpha.test_injection.TestInjectionAndActivation" name="test_activation" time="0.559" />
    <testcase classname="tests_alpha.test_injection.TestInjectionAndActivation" name="test_check_protocol" time="13.198" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_proto_known" time="6.723" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_proto_client_known" time="0.548" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_first_protocol" time="0.549" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_activate_proto" time="0.548" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_level1" time="0.550" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_protocol_genesis" time="0.549" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_bake_command" time="1.550" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_level2" time="0.548" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_inject_operations" time="1.640" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_mempool" time="0.560" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_bake_command_2" time="1.552" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_level3" time="0.547" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_a" time="0.545" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_rpc_counter_b" time="0.547" />
    <testcase classname="tests_alpha.test_proto_demo_counter.TestProtoDemo" name="test_get_counter_commands" time="1.503" />
    <testcase classname="tests_alpha.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_delegatable[None]" time="13.759" />
    <testcase classname="tests_alpha.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_spendable[None]" time="3.232" />
    <testcase classname="tests_alpha.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_delegatable[proxy]" time="14.143" />
    <testcase classname="tests_alpha.test_rpc.TestDeprecatedRPCs" name="test_chain_block_context_contract_spendable[proxy]" time="3.678" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_originate_sapling_contract" time="13.924" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_generate_bob" time="1.104" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_list_keys_bob" time="0.549" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_list_keys_with_alice_and_bob" time="1.646" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_0" time="0.555" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_generate_bob_address_1" time="0.545" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_bob_balance" time="0.558" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_shield_bob_address_0" time="3.898" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_contract_balance_after_shielding" time="0.548" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_regenerate_bob_from_mnemonic" time="0.563" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_derive_alice" time="0.556" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_derive_yves" time="0.550" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_generate_alice_address_0" time="0.551" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money_insufficient_funds" time="1.742" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_alice_shields_money" time="3.461" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.bin-False]" time="0.552" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_insufficient_funds[sapling_transaction.json-True]" time="0.552" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_0" time="4.608" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_binary_format" time="4.608" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[alice-100.0]" time="0.551" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_binary_format[bob-100.0]" time="0.555" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_binary_format" time="1.209" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[alice-50.0]" time="0.559" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_binary[bob-150.0]" time="0.557" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_forge_alice_to_bob_address_1_json_format" time="4.596" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[alice-50.0]" time="0.555" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_post_forge_json_format[bob-150.0]" time="0.570" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob_address_1_json_format" time="1.222" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[alice-0.0]" time="0.562" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_successfull_transaction_in_json[bob-200.0]" time="0.558" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_submit_alice_to_bob0[sapling_transaction0.bin-False]" time="0.556" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-200-bob]" time="0.557" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[300-200-bob]" time="0.563" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[2100000000-0-alice]" time="0.556" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_unshields_money_insufficient_funds[100-0-alice]" time="0.566" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_bob_unshields_money" time="9.485" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_state_with_another_client" time="7.598" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_shielded_transfer_using_non_sapling_transfer_method[bootstrap4-bootstrap2]" time="5.810" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[alice-0.0]" time="0.564" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingShieldedTez" name="test_check_sapling_balances_after_calling_smart_contract[bob-110.0]" time="1.016" />
    <testcase classname="tests_alpha.test_bootstrap.TestThresholdZero" name="test_setup_network" time="6.231" />
    <testcase classname="tests_alpha.test_bootstrap.TestThresholdZero" name="test_bootstrap" time="0.953" />
    <testcase classname="tests_alpha.test_bootstrap.TestThresholdOne" name="test_setup_network" time="6.774" />
    <testcase classname="tests_alpha.test_bootstrap.TestThresholdOne" name="test_bootstrap" time="0.538" />
    <testcase classname="tests_alpha.test_bootstrap.TestThresholdOne" name="test_add_node" time="4.396" />
    <testcase classname="tests_alpha.test_bootstrap.TestSplitView" name="test_setup_network" time="12.612" />
    <testcase classname="tests_alpha.test_bootstrap.TestSplitView" name="test_all_nodes_boostrap" time="1.625" />
    <testcase classname="tests_alpha.test_bootstrap.TestSplitView" name="test_pause" time="2.003" />
    <testcase classname="tests_alpha.test_bootstrap.TestSplitView" name="test_disconnect_node" time="1.077" />
    <testcase classname="tests_alpha.test_bootstrap.TestSplitView" name="test_sync_status" time="3.012" />
    <testcase classname="tests_alpha.test_contract.TestBigMapToSelf" name="test_big_map_to_self_origination" time="8.899" />
    <testcase classname="tests_alpha.test_contract.TestBigMapToSelf" name="test_big_map_to_self_transfer" time="2.623" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_deploy_multisig[msig0]" time="15.275" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer[msig0]" time="0.535" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig0]" time="0.535" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig0]" time="1.604" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_failure[msig0]" time="0.541" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_success[msig0]" time="3.257" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_default_entrypoint[msig0]" time="3.248" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig0]" time="5.968" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_arg[msig0]" time="6.549" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig0]" time="0.540" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_too_high[msig0]" time="0.538" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations[msig0]" time="5.409" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig0]" time="0.537" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_change[msig0]" time="4.846" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_withdraw[msig0]" time="4.868" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig0]" time="7.002" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig0]" time="6.982" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_deploy_multisig[msig1]" time="7.053" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer[msig1]" time="0.536" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig1]" time="0.539" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig1]" time="1.596" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_failure[msig1]" time="0.542" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_success[msig1]" time="3.249" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_default_entrypoint[msig1]" time="3.249" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig1]" time="5.987" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_arg[msig1]" time="6.556" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig1]" time="0.541" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_too_high[msig1]" time="0.534" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations[msig1]" time="5.397" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig1]" time="0.537" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_change[msig1]" time="4.862" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_withdraw[msig1]" time="4.845" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig1]" time="6.995" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig1]" time="6.980" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_deploy_multisig[msig2]" time="2.719" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer[msig2]" time="0.537" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig2]" time="0.532" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig2]" time="1.611" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_failure[msig2]" time="0.538" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_success[msig2]" time="3.258" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_default_entrypoint[msig2]" time="0.541" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig2]" time="5.996" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_arg[msig2]" time="1.648" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig2]" time="0.533" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_too_high[msig2]" time="0.533" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations[msig2]" time="1.073" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig2]" time="0.531" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_change[msig2]" time="4.822" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_withdraw[msig2]" time="4.846" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig2]" time="6.985" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig2]" time="6.989" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_deploy_multisig[msig3]" time="2.720" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer[msig3]" time="0.536" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_transfer[msig3]" time="0.534" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_prepare_msig_sign[msig3]" time="1.612" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_failure[msig3]" time="0.539" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_success[msig3]" time="3.248" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_default_entrypoint[msig3]" time="0.540" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_entrypoint[msig3]" time="6.028" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_with_arg[msig3]" time="1.648" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_ill_typed[msig3]" time="0.541" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_transfer_too_high[msig3]" time="0.542" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations[msig3]" time="1.065" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_multiple_operations_failure[msig3]" time="0.538" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_change[msig3]" time="4.861" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_delegate_withdraw[msig3]" time="4.879" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_run_transaction_change_keys_and_threshold[msig3]" time="6.997" />
    <testcase classname="tests_alpha.test_multisig.TestMultisig" name="test_change_keys_and_threshold[msig3]" time="7.409" />
    <testcase classname="tests_alpha.test_multisig.TestUnsupportedMultisig" name="test_deploy_nonmultisig" time="8.753" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[0]" time="14.144" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[1]" time="2.217" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[10]" time="2.216" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[42]" time="2.216" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[100]" time="2.232" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_valid_size_and_update_with_valid_size[65535]" time="2.220" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[-1]" time="0.546" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65536]" time="0.545" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[65598909]" time="0.548" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingMemoSize" name="test_originate_with_invalid_size[908923434]" time="0.977" />
    <testcase classname="tests_alpha.test_tenderbake.TestProtoTenderbake" name="test_init" time="31.735" />
    <testcase classname="tests_alpha.test_tenderbake.TestProtoTenderbake" name="test_wait" time="20.021" />
    <testcase classname="tests_alpha.test_tenderbake.TestProtoTenderbake" name="test_level" time="23.961" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_init_nodes" time="30.546" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_some_bakers" time="0.210" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_activate" time="8.585" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_start_remaining_bakers" time="12.325" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_wait" time="20.021" />
    <testcase classname="tests_alpha.test_tenderbake_incremental_start.TestProtoTenderbakeIncrementalStart" name="test_level" time="33.707" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_init" time="6.685" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_choose_players" time="1.078" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_bake" time="0.558" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_deposit" time="1.063" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_level" time="141.579" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_preendorse" time="2.190" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_transfer" time="0.548" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_endorse" time="2.198" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_transfer_is_pending" time="78.280" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_bake_again" time="3.224" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_level_again" time="0.665" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_balance" time="1.084" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBake" name="test_bake_fail" time="0.965" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_current_period" time="7.750" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_succ_period" time="0.534" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_level_info_offset" time="1.593" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_two_blocks" time="2.182" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_last_block_of_proposal_period" time="1.107" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_listing_is_not_empty" time="0.534" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_inject_proto1" time="3.413" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_known_protocol" time="0.535" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_proposals_is_empty" time="0.539" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_show_voting_period2" time="0.531" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_first_block_of_proposal_period" time="1.101" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_submit_proposals" time="2.206" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_one_block" time="1.104" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_proposals_is_not_empty" time="0.559" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period" time="1.100" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_break_proposal_tie" time="0.542" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_last_block_of_proposal_period" time="2.245" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_listing_is_not_empty2" time="0.548" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_current_proposal" time="0.540" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_first_block_of_cooldown_vote_period" time="1.093" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_submit_ballot" time="1.637" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_until_prev_last_block_of_voting_period2" time="2.176" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_submit_failing_ballot" time="0.537" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_level_info_offset2" time="1.582" />
    <testcase classname="tests_alpha.test_voting.TestManualBaking" name="test_bake_first_block_of_new_proposal_period" time="5.845" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_init" time="14.262" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_level" time="1.049" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_terminate_node_1" time="0.001" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_bake_node_0" time="1.089" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_endorse_node_0" time="78.928" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_restart_node_1" time="1.533" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_start_accuser" time="2.106" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_bake_node_1" time="0.549" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_endorse_node_2" time="248.290" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_restart_node_0" time="1.545" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_check_level" time="1.077" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_bake_block" time="0.568" />
    <testcase classname="tests_alpha.test_accuser.TestAccuser" name="test_double_baking_evidence_generated" time="1.498" />
    <testcase classname="tests_alpha.test_binaries.TestBinaries" name="test_version" time="3.147" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract.tz]" time="7.240" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_rootname.tz]" time="0.543" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_account.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/steps_to_quota.tz]" time="0.543" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/create_contract_flags.tz]" time="0.539" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_breaks[legacy/originator.tz]" time="0.547" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract.tz]" time="0.543" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_rootname.tz]" time="0.541" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_account.tz]" time="0.543" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/steps_to_quota.tz]" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/create_contract_flags.tz]" time="0.546" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_deprecated_typecheck_in_legacy[legacy/originator.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unfailwithable.tz-wrong stack type for instruction FAILWITH]" time="0.541" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unrightable.tz-wrong stack type for instruction RIGHT]" time="0.539" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unleftable.tz-wrong stack type for instruction LEFT]" time="0.559" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_ungetable.tz-wrong stack type for instruction GET]" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpairable.tz-wrong stack type for instruction UNPAIR]" time="0.539" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undug2able.tz-wrong stack type for instruction DUG]" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undugable.tz-wrong stack type for instruction DUG]" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undig2able.tz-wrong stack type for instruction DIG]" time="0.542" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undigable.tz-wrong stack type for instruction DIG]" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undip2able.tz-wrong stack type for instruction DUP]" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undipable.tz-wrong stack type for instruction DUP]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undup2able.tz-wrong stack type for instruction DUP]" time="0.537" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_undropable.tz-wrong stack type for instruction DROP]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable.tz-wrong stack type for instruction DUP]" time="0.539" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[stack_bottom_unpopable_in_lambda.tz-wrong stack type for instruction DUP]" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[pack_operation.tz-operation type forbidden in parameter, storage and constants]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[pack_big_map.tz-big_map or sapling_state type not expected here]" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[invalid_self_entrypoint.tz-Contract has no entrypoint named D]" time="0.549" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[contract_annotation_default.tz-unexpected_default_entrypoint]" time="0.537" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[missing_only_storage_field.tz-Missing contract field: storage]" time="0.542" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[missing_only_code_field.tz-Missing contract field: code]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[missing_only_parameter_field.tz-Missing contract field: parameter]" time="0.535" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[missing_parameter_and_storage_fields.tz-Missing contract field: parameter]" time="0.523" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[multiple_parameter_field.tz-duplicate contract field: parameter]" time="0.528" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[multiple_code_field.tz-duplicate contract field: code]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_field.tz-duplicate contract field: storage]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[multiple_storage_and_code_fields.tz-duplicate contract field: storage]" time="0.525" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[set_update_non_comparable.tz-Type nat\\s+is not compatible with type list operation]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[chain_id_arity.tz-primitive chain_id expects 0 arguments but is given 1]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[big_dip.tz-expected a positive 10-bit integer]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[big_drop.tz-expected a positive 10-bit integer]" time="0.546" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[never_literal.tz-type never has no inhabitant.]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[comb0.tz-PAIR expects an argument of at least 2]" time="0.540" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[comb1.tz-PAIR expects an argument of at least 2]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[uncomb0.tz-UNPAIR expects an argument of at least 2]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[uncomb1.tz-UNPAIR expects an argument of at least 2]" time="0.532" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[dup0.tz-DUP n expects an argument of at least 1]" time="0.530" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_with_parens.tz-big_map or sapling_state type not expected here]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[push_big_map_with_id_without_parens.tz-primitive PUSH expects 2 arguments but is given 4]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[pack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[unpack_sapling_state.tz-big_map or sapling_state type not expected here]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[ticket_dup.tz-ticket nat cannot be used here because it is not duplicable]" time="0.533" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[ticket_unpack.tz-Ticket in unauthorized position]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[ticket_apply.tz-Ticket in unauthorized position]" time="0.531" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[ticket_in_ticket.tz-comparable type expected.Type ticket unit is not comparable]" time="0.536" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[dip_failwith.tz-The FAIL instruction must appear in a tail position.]" time="0.534" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_ill_typecheck[map_failwith.tz-The proper type of the return list cannot be inferred.]" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_zero_transfer_to_implicit_contract" time="0.538" />
    <testcase classname="tests_alpha.test_contract.TestContracts" name="test_zero_transfer_to_nonexistent_contract" time="0.961" />
    <testcase classname="tests_alpha.test_contract.TestChainId" name="test_chain_id_opcode" time="9.392" />
    <testcase classname="tests_alpha.test_contract.TestChainId" name="test_chain_id_authentication_origination" time="2.192" />
    <testcase classname="tests_alpha.test_contract.TestChainId" name="test_chain_id_authentication_first_run" time="3.117" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_empty" time="7.284" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single" time="0.561" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_single_display_names" time="0.537" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_mixed" time="1.079" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-True-results0]" time="0.541" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[csv-False-results1]" time="0.541" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-True-results2]" time="0.537" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashMultiple" name="test_contract_hashes_for_script[tsv-False-results3]" time="0.959" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_literal" time="7.851" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_id" time="0.553" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_origination_diff" time="0.540" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_id" time="0.542" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractBigMapOrigination" name="test_big_map_transfer_diff" time="0.961" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_init" time="18.990" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_level" time="1.636" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_terminate_nodes_1_and_2" time="0.001" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_bake_node_0" time="0.743" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_endorse_node_0" time="90.146" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_bake_node_0_again" time="0.558" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_first_branch" time="141.090" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_terminate_node_0" time="0.001" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_restart_node_2" time="1.532" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_bake_node_2" time="0.558" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_bake_node_2_again" time="0.551" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_second_branch" time="140.160" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_restart_all" time="3.072" />
    <testcase classname="tests_alpha.test_fork.TestFork" name="test_check_head" time="284.526" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_setup" time="7.657" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_mint_or_burn" time="1.093" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve1" time="1.080" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve2" time="1.074" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_call_approve3" time="1.079" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_add_liquidity" time="1.082" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approval" time="1.073" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_approved_transfer" time="1.078" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_remove_liquidity" time="1.076" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_dex_storage" time="0.520" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_lqt_storage" time="0.522" />
    <testcase classname="tests_alpha.test_liquidity_baking.TestAddApproveTransferRemove" name="test_tok_storage" time="0.935" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_init" time="31.291" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_wait_for_two_cycles" time="18.813" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_get_all_blocks" time="151.739" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_cycle_alignment" time="0.001" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_collect_seed_nonce_hashes" time="0.001" />
    <testcase classname="tests_alpha.test_nonce_seed_revelation.TestNonceSeedRevelation" name="test_check_revelations" time="2.338" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingRightMemosize" name="test_shield_with_same_memo_size" time="25.486" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_init" time="6.673" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_choose_players" time="1.078" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_bake" time="0.559" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_level" time="0.531" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_transfer" time="0.542" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_bake_again" time="0.557" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_level_again" time="144.077" />
    <testcase classname="tests_alpha.test_tenderbake_manual_bake.TestManualBakeNullThreshold" name="test_balance" time="1.493" />
    <testcase classname="tests_alpha.test_tls.TestTLS" name="test_bootstrapped" time="0.010">
      <skipped type="pytest.skip" message="requires to install a custom CA">/builds/tezos/tezos/tests_python/tests_alpha/test_tls.py:22: requires to install a custom CA</skipped>
    </testcase>
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_init" time="6.713" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_gen_operations" time="85.375" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_terminate_sandbox" time="1.002" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_baker" time="1.657" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_wait_until_high_enough_level" time="9.833" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_baked" time="144.118" />
    <testcase classname="tests_alpha.test_baker_operations_cli_options.TestBakerExternalOperations" name="test_check_block_after_baked" time="1.085" />
    <testcase classname="tests_alpha.test_contract.TestScriptHashRegression" name="test_contract_hash[client_regtest_custom_scrubber0]" time="7.787" />
    <testcase classname="tests_alpha.test_contract.TestOriginateContractFromContract" name="test_originate_contract_from_contract_origination" time="8.480" />
    <testcase classname="tests_alpha.test_contract.TestOriginateContractFromContract" name="test_originate_contract_from_contract_transfer" time="1.545" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_annotation_length_success" time="7.308" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_annotation_length_failure" time="0.543" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_alphabetic" time="0.542" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_numeral" time="0.545" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_type_invalid_character" time="0.543" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_alphabetic" time="0.542" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_numeral" time="0.544" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_instruction_invalid_character" time="0.547" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic_legacy" time="0.543" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral_legacy" time="0.541" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_alphabetic" time="0.547" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_numeral" time="0.541" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_invalid_character" time="0.547" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_alphabetic" time="0.542" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_numeral" time="0.537" />
    <testcase classname="tests_alpha.test_contract_annotations.TestAnnotations" name="test_field_annotation_in_root_type_invalid_character" time="0.961" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/macro_annotations.tz]" time="7.301" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_ge.tz]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/map_caddaadr.tz]" time="0.560" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmple.tz]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/carn_and_cdrn.tz]" time="0.541" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_neq.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/build_list.tz]" time="0.547" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare.tz]" time="0.545" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/unpair_macro.tz]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_lt.tz]" time="0.541" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/compare_bytes.tz]" time="0.541" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/min.tz]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/fail.tz]" time="0.544" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_le.tz]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_mem.tz]" time="0.542" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmplt.tz]" time="0.543" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/guestbook.tz]" time="0.539" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/take_my_money.tz]" time="0.535" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/max_in_list.tz]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpge.tz]" time="0.541" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpeq.tz]" time="0.540" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert.tz]" time="0.536" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/pair_macro.tz]" time="0.551" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpneq.tz]" time="0.546" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/big_map_get_add.tz]" time="0.546" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/set_caddaadr.tz]" time="0.541" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_eq.tz]" time="0.537" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_gt.tz]" time="0.545" />
    <testcase classname="tests_alpha.test_contract_macros.TestMacroExpansion" name="test_macro_expansion[macros/assert_cmpgt.tz]" time="0.961" />
    <testcase classname="tests_alpha.test_many_bakers.TestManyBakers" name="test_init" time="63.723" />
    <testcase classname="tests_alpha.test_many_bakers.TestManyBakers" name="test_wait" time="30.029" />
    <testcase classname="tests_alpha.test_many_bakers.TestManyBakers" name="test_progress" time="6.210" />
    <testcase classname="tests_alpha.test_many_bakers.TestManyBakers" name="test_check_logs" time="4.691">
      <skipped type="pytest.xfail" message="" />
    </testcase>
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_init" time="19.210" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_level1" time="1.637" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_running_prevalidators" time="1.648" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_mempool_empty" time="171.906" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_transfer" time="0.556" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_mempool_include_transfer" time="1.676" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_bake_for1" time="0.575" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_level2" time="1.623" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_mempools_are_empty" time="1.681" />
    <testcase classname="tests_alpha.test_mempool.TestMempool" name="test_injection_fails_on_mempool_disabled_node" time="1.959" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_init" time="14.700" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_no_peers" time="2.801" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_add_peers" time="2.685" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_check_clique" time="2.691" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_check_tables" time="5.350" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_set_expected_peers" time="5.369" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_expected_peers" time="5.383" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_wrong_expected_peer" time="5.370" />
    <testcase classname="tests_alpha.test_p2p.TestTrustedRing" name="test_check_stat_with_wrong_expected_peers" time="7.671" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_proto_known" time="6.718" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_first_protocol" time="0.541" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_activate_proto" time="0.552" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level1" time="0.542" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_protocol_genesis" time="0.537" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_manual_bake" time="2.621" />
    <testcase classname="tests_alpha.test_proto_demo_noops_manual_bake.TestProtoDemo" name="test_level2" time="0.971" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_add_initial_nodes" time="30.557" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_activate_proto_a" time="0.588" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_client_knows_proto_b" time="0.526" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_proposal_period" time="2.676" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_submit_proto_b_proposal" time="1.677" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_check_proto_b_proposed" time="5.866" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_wait_for_exploration_period" time="17.122" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_delegates_vote_proto_b" time="3.236" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_wait_for_cooldown" time="15.423" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_wait_for_promotion_period" time="15.438" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_vote_in_promotion_phase" time="1.060" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_wait_for_adoption" time="13.215" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_all_nodes_run_proto_b" time="131.215" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_new_chain_progress" time="1.738" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_submit_again" time="1.713" />
    <testcase classname="tests_alpha.test_voting_full.TestVotingFull" name="test_check_logs" time="2.358" />
    <testcase classname="tests_alpha.test_bootstrap.TestThresholdTwo" name="test_setup_network" time="10.038" />
    <testcase classname="tests_alpha.test_bootstrap.TestThresholdTwo" name="test_add_nodes" time="9.015" />
    <testcase classname="tests_alpha.test_bootstrap.TestThresholdTwo" name="test_node_3_bootstrapped" time="0.552" />
    <testcase classname="tests_alpha.test_bootstrap.TestThresholdTwo" name="test_node_1_bootstrapped" time="2.426" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_replay_originate" time="8.588" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_replay_transfer_fail" time="0.562" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_originate" time="1.724" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_balance" time="0.551" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_perform_creation" time="2.803" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname.tz]" time="3.387" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_create_contract_rootname_originate[create_contract_rootname_alt.tz]" time="3.390" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_default_account_originate" time="1.690" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_default_account_transfer_then_bake" time="2.860" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_reveal_signed_preimage_originate" time="1.706" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_wrong_preimage" time="0.558" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_wrong_signature" time="0.561" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_good_preimage_and_signature" time="1.144" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_originate" time="2.253" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity1" time="0.562" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_wrong_identity2" time="0.557" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b3_vote_for_b5" time="1.698" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate1" time="0.548" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b2" time="1.720" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_still_no_delegate2" time="0.551" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_b4_vote_for_b5" time="1.707" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_vote_for_delegate_has_delegate" time="0.554" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_multiple_entrypoints_counter" time="4.007" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_originate_simple_entrypoints" time="2.271" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}&quot;-(Some &quot;{adr}%A&quot;)]" time="0.559" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-string-&quot;{adr}&quot;-(Some &quot;{adr}%B&quot;)]" time="0.554" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-nat-&quot;{adr}&quot;-(Some &quot;{adr}%C&quot;)]" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None0]" time="0.552" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%B&quot;-None]" time="0.552" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%D&quot;-None]" time="0.549" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-unit-&quot;{adr}%A&quot;-None1]" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}%A&quot;-None]" time="0.552" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}%A&quot;-None]" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%A&quot;-(Some &quot;{adr}%A&quot;)]" time="0.559" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-string-&quot;{adr}%B&quot;-(Some &quot;{adr}%B&quot;)]" time="0.556" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-nat-&quot;{adr}%C&quot;-(Some &quot;{adr}%C&quot;)]" time="0.557" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%B&quot;-None]" time="0.553" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}%D&quot;-None]" time="0.553" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[-unit-&quot;{adr}&quot;-None]" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%D-unit-&quot;{adr}&quot;-None]" time="0.554" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%A-int-&quot;{adr}&quot;-None]" time="0.555" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%B-unit-&quot;{adr}&quot;-None]" time="0.569" />
    <testcase classname="tests_alpha.test_contract.TestMiniScenarios" name="test_simple_entrypoints[%C-int-&quot;{adr}&quot;-None]" time="1.022" />
    <testcase classname="tests_alpha.test_contract.TestTypecheckingErrors" name="test_big_map_arity_error" time="7.919" />
    <testcase classname="tests_alpha.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_origination" time="8.588" />
    <testcase classname="tests_alpha.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_add_first_transfer" time="1.146" />
    <testcase classname="tests_alpha.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_clear_transfer" time="1.140" />
    <testcase classname="tests_alpha.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_add_second_transfer" time="1.142" />
    <testcase classname="tests_alpha.test_contract.TestCreateRemoveTickets" name="test_add_clear_tickets_add_third_transfer" time="1.558" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-0-{ 0 }]" time="7.455" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-3-{ 0 ; 1 ; 2 ; 3 }]" time="0.558" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[build_list.tz-{}-10-{ 0 ; 1 ; 2 ; 3 ; 4 ; 5 ; 6 ; 7 ; 8 ; 9 ; 10 }]" time="0.557" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{}-None]" time="0.553" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 1 }-(Some 1)]" time="0.554" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -1 }-(Some -1)]" time="0.556" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)0]" time="0.553" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ 10 ; -1 ; -20 ; 100 ; 0 }-(Some 100)1]" time="0.551" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[max_in_list.tz-None-{ -10 ; -1 ; -20 ; -100 }-(Some -1)]" time="0.554" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 1000000 2000000)-{ False ; False ; True ; False ; True }]" time="0.552" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2000000 1000000)-{ False ; True ; False ; True ; False }]" time="0.550" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare.tz-{}-(Pair 2370000 2370000)-{ True ; False ; False ; True ; True }]" time="0.550" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert.tz-Unit-True-Unit]" time="0.552" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit0]" time="0.550" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_eq.tz-Unit-(Pair -1 -1)-Unit1]" time="0.553" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_neq.tz-Unit-(Pair 0 -1)-Unit]" time="0.551" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_lt.tz-Unit-(Pair -1 0)-Unit]" time="0.554" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair 0 0)-Unit]" time="0.556" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_le.tz-Unit-(Pair -1 0)-Unit]" time="0.557" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_gt.tz-Unit-(Pair 0 -1)-Unit]" time="0.554" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 0)-Unit]" time="0.555" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_ge.tz-Unit-(Pair 0 -1)-Unit]" time="0.559" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpeq.tz-Unit-(Pair -1 -1)-Unit]" time="0.551" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpneq.tz-Unit-(Pair 0 -1)-Unit]" time="0.553" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmplt.tz-Unit-(Pair -1 0)-Unit]" time="0.563" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair -1 0)-Unit]" time="0.558" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmple.tz-Unit-(Pair 0 0)-Unit]" time="0.553" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpgt.tz-Unit-(Pair 0 -1)-Unit]" time="0.577" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 -1)-Unit]" time="0.550" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[assert_cmpge.tz-Unit-(Pair 0 0)-Unit]" time="0.555" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[set_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-3000000-(Pair (Pair 1 2 (Pair (Pair 3 3000000) 4) 5) 6)]" time="0.551" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[map_caddaadr.tz-(Pair (Pair 1 2 (Pair (Pair 3 0) 4) 5) 6)-Unit-(Pair (Pair 1 2 (Pair (Pair 3 1000000) 4) 5) 6)]" time="0.551" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x34)-{ False ; False ; True ; False ; True }]" time="0.560" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33aa)-{ False ; False ; True ; False ; True }]" time="0.552" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x33 0x33)-{ True ; False ; False ; True ; True }]" time="0.552" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_input_output[compare_bytes.tz-{}-(Pair 0x34 0x33)-{ False ; True ; False ; True ; False }]" time="0.554" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert.tz-Unit-False]" time="0.553" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)0]" time="0.557" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_eq.tz-Unit-(Pair 0 -1)1]" time="0.556" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_neq.tz-Unit-(Pair -1 -1)]" time="0.552" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 -1)]" time="0.552" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_lt.tz-Unit-(Pair 0 0)]" time="0.550" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_le.tz-Unit-(Pair 0 -1)]" time="0.556" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair -1 0)]" time="0.556" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_gt.tz-Unit-(Pair 0 0)]" time="0.558" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_ge.tz-Unit-(Pair -1 0)]" time="0.554" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpeq.tz-Unit-(Pair 0 -1)]" time="0.557" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpneq.tz-Unit-(Pair -1 -1)]" time="0.559" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 0)]" time="0.548" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmplt.tz-Unit-(Pair 0 -1)]" time="0.549" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmple.tz-Unit-(Pair 0 -1)]" time="0.557" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair 0 0)]" time="0.548" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpgt.tz-Unit-(Pair -1 0)]" time="0.555" />
    <testcase classname="tests_alpha.test_contract_macros.TestContractMacros" name="test_contract_failures[assert_cmpge.tz-Unit-(Pair -1 0)]" time="1.019" />
    <testcase classname="tests_alpha.test_contract_macros.TestGuestBook" name="test_guestbook" time="11.966" />
    <testcase classname="tests_alpha.test_contract_macros.TestBigmapGetAdd" name="test_bigmap" time="16.550" />
    <testcase classname="tests_alpha.test_injection.TestActivation" name="test_proto_known" time="6.943" />
    <testcase classname="tests_alpha.test_injection.TestActivation" name="test_first_protocol" time="0.554" />
    <testcase classname="tests_alpha.test_injection.TestActivation" name="test_activate_demo" time="0.565" />
    <testcase classname="tests_alpha.test_injection.TestActivation" name="test_level1" time="0.557" />
    <testcase classname="tests_alpha.test_injection.TestActivation" name="test_protocol_genesis" time="0.971" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_init" time="19.888" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_add_nodes" time="12.887" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_sleep_30s" time="30.031" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_add_more_nodes" time="19.231" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_kill_baker" time="0.345" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_synchronize" time="4.439" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_progress" time="0.551" />
    <testcase classname="tests_alpha.test_many_nodes.TestManyNodesBootstrap" name="test_check_logs" time="3.745" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_init" time="8.062" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_activate" time="30.978" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_migration" time="33.767" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_new_proto" time="161.946" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_new_proto_second" time="1.749" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_terminate_node0" time="92.658" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_export_snapshots" time="0.992" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_import_full_snapshot_node1" time="7.474" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_import_rolling_snapshot_node2" time="8.511" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_reconstruct_full_node3" time="14.505" />
    <testcase classname="tests_alpha.test_migration.TestMigration" name="test_rerun_node0" time="5.674" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_first_address_of_key[zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="13.417" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[0-zet13XtyU5Bkasoj1b19sy4DJc7U13XydbxLHqLUdf8Y5tarGbHgFLgDrT6J6FYJoHGL3-0]" time="6.549" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[1-zet13mN26QV67FgPzMSzrigXjKZNMMtCubhi9L3kUePnFYdXqEjc8pmjw1h2wC6NLZf5F-1]" time="6.511" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[2-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="6.561" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[3-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="6.527" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[4-zet12hzbYRRKbWwKPY61FkjLg7CRWTcjooqeH7VH18fA6Vxnwy7WyTrAEqBXmEdHp9woU-4]" time="6.536" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[100-zet14LmgdAzVrTtQKpeuD3f2y7wFSjXTMEexNNuiEWhGimm25enxkqmwmbdFsC4y6YmYx-100]" time="6.507" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[143534-zet14EWNxZYoHJASHFpcCYSfTfQokWSMzdJeV5SfaGEPDtiYiDCX5jz8QkMF5jZaK5F4k-143536]" time="6.540" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[42-zet143WVQUmNodhSe4ytHL6gvtdXYhRp7bywDWASUFYUCMGAS71juXT6AyWY89fjg3eZn-42]" time="6.535" />
    <testcase classname="tests_alpha.test_sapling.TestSaplingWalletAddressGeneration" name="test_generate_address_with_address_index[90870987456348-zet13CiUqFsVEr2LdMnyyUQNL3Nh74sa4LdU6V3oD3YfcizbwuFtftPRYvRrB2zsVaEw1-90870987456348]" time="7.007" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_setup_network" time="36.160" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_wait_for_protocol" time="3.598" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_network_gen_operations_and_add_nodes" time="195.330" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_kill_baker" time="0.455" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_synchronize" time="5.472" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_progress" time="0.544" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_operations" time="5.496" />
    <testcase classname="tests_alpha.test_baker_endorser.TestAllDaemonsWithOperations" name="test_check_logs" time="4.830" />
    <testcase classname="tests_alpha.test_bootstrap.TestManyNodesBootstrap" name="test_init" time="12.994" />
    <testcase classname="tests_alpha.test_bootstrap.TestManyNodesBootstrap" name="test_bootstrap" time="1.114" />
    <testcase classname="tests_alpha.test_bootstrap.TestManyNodesBootstrap" name="test_add_nodes" time="18.225" />
    <testcase classname="tests_alpha.test_bootstrap.TestManyNodesBootstrap" name="test_let_baking" time="10.011" />
    <testcase classname="tests_alpha.test_bootstrap.TestManyNodesBootstrap" name="test_progress" time="0.620" />
    <testcase classname="tests_alpha.test_bootstrap.TestManyNodesBootstrap" name="test_add_one_more_node" time="10.143" />
    <testcase classname="tests_alpha.test_client.TestSimulation" name="test_transfer_simulation" time="9.196" />
    <testcase classname="tests_alpha.test_client.TestSimulation" name="test_transfer_without_simulation" time="0.556" />
    <testcase classname="tests_alpha.test_client.TestSimulation" name="test_delegate_simulation" time="3.356" />
    <testcase classname="tests_alpha.test_client.TestSimulation" name="test_delegate_without_simulation" time="1.035" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigValid" name="test_config_node_port" time="2.194" />
    <testcase classname="tests_alpha.test_client_without_node.TestConfigValid" name="test_config_web_port" time="2.181" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_write_contract" time="0.004" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_originate_first_explosion" time="7.946" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_originate_big_type" time="0.556" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_originate_second_explosion" time="0.689" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_originate_second_explosion_fail" time="0.577" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_typecheck_map_dup_key" time="0.564" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_typecheck_map_bad_ordering" time="0.550" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_typecheck_set_bad_ordering" time="0.553" />
    <testcase classname="tests_alpha.test_contract.TestGasBound" name="test_typecheck_set_no_duplicates" time="1.044" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_unit" time="7.925" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_options" time="2.205" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_unions" time="2.755" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_pair" time="9.279" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_order_of_pairs" time="1.095" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_chain_id" time="2.179" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_signature" time="3.281" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_key" time="1.646" />
    <testcase classname="tests_alpha.test_contract.TestComparables" name="test_comparable_key_different_schemes" time="6.973" />
    <testcase classname="tests_alpha.test_contract.TestTZIP4View" name="test_run_view" time="10.664" />
    <testcase classname="tests_alpha.test_contract_macros.TestBigmap" name="test_bigmap" time="18.658" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_gen_keys" time="7.905" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_store_input" time="8.390" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_amount" time="2.805" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_now" time="3.922" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_transfer_tokens" time="8.401" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_self" time="3.372" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_contract_fails" time="3.377" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_init_proxy" time="1.137" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_source" time="5.034" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_sender" time="5.591" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice" time="1.151" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;p2sigsceCzcDw2AeYDzUonj4JT341WC9Px4wdhHBxbZcG1FhfqFVuG7f2fGCzrEHSAZgrsrQWpxduDPk9qZRgrpzwJnSHC3gZJ&quot;)]" time="0.558" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xeaa9ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.552" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2deaad01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.560" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150733eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.558" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_fails[(Pair 0xe009ab79e8b84ef0 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="0.561" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_slice_success[(Pair 0xe009ab79e8b84ef0e55c43a9a857214d8761e67b75ba63500a5694fb2ffe174acc2de22d01ccb7259342437f05e1987949f0ad82e9f32e9a0b79cb252d7f7b8236ad728893f4e7150742eefdbeda254970f9fcd92c6228c178e1a923e5600758eb83f2a05edd0be7625657901f2ba81eaf145d003dbef78e33f43a32a3788bdf0501000000085341554349535345 &quot;spsig1PPUFZucuAQybs5wsqsNQ68QNgFaBnVKMFaoZZfi1BtNnuCAWnmL9wVy5HfHkR6AeodjVGxpBVVSYcJKyMURn6K1yknYLm&quot;)]" time="1.137" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_string" time="4.505" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_split_bytes" time="4.523" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_set_delegate" time="5.664" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type.tz]" time="1.733" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestContractOnchainOpcodes" name="test_trace_origination[compare_big_type2.tz]" time="2.204" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_forge" time="10.300" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_user_big_forge" time="5.101" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_read" time="6.322" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_bad_ticket" time="4.635" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_utxo" time="8.725" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_split" time="5.261" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_join" time="8.164" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_originations" time="5.914" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_fungible_transfers" time="13.413" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_originations" time="5.858" />
    <testcase classname="tests_alpha.test_contract_onchain_opcodes.TestTickets" name="test_ticket_non_fungible_transfers" time="16.165" />
    <testcase classname="tests_alpha.test_programs.TestProgramsCommands" name="test_convert_script" time="13.641" />
    <testcase classname="tests_alpha.test_programs.TestProgramsCommands" name="test_convert_data" time="13.861" />
  </testsuite>
</testsuites>