
./octez-client --wait none originate sc rollup from bootstrap1 of kind wasm_2_0_0 of type bytes booting with 0061736d0100000001290760047f7f7f7f017f60027f7f017f60057f7f7f7f7f017f60017f0060017f017f60027f7f0060000002610311736d6172745f726f6c6c75705f636f72650a726561645f696e707574000011736d6172745f726f6c6c75705f636f72650c77726974655f6f7574707574000111736d6172745f726f6c6c75705f636f72650b73746f72655f77726974650002030504030405060503010001071402036d656d02000a6b65726e656c5f72756e00060aa001042a01027f41fa002f0100210120002f010021022001200247044041e4004112410041e400410010021a0b0b0800200041c4006b0b4901047f41fc002f0100210241fe002d0000210320002f0100210420011004210520042002460440200041076a200510011a0520042003460440200041016a200141016b10011a0b0b0b2001017f41dc0141f00141840241901c100021004184022000100541840210030b0b38050041e4000b122f6b65726e656c2f656e762f7265626f6f740041f8000b0200010041fa000b0200020041fc000b0200000041fe000b0101 --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 2709.909 units (will add 100 for safety)
Estimated storage: 6520 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.001045
    Expected counter: 1
    Gas limit: 2810
    Storage limit: 6540 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.001045
      payload fees(the block proposer) ....... +ꜩ0.001045
    Smart contract rollup origination:
      Kind: wasm_2_0_0
      Parameter type: bytes
      Boot sector Blake2B hash: '8537f1764abb8d3049d6f76f34bce068a92a2f51b88a5fbc95eecdf7abec0470'
      This smart contract rollup origination was successfully applied
      Consumed gas: 2709.909
      Storage size: 6520 bytes
      Address: [SC_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.63
        storage fees ........................... +ꜩ1.63


./octez-client --wait none send sc rollup message 'hex:["000000001f002501c00c5e4e94a48a49e267873112bbe3cf3373be5b0000000003617578"]' from bootstrap2
Node is bootstrapped.
Estimated gas: 1000.072 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000379
    Expected counter: 1
    Gas limit: 1101
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000379
      payload fees(the block proposer) ....... +ꜩ0.000379
    Smart contract rollup messages submission
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1000.072


./octez-client --wait none execute outbox message of sc rollup '[SC_ROLLUP_HASH]' from '[PUBLIC_KEY_HASH]' for commitment hash '[SC_ROLLUP_COMMITMENT_HASH]' and output proof 0x0300000427658a75d8a3ecf4adc2d557a3d471045fe72ea27718504fd5f2fe337a98550427658a75d8a3ecf4adc2d557a3d471045fe72ea27718504fd5f2fe337a9855850764757261626c65d09aecf89f24640ded702927c7fec3e159017ce1d5bb410d3b832841cf24c1aeec0370766dd068ce1484326b85ebc84114a5b2a587321ea8da4b345bfdb40a13814f5785120503746167c00800000004536f6d650576616c7565810370766d8107627566666572738205696e707574820468656164c00100066c656e677468c00100066f757470757484013181086f7574626f786573860133820468656164c00100066c656e677468c001000134820468656164c00100066c656e677468c0010001358308636f6e74656e7473810130c02800000024000000001f002501c00c5e4e94a48a49e267873112bbe3cf3373be5b00000000036175780468656164c00100066c656e677468c001010136820468656164c00100066c656e677468c001000137820468656164c00100066c656e677468c001000138820468656164c00100066c656e677468c001000132810a6c6173745f6c6576656cc004000000080133810f76616c69646974795f706572696f64c00400009d800134810d6d6573736167655f6c696d6974c002a401047761736dd0411548aca38800ec15c66c2821e0b870407e83da9552b9555bfa84ac5e473ebf0427658a75d8a3ecf4adc2d557a3d471045fe72ea27718504fd5f2fe337a98550000000500000000001f002501c00c5e4e94a48a49e267873112bbe3cf3373be5b0000000003617578 --burn-cap 10
Node is bootstrapped.
Estimated gas: 5921.426 units (will add 100 for safety)
Estimated storage: 5 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  octez-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.001488
    Expected counter: 2
    Gas limit: 6022
    Storage limit: 25 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.001488
      payload fees(the block proposer) ....... +ꜩ0.001488
    Smart contract output message execution:
      Address: [SC_ROLLUP_HASH]
      Cemented commitment: [SC_ROLLUP_COMMITMENT_HASH]
      This smart contract output message execution was successfully applied
      Paid storage size diff: 5 bytes
      Consumed gas: 4718.287
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ0.00125
        storage fees ........................... +ꜩ0.00125
      Internal operations:
        Internal Transaction:
          Amount: ꜩ0
          From: [PUBLIC_KEY_HASH]
          To: [CONTRACT_HASH]
          Entrypoint: aux
          Parameter: 37
          This transaction was successfully applied
          Updated storage: 37
          Storage size: 92 bytes
          Consumed gas: 1203.139

