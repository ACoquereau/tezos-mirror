
./tezos-client --wait none originate sc rollup from '[PUBLIC_KEY_HASH]' of kind arith of type unit booting with  --burn-cap 9999999
Node is bootstrapped.
Estimated gas: 2509.140 units (will add 100 for safety)
Estimated storage: 6626 bytes added (will add 20 for safety)
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000614
    Expected counter: 1
    Gas limit: 2610
    Storage limit: 6646 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000614
      payload fees(the block proposer) ....... +ꜩ0.000614
    Originate smart contract rollup of kind arith and type unit with boot sector ''
      This smart contract rollup origination was successfully applied
      Consumed gas: 2509.140
      Storage size: 6626 bytes
      Address: [SC_ROLLUP_HASH]
      Genesis commitment hash: [SC_ROLLUP_COMMITMENT_HASH]
      Balance updates:
        [PUBLIC_KEY_HASH] ... -ꜩ1.6565
        storage fees ........................... +ꜩ1.6565


./tezos-client --wait none send sc rollup message 'text:["3 3 +","1","1 1 x","3 7 8 + * y","2 2 out"]' from bootstrap1 to '[SC_ROLLUP_HASH]'
Node is bootstrapped.
Estimated gas: 1653.895 units (will add 100 for safety)
Estimated storage: no bytes added
Operation successfully injected in the node.
Operation hash is '[OPERATION_HASH]'
NOT waiting for the operation to be included.
Use command
  tezos-client wait for [OPERATION_HASH] to be included --confirmations 1 --branch [BLOCK_HASH]
and/or an external block explorer to make sure that it has been included.
This sequence of operations was run:
  Manager signed operations:
    From: [PUBLIC_KEY_HASH]
    Fee to the baker: ꜩ0.000494
    Expected counter: 2
    Gas limit: 1754
    Storage limit: 0 bytes
    Balance updates:
      [PUBLIC_KEY_HASH] ... -ꜩ0.000494
      payload fees(the block proposer) ....... +ꜩ0.000494
    Add a message to the inbox of the smart contract rollup at address [SC_ROLLUP_HASH]
      This smart contract rollup messages submission was successfully applied
      Consumed gas: 1654.023
      Resulting inbox state : { rollup = [SC_ROLLUP_HASH]
                                level = 3
                                current messages hash  = [SC_ROLLUP_INBOX_HASH]
                                nb_available_messages = 5
                                nb_messages_in_commitment_period = 5
                                starting_level_of_current_commitment_period = 2
                                message_counter = 5
                                old_levels_messages = hash : [SC_ROLLUP_INBOX_HASH]
                                                      content = [SC_ROLLUP_INBOX_HASH]
                                                        index = 1
                                                        back_pointers =
                                                        [SC_ROLLUP_INBOX_HASH]
                                }
